package colorweaver;

import colorweaver.tools.StringKit;
import colorweaver.tools.TrigTools;
import com.badlogic.gdx.ApplicationAdapter;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application;
import com.badlogic.gdx.backends.lwjgl3.Lwjgl3ApplicationConfiguration;
import com.badlogic.gdx.graphics.GL20;

import java.util.ArrayList;

import static colorweaver.tools.TrigTools.cos_;
import static colorweaver.tools.TrigTools.sin_;

public class HexGenerator extends ApplicationAdapter {
    private int[] palette;
    public static final String NAME = "apolland-63";

    public static void main(String[] arg) {
        Lwjgl3ApplicationConfiguration config = new Lwjgl3ApplicationConfiguration();
        config.setTitle(".hex Palette Generator");
        config.setWindowedMode(640, 480);
        config.setIdleFPS(10);
        config.useVsync(true);
        config.setResizable(false);
        new Lwjgl3Application(new HexGenerator(), config);
        AutomaticPaletteTransformer.main(arg);
        AutomaticPalettizer.main(arg);
    }

    @Override
    public void create() {
        /*
        int[] betts = {
                0x00000000,
                0x000000FF, 0x282828FF, 0x585858FF, 0x868686FF, 0xA2A2A2FF, 0xCBCBCBFF, 0xFFFFFFFF, 0xA6D755FF,
                0x8ABF5EFF, 0x7AA221FF, 0x6E8A31FF, 0x0A4111FF, 0x0F661DFF, 0x147E25FF, 0x229E35FF, 0x42C372FF,
                0x8CE7A6FF, 0x78FAE6FF, 0x00C7A5FF, 0x009282FF, 0x163135FF, 0x21526BFF, 0x3B768FFF, 0x53A1ADFF,
                0x8CDAFFFF, 0x50AAF7FF, 0x3E83EBFF, 0x354AD7FF, 0x1D2DAAFF, 0x152135FF, 0x66397EFF, 0x7E5596FF,
                0xA68ABFFF, 0xDFBFEFFF, 0xC772FFFF, 0x9245E7FF, 0x6E05C3FF, 0x350082FF, 0x721C2FFF, 0xB22E69FF,
                0xE54286FF, 0xFF6EAFFF, 0xFF9AC7FF, 0xFFD7F3FF, 0xE3B3C3FF, 0xCB96A2FF, 0xAA768AFF, 0xCF4929FF,
                0xF3820DFF, 0xFFAA0DFF, 0xFFD3A6FF, 0xFFBB8AFF, 0xE7A67AFF, 0xBB7251FF, 0x82491DFF, 0x513115FF,
                0xB7515AFF, 0x6E5A51FF, 0x8A7A5AFF, 0xB79E5EFF, 0xDFC721FF, 0xFFDF00FF, 0xFFF3B3FF,
        };
        int[] betsy255 = new int[] {
                0x00000000, 0x000000FF, 0x282828FF, 0x585858FF, 0x868686FF, 0xA2A2A2FF, 0xCBCBCBFF, 0xFFFFFFFF,
                0xA6D755FF, 0x8ABF5EFF, 0x7AA221FF, 0x6E8A31FF, 0x0A4111FF, 0x0F661DFF, 0x147E25FF, 0x229E35FF,
                0x42C372FF, 0x8CE7A6FF, 0x78FAE6FF, 0x00C7A5FF, 0x009282FF, 0x163135FF, 0x21526BFF, 0x3B768FFF,
                0x53A1ADFF, 0x8CDAFFFF, 0x50AAF7FF, 0x3E83EBFF, 0x354AD7FF, 0x1D2DAAFF, 0x152135FF, 0x66397EFF,
                0x7E5596FF, 0xA68ABFFF, 0xDFBFEFFF, 0xC772FFFF, 0x9245E7FF, 0x6E05C3FF, 0x350082FF, 0x721C2FFF,
                0xB22E69FF, 0xE54286FF, 0xFF6EAFFF, 0xFF9AC7FF, 0xFFD7F3FF, 0xE3B3C3FF, 0xCB96A2FF, 0xAA768AFF,
                0xCF4929FF, 0xF3820DFF, 0xFFAA0DFF, 0xFFD3A6FF, 0xFFBB8AFF, 0xE7A67AFF, 0xBB7251FF, 0x82491DFF,
                0x513115FF, 0xB7515AFF, 0x6E5A51FF, 0x8A7A5AFF, 0xB79E5EFF, 0xDFC721FF, 0xFFDF00FF, 0xFFF3B3FF,
                0xC99A14FF, 0xFEC64CFF, 0xC29D48FF, 0xBA7825FF, 0xFFAA4DFF, 0xD39A5EFF, 0xEEA45CFF, 0xD1AB8CFF,
                0xAD6329FF, 0xD78350FF, 0xB15301FF, 0xE35A00FF, 0xCF5E2CFF, 0x672F16FF, 0xAA5635FF, 0xC73908FF,
                0xA23111FF, 0x9C5A4DFF, 0xFB6440FF, 0xA47F71FF, 0x8B1005FF, 0xF58D7CFF, 0xC61300FF, 0x7B2921FF,
                0xED6858FF, 0x66090EFF, 0x933529FF, 0xE73129FF, 0xB71719FF, 0xE79C94FF, 0xBF3C3DFF, 0xF80334FF,
                0xC86160FF, 0xD08684FF, 0xEB4250FF, 0xA81A31FF, 0xD52144FF, 0xF46774FF, 0xEA064CFF, 0x580D26FF,
                0xD66B7BFF, 0xB01A4DFF, 0x2C0613FF, 0xDD4668FF, 0xF22B70FF, 0xCF1562FF, 0x8C385DFF, 0x845A6BFF,
                0xE7298CFF, 0xB6036DFF, 0x60324AFF, 0xD76FA4FF, 0x751752FF, 0xD40D98FF, 0x49103EFF, 0xBF2891FF,
                0xAA4289FF, 0xF353C8FF, 0x945D81FF, 0x93217DFF, 0xDC32BCFF, 0xDF94C8FF, 0xF917E0FF, 0xC74DB4FF,
                0xE773D6FF, 0xFC78ECFF, 0xAF06A1FF, 0x9A2099FF, 0xE557E0FF, 0xD631DEFF, 0xB82BC5FF, 0xEA1AF8FF,
                0x9B46A1FF, 0x6B1873FF, 0x50105AFF, 0x9C29B5FF, 0xBE14E5FF, 0xC050E8FF, 0xD897FCFF, 0x513562FF,
                0xA36BC5FF, 0xCEADE7FF, 0x7D28CAFF, 0x5F1E9EFF, 0x9C6EF9FF, 0xAC90E9FF, 0xBBB2D9FF, 0x6843C2FF,
                0x7F64CEFF, 0x762BFEFF, 0x8E86BDFF, 0x6329E7FF, 0x4A3896FF, 0x5F0AF2FF, 0x5A5A86FF, 0x21105AFF,
                0x626BFEFF, 0x29189CFF, 0xB3B3B3FF, 0x474747FF, 0xE9E9E9FF, 0x6B6B6BFF, 0x2C1ABFFF, 0x394ABDFF,
                0x2910DEFF, 0xC4D7FCFF, 0x4461D2FF, 0x88AEF9FF, 0x2643FBFF, 0x1E3283FF, 0x0838CFFF, 0x627FAAFF,
                0x115DF3FF, 0x012757FF, 0x29426BFF, 0x2757A7FF, 0x185ABFFF, 0x207FE3FF, 0x396B9CFF, 0x3D78B3FF,
                0x6BA4CEFF, 0x0B9ADBFF, 0x81C5D9FF, 0x42A5C6FF, 0xAFC7CFFF, 0x6E868EFF, 0x52CEEFFF, 0x39BDC6FF,
                0x23E1EFFF, 0xAFF2F5FF, 0x082423FF, 0x83EBE1FF, 0x21938FFF, 0x7AC6BEFF, 0x104947FF, 0x49B39AFF,
                0x296B5AFF, 0x319E7AFF, 0x41FFC6FF, 0x65E1B6FF, 0x39DAA3FF, 0x038963FF, 0x537166FF, 0x31B57FFF,
                0x24F59BFF, 0x49FF8AFF, 0x06EB6FFF, 0x39AD5AFF, 0x6BB87AFF, 0x378D43FF, 0x83FF8DFF, 0xD6F7D6FF,
                0x809D81FF, 0x4C724AFF, 0x4FD456FF, 0x66F562FF, 0x07FF1BFF, 0x4AEF31FF, 0x46AF32FF, 0x39C621FF,
                0x7BDA6AFF, 0x29A407FF, 0x97BF8DFF, 0x62FF39FF, 0x45892AFF, 0x639356FF, 0x314A29FF, 0x16210BFF,
                0x213118FF, 0x64CD0AFF, 0x7BEE16FF, 0x72B546FF, 0x99F841FF, 0xBFEF94FF, 0x96DF1DFF, 0x9FD005FF,
                0xC7FF2DFF, 0x8CAD29FF, 0xA6B925FF, 0x6B7321FF, 0xBCC685FF, 0xDAE45CFF, 0x969735FF, 0xCBC26CFF,
                0xBDB573FF, 0x52490EFF, 0xFBE76AFF, 0xA58C29FF, 0xDAD0B0FF, 0x8E7211FF, 0xEFCA64FF, 0x867545FF,
        };

        int[] yam255 = {
                0x00000000, 0x000000FF, 0x050403FF, 0x0F0D0CFF, 0x1A1817FF, 0x292625FF, 0x393534FF, 0x4A4645FF,
                0x5C5957FF, 0x726E6CFF, 0x878381FF, 0x9D9997FF, 0xB6B2B0FF, 0xCFCAC8FF, 0xE9E4E2FF, 0xFBFFFFFF,
                0x341714FF, 0x633D38FF, 0x9B6D67FF, 0xDBA69EFF, 0x342014FF, 0x63493AFF, 0x9B7C6BFF, 0xDAB7A3FF,
                0x322215FF, 0x624D3CFF, 0x98806CFF, 0xD8BCA6FF, 0x312818FF, 0x605541FF, 0x978B73FF, 0xD8CAB0FF,
                0x32351CFF, 0x616647FF, 0x999E7BFF, 0xD8DEB7FF, 0x273419FF, 0x546444FF, 0x8A9D77FF, 0xC9DEB4FF,
                0x15361DFF, 0x406546FF, 0x739E7AFF, 0xAEDEB5FF, 0x143535FF, 0x3F6565FF, 0x749F9EFF, 0xB1E0DFFF,
                0x0B1934FF, 0x2F4265FF, 0x5D759EFF, 0x94B0DFFF, 0x201435FF, 0x493C66FF, 0x7B6C9EFF, 0xB6A6DFFF,
                0x291537FF, 0x563D67FF, 0x8B6E9FFF, 0xC8A8E0FF, 0x321835FF, 0x614164FF, 0x9A739DFF, 0xD9AEDDFF,
                0x71271DFF, 0xA65042FF, 0xDD7D6DFF, 0x6F361DFF, 0xA36144FF, 0xDD9272FF, 0x713C21FF, 0xA56749FF,
                0xE09A78FF, 0x73401DFF, 0xA76D46FF, 0xDF9E73FF, 0x704720FF, 0xA37449FF, 0xDCA878FF, 0x6F5025FF,
                0xA27E4FFF, 0xDBB480FF, 0x6F5924FF, 0xA48A51FF, 0xDEC282FF, 0x6F6C29FF, 0xA2A057FF, 0xDBD98AFF,
                0x63722BFF, 0x96A85AFF, 0xCFE48EFF, 0x59762BFF, 0x8AAA59FF, 0xC0E58CFF, 0x4B7427FF, 0x79A855FF,
                0xAEE387FF, 0x31752CFF, 0x5FAA59FF, 0x93E48BFF, 0x1F724CFF, 0x52A77CFF, 0x87E2B1FF, 0x25756AFF,
                0x56A89BFF, 0x8AE3D3FF, 0x1D6877FF, 0x4D9AABFF, 0x81D3E5FF, 0x1E4B75FF, 0x4779A9FF, 0x76ADE2FF,
                0x1B1F74FF, 0x3949A9FF, 0x6077E2FF, 0x351D72FF, 0x5B47A7FF, 0x8A77E2FF, 0x451F76FF, 0x6F4AABFF,
                0x9F78E4FF, 0x4F2071FF, 0x7D4BA7FF, 0xB17BE0FF, 0x5A2173FF, 0x8B4CA7FF, 0xC27DE2FF, 0x672174FF,
                0x9B4EAAFF, 0xD37EE4FF, 0x731F58FF, 0xA84985FF, 0xE177B9FF, 0x731F2FFF, 0xA84956FF, 0xE17582FF,
                0xB8291FFF, 0xE54D3EFF, 0xBA3B1EFF, 0xE65D3EFF, 0xB54D24FF, 0xE27246FF, 0xB85922FF, 0xE67E46FF,
                0xB85E25FF, 0xE58349FF, 0xBA652AFF, 0xE4884BFF, 0xB86329FF, 0xE6894CFF, 0xB46D23FF, 0xE3964BFF,
                0xB67A2CFF, 0xE2A151FF, 0xBC832AFF, 0xE7AA4FFF, 0xB29231FF, 0xE0BE5AFF, 0xB9A72CFF, 0xE5D357FF,
                0xB9C034FF, 0xE2EB5DFF, 0xA8C03BFF, 0xD0EB63FF, 0x96BC35FF, 0xC0EA5FFF, 0x8AC035FF, 0xB1EB5DFF,
                0x72C131FF, 0x98EC59FF, 0x51BF36FF, 0x78EC5EFF, 0x1BBD3AFF, 0x4FEA60FF, 0x1ABD82FF, 0x51EBAAFF,
                0x17BEA8FF, 0x4FEAD2FF, 0x29BEC2FF, 0x58E9ECFF, 0x1C9EC2FF, 0x4CC9EEFF, 0x1681C1FF, 0x41A7EDFF,
                0x0C41BEFF, 0x2B65EBFF, 0x3124BDFF, 0x484BEAFF, 0x4D20BFFF, 0x6946EBFF, 0x6725BCFF, 0x894AE9FF,
                0x7224BBFF, 0x964AE8FF, 0x7F26BEFF, 0xA64DECFF, 0x8B26BEFF, 0xB34DECFF, 0x9827BAFF, 0xC34EE7FF,
                0xA626BCFF, 0xD24FE9FF, 0xB42DBBFF, 0xE155E8FF, 0xBB2885FF, 0xE64BA9FF, 0xB92855FF, 0xE64C75FF,
                0xFD2918FF, 0xFA4411FF, 0xFD580BFF, 0xFC6A1AFF, 0xF8721EFF, 0xFD740EFF, 0xF9770FFF, 0xFA7E17FF,
                0xFA831BFF, 0xFD8F14FF, 0xFB9A1EFF, 0xFDA514FF, 0xF7B321FF, 0xF8C41FFF, 0xFDDC27FF, 0xFBF42CFF,
                0xEDFF21FF, 0xE1FF31FF, 0xD0FF2BFF, 0xBEFF23FF, 0xA6FF1EFF, 0x8BFF16FF, 0x6EFF23FF, 0x28FF2EFF,
                0x00FF74FF, 0x00FFB0FF, 0x00FFD8FF, 0x00FCF2FF, 0x00EBFFFF, 0x00CEFFFF, 0x00ADFFFF, 0x007EFFFF,
                0x2200FFFF, 0x4300FFFF, 0x5F00FFFF, 0x7900FFFF, 0x8F05FFFF, 0x9B13FEFF, 0xA600FFFF, 0xB510FFFF,
                0xBD15FFFF, 0xCA11FFFF, 0xE10AFFFF, 0xED16FCFF, 0xFD15DFFF, 0xFD1BA4FF, 0xFF1271FF, 0xFE173BFF,
        };

        int[] yama255 = {
                0x00000000, 0x000000FF, 0x050403FF, 0x0F0D0CFF, 0x1A1817FF, 0x292625FF, 0x393534FF, 0x4A4645FF,
                0x5C5957FF, 0x726E6CFF, 0x878381FF, 0x9D9997FF, 0xB6B2B0FF, 0xCFCAC8FF, 0xE9E4E2FF, 0xFBFFFFFF,
                0x2B1C1BFF, 0x574241FF, 0x8C7472FF, 0xC9ADAAFF, 0x2B2320FF, 0x574D48FF, 0x8D817BFF, 0xCABCB6FF,
                0x292521FF, 0x56504AFF, 0x8A847DFF, 0xC7C0B8FF, 0x2D2824FF, 0x5B554FFF, 0x918B84FF, 0xD1CAC2FF,
                0x313429FF, 0x606456FF, 0x989D8CFF, 0xD7DCCAFF, 0x2A3226FF, 0x576252FF, 0x8D9987FF, 0xCDDAC6FF,
                0x203324FF, 0x4B6150FF, 0x7F9984FF, 0xBCD9C1FF, 0x243235FF, 0x4F6164FF, 0x85999DFF, 0xC3DADFFF,
                0x141A28FF, 0x394255FF, 0x6A758AFF, 0xA3AFC8FF, 0x1B1A2AFF, 0x434156FF, 0x74728BFF, 0xAEADC9FF,
                0x221C2EFF, 0x4C455CFF, 0x7E7691FF, 0xBAB1D0FF, 0x2C1D2EFF, 0x5A475CFF, 0x907A93FF, 0xCFB5D2FF,
                0x5D362DFF, 0x8C5E53FF, 0xC08C7FFF, 0x5D3F32FF, 0x8E6A5BFF, 0xC49C8BFF, 0x5E4536FF, 0x8F7160FF,
                0xC6A491FF, 0x624839FF, 0x927463FF, 0xC8A692FF, 0x624D3CFF, 0x927A67FF, 0xC8AD98FF, 0x645341FF,
                0x94826CFF, 0xCCB7A0FF, 0x635C41FF, 0x968E6FFF, 0xCEC5A3FF, 0x6E6B48FF, 0xA19D76FF, 0xDAD6ABFF,
                0x676F49FF, 0x9AA479FF, 0xD4DFB0FF, 0x627149FF, 0x93A478FF, 0xCBDEADFF, 0x546F46FF, 0x84A374FF,
                0xBADCA8FF, 0x466F43FF, 0x75A271FF, 0xA9DCA5FF, 0x406B55FF, 0x6F9F86FF, 0xA4D9BCFF, 0x4A6E69FF,
                0x78A09AFF, 0xADD9D2FF, 0x41636EFF, 0x6D949FFF, 0xA1CCD9FF, 0x324B64FF, 0x5C7795FF, 0x8BABCBFF,
                0x20285AFF, 0x424F8AFF, 0x6C7CBFFF, 0x30295BFF, 0x56518CFF, 0x8681C4FF, 0x3E2D5FFF, 0x675590FF,
                0x9783C6FF, 0x482D5EFF, 0x755690FF, 0xA886C7FF, 0x513060FF, 0x7F5990FF, 0xB58AC9FF, 0x5A3361FF,
                0x8B5E93FF, 0xC18ECAFF, 0x623251FF, 0x925A7DFF, 0xC889B0FF, 0x5D3239FF, 0x8D5A61FF, 0xC2878FFF,
                0x9E453AFF, 0xC76558FF, 0x9C5241FF, 0xC4735FFF, 0x9C5D46FF, 0xC78168FF, 0x9E6747FF, 0xC98C69FF,
                0xA16949FF, 0xCC8F6BFF, 0xA3704DFF, 0xCA936EFF, 0xA16F4CFF, 0xCC956FFF, 0x9D7750FF, 0xCAA075FF,
                0xA28157FF, 0xCCA87BFF, 0xA68A5EFF, 0xCFB182FF, 0xA6945EFF, 0xD3C085FF, 0xAEA766FF, 0xDAD38DFF,
                0xB2BE6FFF, 0xDCE995FF, 0xA9BC6BFF, 0xD2E791FF, 0x9BB86CFF, 0xC5E594FF, 0x97B966FF, 0xBFE38BFF,
                0x88B963FF, 0xAEE387FF, 0x72B564FF, 0x99E18AFF, 0x56B35FFF, 0x7DDF84FF, 0x62B28CFF, 0x8ADFB6FF,
                0x68B3A6FF, 0x8FDED0FF, 0x6DB5B5FF, 0x93DFDFFF, 0x5D98ACFF, 0x82C1D6FF, 0x487FA3FF, 0x6AA5CCFF,
                0x254A9AFF, 0x416CC3FF, 0x323896FF, 0x4D59BFFF, 0x493998FF, 0x6659C0FF, 0x603B9EFF, 0x825CC7FF,
                0x683D9DFF, 0x8B5EC7FF, 0x72419FFF, 0x9763CAFF, 0x7E419FFF, 0xA664CAFF, 0x8844A0FF, 0xB067CBFF,
                0x9544A6FF, 0xBF68D1FF, 0xA349A4FF, 0xCE6DCFFF, 0xA5457DFF, 0xCD65A0FF, 0xA0455BFF, 0xC9657CFF,
                0xDB5344FF, 0xDA6243FF, 0xDE704BFF, 0xDB7F52FF, 0xDA8455FF, 0xDD8657FF, 0xD98957FF, 0xDE8D5BFF,
                0xDD925DFF, 0xDF9D5EFF, 0xE1A563FF, 0xE3AE69FF, 0xE4B968FF, 0xE6C872FF, 0xEFDD7AFF, 0xF1F481FF,
                0xEEFE7FFF, 0xE6FD7CFF, 0xD2FD81FF, 0xC9F874FF, 0xBAF971FF, 0xA8F86EFF, 0x8FF570FF, 0x70F46BFF,
                0x64F390FF, 0x77F1BBFF, 0x7DF1D6FF, 0x7DF0EAFF, 0x7AE0F0FF, 0x67C7E4FF, 0x56AADFFF, 0x4281D9FF,
                0x2037D1FF, 0x4137D4FF, 0x593AD3FF, 0x713DD9FF, 0x853FD8FF, 0x8E43D8FF, 0x9941DCFF, 0xA445DFFF,
                0xAC47DEFF, 0xBA47DEFF, 0xCC4AE3FF, 0xD74CE4FF, 0xE44FCDFF, 0xE24D9CFF, 0xDE4E79FF, 0xDC4E55FF,
        };

        int[] yamb255 = {
                0x00000000, 0x000000FF, 0x050403FF, 0x0F0D0CFF, 0x1A1817FF, 0x292625FF, 0x393534FF, 0x4A4645FF,
                0x5C5957FF, 0x726E6CFF, 0x878381FF, 0x9D9997FF, 0xB6B2B0FF, 0xCFCAC8FF, 0xE9E4E2FF, 0xFBFFFFFF,
                0x271C1AFF, 0x524340FF, 0x887572FF, 0xC4AFABFF, 0x29211DFF, 0x554B46FF, 0x8C807AFF, 0xCBBDB7FF,
                0x27231EFF, 0x534E48FF, 0x8A847DFF, 0xC9C2BAFF, 0x262621FF, 0x54544CFF, 0x8B8C83FF, 0xCCCCC2FF,
                0x2E3226FF, 0x5D6153FF, 0x959A8AFF, 0xD5DBC9FF, 0x2A3226FF, 0x576252FF, 0x8D9987FF, 0xCDDAC6FF,
                0x1F2D24FF, 0x4B5D51FF, 0x809587FF, 0xBFD7C7FF, 0x243235FF, 0x4F6164FF, 0x85999DFF, 0xC3DADFFF,
                0x131A27FF, 0x394255FF, 0x6A758AFF, 0xA4B1CAFF, 0x1A1828FF, 0x424055FF, 0x75738DFF, 0xB1AFCCFF,
                0x211B29FF, 0x4C4456FF, 0x80768CFF, 0xBEB3CCFF, 0x261C2BFF, 0x54465AFF, 0x8B7A92FF, 0xCBB9D4FF,
                0x5D362DFF, 0x8C5E53FF, 0xC08C7FFF, 0x5B3D31FF, 0x8E6A5BFF, 0xC59D8CFF, 0x573E30FF, 0x8C6E5EFF,
                0xC8A692FF, 0x584434FF, 0x8B7360FF, 0xC4A994FF, 0x5E4A39FF, 0x917965FF, 0xC8AD98FF, 0x645341FF,
                0x94826CFF, 0xCCB7A0FF, 0x5D5842FF, 0x908A71FF, 0xCAC4A8FF, 0x686649FF, 0x9D9B7AFF, 0xD8D6B2FF,
                0x5D6748FF, 0x939F7AFF, 0xD0DDB5FF, 0x5F6D46FF, 0x91A276FF, 0xCADCACFF, 0x546F46FF, 0x84A374FF,
                0xBADCA8FF, 0x416440FF, 0x729A70FF, 0xACD9AAFF, 0x406B55FF, 0x6F9F86FF, 0xA4D9BCFF, 0x4A6E69FF,
                0x78A09AFF, 0xADD9D2FF, 0x41636EFF, 0x6D949FFF, 0xA1CCD9FF, 0x324B64FF, 0x5C7795FF, 0x8BABCBFF,
                0x1F2759FF, 0x424F8AFF, 0x6D7DC0FF, 0x2F2851FF, 0x595283FF, 0x8D85BEFF, 0x3E2D5AFF, 0x69568CFF,
                0x9A85C2FF, 0x482D5EFF, 0x755690FF, 0xA886C7FF, 0x4C2F59FF, 0x7D5B8CFF, 0xB38EC5FF, 0x533158FF,
                0x885F8DFF, 0xC394C9FF, 0x5F3451FF, 0x8F5C7EFF, 0xC48BB0FF, 0x5C3138FF, 0x8C5960FF, 0xC2878FFF,
                0x92423BFF, 0xC3695FFF, 0x9C5241FF, 0xC4735FFF, 0x9C5D46FF, 0xC78168FF, 0x925F44FF, 0xC68B6EFF,
                0x916346FF, 0xC69171FF, 0x936448FF, 0xC79373FF, 0x91684AFF, 0xC59775FF, 0x9D7750FF, 0xCAA075FF,
                0xA28157FF, 0xCCA87BFF, 0x977E59FF, 0xCBB087FF, 0x9B8C5CFF, 0xCFBF8BFF, 0xAEA766FF, 0xDAD38DFF,
                0xA1AA6BFF, 0xD7E29DFF, 0x9AAB6AFF, 0xCEE19BFF, 0x9CB269FF, 0xCBE394FF, 0x95B96DFF, 0xBCE492FF,
                0x81B566FF, 0xAAE28DFF, 0x69A55EFF, 0x99DB8DFF, 0x56A359FF, 0x86D988FF, 0x62B28CFF, 0x8ADFB6FF,
                0x5FA89CFF, 0x8DDBCEFF, 0x64AAABFF, 0x92DDDEFF, 0x5D98ACFF, 0x82C1D6FF, 0x4D7BA0FF, 0x72A5CDFF,
                0x24468BFF, 0x4972BFFF, 0x323896FF, 0x4D59BFFF, 0x43398BFF, 0x6861BDFF, 0x5A3B96FF, 0x8060C4FF,
                0x673C9CFF, 0x8C5FC8FF, 0x72419FFF, 0x9763CAFF, 0x77409CFF, 0xA266CAFF, 0x7E4094FF, 0xB06CC9FF,
                0x884394FF, 0xBB6FC9FF, 0x954898FF, 0xC873CAFF, 0x984572FF, 0xC86C9DFF, 0xA0455BFF, 0xC9657CFF,
                0xD55442FF, 0xDA6243FF, 0xDA724BFF, 0xD07D55FF, 0xCC7F55FF, 0xCF8257FF, 0xCC8559FF, 0xCF885BFF,
                0xD49262FF, 0xDD9E65FF, 0xE1A563FF, 0xDAAE6EFF, 0xD4AF6DFF, 0xDDC374FF, 0xEFDD7AFF, 0xE6EB81FF,
                0xDFEC80FF, 0xD5F182FF, 0xD2F37AFF, 0xC7F87CFF, 0xBAF971FF, 0xA2F673FF, 0x8CEA70FF, 0x6FE46FFF,
                0x65EC92FF, 0x7AEDBEFF, 0x7CE5CCFF, 0x7DF0EAFF, 0x7CD5E0FF, 0x6FC5E4FF, 0x5DA5D5FF, 0x4481D3FF,
                0x223DC3FF, 0x4137D4FF, 0x5640CAFF, 0x6F43C9FF, 0x8142D2FF, 0x8E43D8FF, 0x9941DCFF, 0xA445D8FF,
                0xAA4BD3FF, 0xAE4FD1FF, 0xBE51D4FF, 0xC752D3FF, 0xE44FCDFF, 0xD05196FF, 0xDE4E79FF, 0xCD5057FF,
        };
        int[] yamoc255 = {
                0x00000000, 0x000000FF, 0x050403FF, 0x0F0D0CFF, 0x1A1817FF, 0x292625FF, 0x393534FF, 0x4A4645FF,
                0x5C5957FF, 0x726E6CFF, 0x878381FF, 0x9D9997FF, 0xB6B2B0FF, 0xCFCAC8FF, 0xE9E4E2FF, 0xFBFFFFFF,
                0x281D1EFF, 0x524445FF, 0x867577FF, 0xC2AFB0FF, 0x272523FF, 0x524E4DFF, 0x878381FF, 0xC3BEBCFF,
                0x282524FF, 0x54504FFF, 0x888482FF, 0xC5C1BEFF, 0x2A2A24FF, 0x57574FFF, 0x8D8D84FF, 0xCCCCC2FF,
                0x2F342DFF, 0x5E655BFF, 0x959D92FF, 0xD4DDD0FF, 0x2C312AFF, 0x5A6057FF, 0x90988DFF, 0xD0D8CCFF,
                0x233128FF, 0x4E6054FF, 0x82978AFF, 0xBFD7C7FF, 0x293131FF, 0x555F5FFF, 0x8C9898FF, 0xCCD8D8FF,
                0x151B25FF, 0x3B4351FF, 0x6B7586FF, 0xA5AFC3FF, 0x1C1A27FF, 0x454252FF, 0x767286FF, 0xB1ADC4FF,
                0x231C2BFF, 0x4D4557FF, 0x80768CFF, 0xBCB1CAFF, 0x28202CFF, 0x544A58FF, 0x897E8FFF, 0xC7BACDFF,
                0x583832FF, 0x876159FF, 0xBA8E85FF, 0x594137FF, 0x886C61FF, 0xBD9E91FF, 0x5A473BFF, 0x897365FF,
                0xC0A797FF, 0x5D4A3EFF, 0x8D7669FF, 0xC1A898FF, 0x5C4E41FF, 0x8C7C6CFF, 0xC2AF9EFF, 0x5E5546FF,
                0x8E8472FF, 0xC5BAA6FF, 0x605C4BFF, 0x928E7AFF, 0xC9C5AFFF, 0x6A6B53FF, 0x9D9E82FF, 0xD6D7B8FF,
                0x676E54FF, 0x9BA285FF, 0xD4DDBCFF, 0x636F54FF, 0x94A384FF, 0xCCDCBAFF, 0x556E50FF, 0x84A17FFF,
                0xBBDAB5FF, 0x4C6C4DFF, 0x7B9F7CFF, 0xB1D8B1FF, 0x49685AFF, 0x799C8BFF, 0xAED5C2FF, 0x4F6C69FF,
                0x7D9E9AFF, 0xB3D7D2FF, 0x486269FF, 0x75929AFF, 0xAACAD2FF, 0x364B5BFF, 0x60788BFF, 0x90ABC0FF,
                0x1F2B4FFF, 0x42527DFF, 0x6C7FB0FF, 0x302C51FF, 0x56547FFF, 0x8684B5FF, 0x3C3058FF, 0x665887FF,
                0x9586BCFF, 0x443157FF, 0x705B87FF, 0xA28ABDFF, 0x4C345CFF, 0x795D8CFF, 0xAD8FC4FF, 0x55375DFF,
                0x85628FFF, 0xBA93C5FF, 0x5C3651FF, 0x8B5E7EFF, 0xC08DB0FF, 0x583639FF, 0x865E61FF, 0xB98B8FFF,
                0x914D45FF, 0xB96D64FF, 0x92584CFF, 0xB9796BFF, 0x926151FF, 0xBB8674FF, 0x976A52FF, 0xC18F75FF,
                0x966E55FF, 0xBF9478FF, 0x9B7359FF, 0xC2967AFF, 0x9A7258FF, 0xC4987BFF, 0x96795BFF, 0xC1A282FF,
                0x9F8263FF, 0xC8A988FF, 0xA28B6AFF, 0xCBB28EFF, 0xA2956AFF, 0xCEC092FF, 0xADA679FF, 0xD8D2A1FF,
                0xB1BD83FF, 0xDAE8A9FF, 0xA7BB7FFF, 0xD0E5A5FF, 0xA1B479FF, 0xCCE1A2FF, 0x96B87AFF, 0xBDE29FFF,
                0x8CB676FF, 0xB3E09CFF, 0x7AB270FF, 0xA1DE97FF, 0x66AF6BFF, 0x8DDA91FF, 0x6DAF92FF, 0x95DBBBFF,
                0x76AFA6FF, 0x9DDAD0FF, 0x7BB1B5FF, 0xA1DBDFFF, 0x6696A6FF, 0x8BBFD0FF, 0x597D99FF, 0x7CA2C1FF,
                0x304B8DFF, 0x4D6CB4FF, 0x353C89FF, 0x515CB1FF, 0x483E8CFF, 0x655DB2FF, 0x5C4191FF, 0x7D62B9FF,
                0x644390FF, 0x8664B8FF, 0x6E4792FF, 0x9369BBFF, 0x764997FF, 0x9C6CC1FF, 0x834A97FF, 0xAB6DC1FF,
                0x8E4D99FF, 0xB770C2FF, 0x9A51A0FF, 0xC475CBFF, 0x995079FF, 0xBF6F9CFF, 0x964D5CFF, 0xBE6D7DFF,
                0xCF5D4BFF, 0xCC6B51FF, 0xCF7959FF, 0xD08560FF, 0xCF8A62FF, 0xD28C65FF, 0xCE8E65FF, 0xD29268FF,
                0xD0976BFF, 0xD5A172FF, 0xD6A877FF, 0xDBB177FF, 0xDDBA7DFF, 0xDFC987FF, 0xE8DE90FF, 0xEFF298FF,
                0xECFC96FF, 0xE4FC94FF, 0xD9F990FF, 0xCDF58BFF, 0xBEF689FF, 0xADF585FF, 0x98F27FFF, 0x83EF7AFF,
                0x79EE9DFF, 0x8DECC1FF, 0x8EEDD6FF, 0x95EBE9FF, 0x8CDDEAFF, 0x7AC4DEFF, 0x6AA7D4FF, 0x4983CAFF,
                0x233FBFFF, 0x3F41C2FF, 0x5742C5FF, 0x6D47C6FF, 0x8049CAFF, 0x8A4CCAFF, 0x914DCFFF, 0x9C51D1FF,
                0xA553D0FF, 0xB353D0FF, 0xC058DAFF, 0xCB5BDBFF, 0xD85DC3FF, 0xD45A9DFF, 0xD45779FF, 0xD0585BFF,
        };

        int[] yamod255 = {
                0x00000000, 0x000000FF, 0x050403FF, 0x0F0D0CFF, 0x1A1817FF, 0x292625FF, 0x393534FF, 0x4A4645FF,
                0x5C5957FF, 0x726E6CFF, 0x878381FF, 0x9D9997FF, 0xB6B2B0FF, 0xCFCAC8FF, 0xE9E4E2FF, 0xFBFFFFFF,
                0x281D1EFF, 0x524445FF, 0x867577FF, 0xC2AFB0FF, 0x272523FF, 0x524E4DFF, 0x878381FF, 0xC3BEBCFF,
                0x282524FF, 0x54504FFF, 0x888482FF, 0xC5C1BEFF, 0x2A2A24FF, 0x57574FFF, 0x8D8D84FF, 0xCCCCC2FF,
                0x2F342DFF, 0x5E655BFF, 0x959D92FF, 0xD4DDD0FF, 0x2A342BFF, 0x576358FF, 0x8D9B8EFF, 0xCBDACCFF,
                0x202E25FF, 0x435449FF, 0x6D8174FF, 0x9EB4A5FF, 0x293131FF, 0x555F5FFF, 0x8C9898FF, 0xCCD8D8FF,
                0x151B25FF, 0x3B4351FF, 0x6B7586FF, 0xA5AFC3FF, 0x1C1A27FF, 0x454252FF, 0x767286FF, 0xB1ADC4FF,
                0x231C2BFF, 0x4D4557FF, 0x80768CFF, 0xBCB1CAFF, 0x28202CFF, 0x544A58FF, 0x897E8FFF, 0xC7BACDFF,
                0x583832FF, 0x876159FF, 0xBA8E85FF, 0x594137FF, 0x886C61FF, 0xBD9E91FF, 0x5A473BFF, 0x897365FF,
                0xC0A797FF, 0x5D4A3EFF, 0x8D7669FF, 0xC1A898FF, 0x5C4E41FF, 0x8C7C6CFF, 0xC2AF9EFF, 0x5E5546FF,
                0x8E8472FF, 0xC5BAA6FF, 0x605C4BFF, 0x928E7AFF, 0xC9C5AFFF, 0x6A6B53FF, 0x9D9E82FF, 0xD6D7B8FF,
                0x667357FF, 0x97A586FF, 0xCFDFBCFF, 0x5B6D51FF, 0x8CA281FF, 0xC3DBB7FF, 0x536C4EFF, 0x829F7DFF,
                0xB8D8B2FF, 0x446A4AFF, 0x729D78FF, 0xA6D6ADFF, 0x476658FF, 0x6A8C7BFF, 0x90B5A3FF, 0x44605DFF,
                0x62807CFF, 0x82A39FFF, 0x486269FF, 0x75929AFF, 0xAACAD2FF, 0x364B5BFF, 0x60788BFF, 0x90ABC0FF,
                0x1F2B4FFF, 0x42527DFF, 0x6C7FB0FF, 0x302C51FF, 0x56547FFF, 0x8684B5FF, 0x3C3058FF, 0x665887FF,
                0x9586BCFF, 0x443157FF, 0x705B87FF, 0xA28ABDFF, 0x4C345CFF, 0x795D8CFF, 0xAD8FC4FF, 0x55375DFF,
                0x85628FFF, 0xBA93C5FF, 0x5C3651FF, 0x8B5E7EFF, 0xC08DB0FF, 0x583639FF, 0x865E61FF, 0xB98B8FFF,
                0x914D45FF, 0xB96D64FF, 0x92584CFF, 0xB9796BFF, 0x926151FF, 0xBB8674FF, 0x976A52FF, 0xC18F75FF,
                0x966E55FF, 0xBF9478FF, 0x9B7359FF, 0xC2967AFF, 0x9A7258FF, 0xC4987BFF, 0x96795BFF, 0xC1A282FF,
                0x9F8263FF, 0xC8A988FF, 0xA28B6AFF, 0xCBB28EFF, 0xA2956AFF, 0xCEC092FF, 0xADA679FF, 0xD8D2A1FF,
                0xB1BD83FF, 0xDAE8A9FF, 0xA6BA7EFF, 0xD0E5A5FF, 0x9AB578FF, 0xC4E2A0FF, 0x93B577FF, 0xBADF9DFF,
                0x81B271FF, 0xAADF99FF, 0x72B36FFF, 0x97DD94FF, 0x5DA86BFF, 0x72C07FFF, 0x669D83FF, 0x6FA88CFF,
                0x6AA299FF, 0x7FB9AFFF, 0x7BB1B5FF, 0xA1DBDFFF, 0x6696A6FF, 0x8BBFD0FF, 0x597D99FF, 0x7CA2C1FF,
                0x304B8DFF, 0x4D6CB4FF, 0x353C89FF, 0x515CB1FF, 0x483E8CFF, 0x655DB2FF, 0x5C4191FF, 0x7D62B9FF,
                0x644390FF, 0x8664B8FF, 0x6E4792FF, 0x9369BBFF, 0x764997FF, 0x9C6CC1FF, 0x834A97FF, 0xAB6DC1FF,
                0x8E4D99FF, 0xB770C2FF, 0x9A51A0FF, 0xC475CBFF, 0x995079FF, 0xBF6F9CFF, 0x964D5CFF, 0xBE6D7DFF,
                0xCF5D4BFF, 0xCC6B51FF, 0xCF7959FF, 0xD08560FF, 0xCF8A62FF, 0xD28C65FF, 0xCE8E65FF, 0xD29268FF,
                0xD0976BFF, 0xD5A172FF, 0xD6A877FF, 0xDBB177FF, 0xDDBA7DFF, 0xDFC987FF, 0xE8DE90FF, 0xEFF298FF,
                0xECFC96FF, 0xE2FA92FF, 0xD2FA8FFF, 0xC6F68AFF, 0xB5F586FF, 0xA2F381FF, 0x87F47EFF, 0x76F182FF,
                0x6FDD95FF, 0x6ECEABFF, 0x72CFB9FF, 0x86D9D8FF, 0x8CDDEAFF, 0x7AC4DEFF, 0x6AA7D4FF, 0x4983CAFF,
                0x233FBFFF, 0x3F41C2FF, 0x5742C5FF, 0x6D47C6FF, 0x8049CAFF, 0x8A4CCAFF, 0x914DCFFF, 0x9C51D1FF,
                0xA553D0FF, 0xB353D0FF, 0xC058DAFF, 0xCB5BDBFF, 0xD85DC3FF, 0xD45A9DFF, 0xD45779FF, 0xD0585BFF,
        };

        int[] yamoe255 = {
                0x00000000, 0x000000FF, 0x050403FF, 0x0F0D0CFF, 0x1A1817FF, 0x292625FF, 0x393534FF, 0x4A4645FF,
                0x5C5957FF, 0x726E6CFF, 0x878381FF, 0x9D9997FF, 0xB6B2B0FF, 0xCFCAC8FF, 0xE9E4E2FF, 0xFBFFFFFF,
                0x2B1C1BFF, 0x574241FF, 0x8C7472FF, 0xC9ADAAFF, 0x2D231CFF, 0x594D44FF, 0x8F8176FF, 0xCCBCB0FF,
                0x2D241DFF, 0x5B4F46FF, 0x908277FF, 0xCFBEB2FF, 0x2E2820FF, 0x5C554BFF, 0x938B7EFF, 0xD3CABCFF,
                0x323425FF, 0x626451FF, 0x9A9D87FF, 0xD9DCC4FF, 0x293523FF, 0x56644FFF, 0x8C9C83FF, 0xCADCC0FF,
                0x1D2F21FF, 0x405645FF, 0x6A836FFF, 0x9BB6A0FF, 0x1F3335FF, 0x4A6264FF, 0x809B9EFF, 0xBDDCDFFF,
                0x0F1B2BFF, 0x334459FF, 0x637690FF, 0x9BB1CEFF, 0x1D182CFF, 0x45405AFF, 0x777090FF, 0xB2AACFFF,
                0x251B2EFF, 0x4F435BFF, 0x837491FF, 0xBFAFD0FF, 0x2C1D2EFF, 0x5A475CFF, 0x907A93FF, 0xCFB5D2FF,
                0x662F28FF, 0x98584EFF, 0xCE8579FF, 0x663B28FF, 0x986650FF, 0xD0977EFF, 0x68412CFF, 0x9A6C54FF,
                0xD3A085FF, 0x68452FFF, 0x9A7258FF, 0xD0A386FF, 0x6A4A2DFF, 0x9C7756FF, 0xD3AA85FF, 0x6C5131FF,
                0x9E7F5BFF, 0xD7B58DFF, 0x6A5A36FF, 0x9E8B63FF, 0xD7C296FF, 0x6E6C3DFF, 0xA19F6AFF, 0xDAD89EFF,
                0x67753BFF, 0x98A868FF, 0xD0E29CFF, 0x59703BFF, 0x8BA56AFF, 0xC2DF9EFF, 0x4C6F39FF, 0x7BA366FF,
                0xB0DD99FF, 0x366F35FF, 0x64A362FF, 0x97DD94FF, 0x346C4FFF, 0x569271FF, 0x7CBC98FF, 0x2B665DFF,
                0x49877DFF, 0x69AAA0FF, 0x326672FF, 0x5E97A5FF, 0x92CFDFFF, 0x294B6CFF, 0x52789FFF, 0x81ACD7FF,
                0x1D2565FF, 0x3E4D97FF, 0x667ACEFF, 0x312663FF, 0x584E95FF, 0x877ECEFF, 0x422866FF, 0x6C5199FF,
                0x9D7ED0FF, 0x492A66FF, 0x765399FF, 0xA983D1FF, 0x552B67FF, 0x845499FF, 0xBA85D3FF, 0x5E2E69FF,
                0x90599CFF, 0xC789D4FF, 0x692B54FF, 0x9B5382FF, 0xD382B5FF, 0x672B34FF, 0x99535CFF, 0xCF8088FF,
                0xB0342EFF, 0xDB554BFF, 0xB1432EFF, 0xDC654CFF, 0xB0512CFF, 0xDD754EFF, 0xB25D33FF, 0xDE8155FF,
                0xB3612EFF, 0xDF8650FF, 0xB56832FF, 0xDE8B53FF, 0xB36731FF, 0xE08C54FF, 0xB06F35FF, 0xDF975AFF,
                0xB47B35FF, 0xE0A259FF, 0xB4863CFF, 0xDEAD5FFF, 0xB0923AFF, 0xDEBE62FF, 0xB4A740FF, 0xE1D468FF,
                0xB4C048FF, 0xDDEC6FFF, 0xA7BD4CFF, 0xD0EA73FF, 0x95BA47FF, 0xBFE86FFF, 0x82BE46FF, 0xA8E96BFF,
                0x6EBA40FF, 0x96E868FF, 0x50BD47FF, 0x76E86BFF, 0x30B24CFF, 0x47CA5FFF, 0x23A979FF, 0x30B482FF,
                0x2BAD9AFF, 0x44C4B1FF, 0x38BDC1FF, 0x63E7ECFF, 0x319DBCFF, 0x5AC7E8FF, 0x2D80B7FF, 0x51A7E2FF,
                0x1D44B0FF, 0x3967DCFF, 0x322CAFFF, 0x4B50DBFF, 0x4B2BB2FF, 0x684DDDFF, 0x662CB3FF, 0x8850DFFF,
                0x6D2FB3FF, 0x9052DFFF, 0x7A31B5FF, 0xA155E2FF, 0x8631B5FF, 0xAE56E2FF, 0x9431B1FF, 0xBE56DEFF,
                0x9F35B3FF, 0xCA5AE0FF, 0xAE36B6FF, 0xDB5CE3FF, 0xB33581FF, 0xDD56A4FF, 0xB33156FF, 0xDF5376FF,
                0xFD2918FF, 0xFA4411FF, 0xFD580BFF, 0xFC6A1AFF, 0xF8721EFF, 0xFD740EFF, 0xF9770FFF, 0xFA7E17FF,
                0xFA831BFF, 0xFD8F14FF, 0xFB9A1EFF, 0xFDA514FF, 0xF7B321FF, 0xF8C41FFF, 0xFDDC27FF, 0xFBF42CFF,
                0xEDFF21FF, 0xDAFF2FFF, 0xC9FF29FF, 0xAFFF21FF, 0x94FF19FF, 0x7AFF27FF, 0x49FF21FF, 0x00FF3CFF,
                0x00EE6EFF, 0x00DF9BFF, 0x00DFBBFF, 0x00EAE0FF, 0x00EBFFFF, 0x00CEFFFF, 0x00ADFFFF, 0x007EFFFF,
                0x2200FFFF, 0x4300FFFF, 0x5F00FFFF, 0x7900FFFF, 0x8F05FFFF, 0x9B13FEFF, 0xA600FFFF, 0xB510FFFF,
                0xBD15FFFF, 0xCA11FFFF, 0xE10AFFFF, 0xED16FCFF, 0xFD15DFFF, 0xFD1BA4FF, 0xFF1271FF, 0xFE173BFF,
        };

        int[] yamof255 = {
                0x00000000, 0x000000FF, 0x050403FF, 0x0F0D0CFF, 0x1A1817FF, 0x292625FF, 0x393534FF, 0x4A4645FF,
                0x5C5957FF, 0x726E6CFF, 0x878381FF, 0x9D9997FF, 0xB6B2B0FF, 0xCFCAC8FF, 0xE9E4E2FF, 0xFBFFFFFF,
                0x361513FF, 0x663B38FF, 0x9F6B67FF, 0xDFA49EFF, 0x361E14FF, 0x66473AFF, 0x9F7A6BFF, 0xDFB5A3FF,
                0x352115FF, 0x654B3CFF, 0x9D7E6CFF, 0xDDBAA6FF, 0x322813FF, 0x61553CFF, 0x998B6EFF, 0xDACAA9FF,
                0x303617FF, 0x5F6742FF, 0x96A076FF, 0xD5E0B1FF, 0x273716FF, 0x536740FF, 0x88A072FF, 0xC5E0ADFF,
                0x0D3315FF, 0x325B37FF, 0x5B8960FF, 0x8ABD8FFF, 0x113539FF, 0x3D6569FF, 0x729EA3FF, 0xAEE0E6FF,
                0x09183BFF, 0x2C416DFF, 0x5974A8FF, 0x90B0EAFF, 0x1F1338FF, 0x483B6AFF, 0x796CA3FF, 0xB4A5E4FF,
                0x2B133AFF, 0x583B6BFF, 0x8D6CA4FF, 0xCBA6E5FF, 0x361438FF, 0x673D68FF, 0xA06FA2FF, 0xE1AAE2FF,
                0x752317FF, 0xAA4D3DFF, 0xE37A66FF, 0x733316FF, 0xA85E3EFF, 0xE38F6BFF, 0x723B1AFF, 0xA66743FF,
                0xE29A72FF, 0x73401DFF, 0xA76D46FF, 0xDF9E73FF, 0x754519FF, 0xA97243FF, 0xE2A571FF, 0x744E1EFF,
                0xA87C49FF, 0xE2B179FF, 0x71581CFF, 0xA68A4AFF, 0xE0C17BFF, 0x716C21FF, 0xA49F50FF, 0xDED983FF,
                0x697626FF, 0x99A954FF, 0xD1E487FF, 0x53731FFF, 0x84A950FF, 0xBAE483FF, 0x3C7425FF, 0x6AA953FF,
                0x9FE485FF, 0x1F7321FF, 0x50A84FFF, 0x84E381FF, 0x0B714AFF, 0x3A986DFF, 0x61C393FF, 0x006962FF,
                0x2C8B83FF, 0x4FAFA6FF, 0x1D6877FF, 0x4D9AABFF, 0x81D3E5FF, 0x114C79FF, 0x3E7AAEFF, 0x6DAEE8FF,
                0x1A1B7CFF, 0x3646B2FF, 0x5D75ECFF, 0x341B75FF, 0x5A46ABFF, 0x8976E8FF, 0x471B79FF, 0x7246AFFF,
                0xA275E9FF, 0x511C75FF, 0x8048ABFF, 0xB478E5FF, 0x5C1D76FF, 0x8D48ABFF, 0xC57AE7FF, 0x681D78FF,
                0x9D4BAEFF, 0xD67BE9FF, 0x741B5BFF, 0xAA468AFF, 0xE474BEFF, 0x751C2FFF, 0xAB4656FF, 0xE47382FF,
                0xBB241FFF, 0xE8493EFF, 0xBA3B1EFF, 0xE65D3EFF, 0xB84A24FF, 0xE66F46FF, 0xB85922FF, 0xE67E46FF,
                0xBB5B25FF, 0xE98048FF, 0xBF6120FF, 0xEA8543FF, 0xBA631FFF, 0xE78844FF, 0xB76B23FF, 0xE7944BFF,
                0xBB7722FF, 0xE89F49FF, 0xBC832AFF, 0xE7AA4FFF, 0xB49126FF, 0xE2BD51FF, 0xB9A72CFF, 0xE5D357FF,
                0xB9C034FF, 0xE2EB5DFF, 0xA3C02FFF, 0xCDEC5AFF, 0x8FBD33FF, 0xB8EB5EFF, 0x7BC133FF, 0xA1EC5BFF,
                0x5EBF2CFF, 0x87ED57FF, 0x3AC135FF, 0x63EC5BFF, 0x00B63CFF, 0x2ACE51FF, 0x00AC74FF, 0x0CB77DFF,
                0x00B09BFF, 0x27C7B1FF, 0x29BEC2FF, 0x58E9ECFF, 0x1C9EC2FF, 0x4CC9EEFF, 0x1681C1FF, 0x41A7EDFF,
                0x0A3FC2FF, 0x2964F0FF, 0x3121C1FF, 0x4749EFFF, 0x4D20BFFF, 0x6946EBFF, 0x6A1EC0FF, 0x8C46EEFF,
                0x7122C0FF, 0x9549EDFF, 0x811FC2FF, 0xA849F0FF, 0x8E21BEFF, 0xB74AECFF, 0x9725BFFF, 0xC14DEDFF,
                0xA81FC0FF, 0xD54AEEFF, 0xB626BFFF, 0xE450EDFF, 0xBE2285FF, 0xE947A8FF, 0xBE2250FF, 0xEB4870FF,
                0xFD2918FF, 0xFA4411FF, 0xFD580BFF, 0xFC6A1AFF, 0xF8721EFF, 0xFD740EFF, 0xF9770FFF, 0xFA7E17FF,
                0xFA831BFF, 0xFD8F14FF, 0xFB9A1EFF, 0xFDA514FF, 0xF7B321FF, 0xF8C41FFF, 0xFDDC27FF, 0xFBF42CFF,
                0xEDFF21FF, 0xDAFF2FFF, 0xC9FF29FF, 0xAFFF21FF, 0x94FF19FF, 0x7AFF27FF, 0x49FF21FF, 0x00FF3CFF,
                0x00EE6EFF, 0x00DF9BFF, 0x00DFBBFF, 0x00EAE0FF, 0x00EBFFFF, 0x00CEFFFF, 0x00ADFFFF, 0x007EFFFF,
                0x2200FFFF, 0x4300FFFF, 0x5F00FFFF, 0x7900FFFF, 0x8F05FFFF, 0x9B13FEFF, 0xA600FFFF, 0xB510FFFF,
                0xBD15FFFF, 0xCA11FFFF, 0xE10AFFFF, 0xED16FCFF, 0xFD15DFFF, 0xFD1BA4FF, 0xFF1271FF, 0xFE173BFF,
        };

        int[] yamog255 = {
                0x00000000, 0x000000FF, 0x050403FF, 0x0F0D0CFF, 0x1A1817FF, 0x292625FF, 0x393534FF, 0x4A4645FF,
                0x5C5957FF, 0x726E6CFF, 0x878381FF, 0x9D9997FF, 0xB6B2B0FF, 0xCFCAC8FF, 0xE9E4E2FF, 0xFBFFFFFF,
                0x480000FF, 0x7F2823FF, 0xBF5950FF, 0xFF9184FF, 0x3E1900FF, 0x71422AFF, 0xAD7559FF, 0xEEB090FF,
                0x491000FF, 0x813D00FF, 0xBE703AFF, 0xFFAB70FF, 0x422000FF, 0x774E00FF, 0xB38331FF, 0xF8C26BFF,
                0x333700FF, 0x626900FF, 0x99A340FF, 0xD8E47AFF, 0x1D3B00FF, 0x476C17FF, 0x7BA74DFF, 0xB7E985FF,
                0x003800FF, 0x076121FF, 0x3D9149FF, 0x6DC777FF, 0x003C42FF, 0x007074FF, 0x00ACB0FF, 0x5FF0F4FF,
                0x000E51FF, 0x1B3D8AFF, 0x4672CAFF, 0x7BAEFFFF, 0x26004BFF, 0x4F2F82FF, 0x8160BFFF, 0xBD9AFFFF,
                0x310049FF, 0x60307FFF, 0x9661BCFF, 0xD69BFFFF, 0x3D0044FF, 0x713078FF, 0xAE62B4FF, 0xF19CF8FF,
                0x7F1500FF, 0xB74330FF, 0xF27059FF, 0x7F2800FF, 0xB75429FF, 0xF48657FF, 0x723B1AFF, 0xA66743FF,
                0xE29A72FF, 0x68452FFF, 0x9A7258FF, 0xD0A386FF, 0x813E00FF, 0xB76B23FF, 0xF39E54FF, 0x7F4900FF,
                0xB5771FFF, 0xF1AD54FF, 0x7A5600FF, 0xB0881DFF, 0xEBBF55FF, 0x776B00FF, 0xAB9F22FF, 0xE5D95BFF,
                0x687700FF, 0x99AB33FF, 0xD0E669FF, 0x507500FF, 0x81AB38FF, 0xB6E76CFF, 0x387600FF, 0x66AB3CFF,
                0x9AE770FF, 0x007709FF, 0x3DAC40FF, 0x72E873FF, 0x007540FF, 0x009E62FF, 0x42C988FF, 0x006F63FF,
                0x009284FF, 0x00B7A7FF, 0x006D8BFF, 0x00A0C1FF, 0x42DAFEFF, 0x004B8FFF, 0x197AC7FF, 0x4FAFFFFF,
                0x1A1584FF, 0x3444BBFF, 0x5A73F7FF, 0x361081FF, 0x5B40B9FF, 0x8972F7FF, 0x4B0F81FF, 0x7740B8FF,
                0xA86FF3FF, 0x540D80FF, 0x8440B9FF, 0xB871F5FF, 0x60117EFF, 0x9142B4FF, 0xCA73F1FF, 0x6D137CFF,
                0xA244B3FF, 0xDC75EEFF, 0x7B065FFF, 0xB23C8EFF, 0xED6BC3FF, 0x80002AFF, 0xB93850FF, 0xF5667CFF,
                0xC01C16FF, 0xED4437FF, 0xC13212FF, 0xEE5636FF, 0xBE460BFF, 0xED6A36FF, 0xAC603AFF, 0xD9845CFF,
                0xAD6435FF, 0xD98957FF, 0xC45E12FF, 0xF0813AFF, 0xC15F00FF, 0xEF8532FF, 0xBE6700FF, 0xEF9039FF,
                0xBF7600FF, 0xEC9D36FF, 0xC28100FF, 0xEDA832FF, 0xB89000FF, 0xE7BC3EFF, 0xB9A700FF, 0xE5D443FF,
                0xB8C113FF, 0xE2EC49FF, 0xA8BF00FF, 0xD2EC45FF, 0x8EBE16FF, 0xB8EC4BFF, 0x7AC214FF, 0xA0ED47FF,
                0x5AC01EFF, 0x82EE4EFF, 0x33C22AFF, 0x5DEE53FF, 0x00B733FF, 0x1ECF49FF, 0x00AF74FF, 0x00BA7DFF,
                0x00B39BFF, 0x00CBB1FF, 0x00C2C8FF, 0x1FEEF3FF, 0x00A0CDFF, 0x24CBFAFF, 0x0081CBFF, 0x2DA8F8FF,
                0x083DC7FF, 0x2762F5FF, 0x311DC5FF, 0x4747F4FF, 0x4D1DC4FF, 0x6844F0FF, 0x691BC5FF, 0x8B44F3FF,
                0x741EC0FF, 0x9846EDFF, 0x811FC2FF, 0xA849F0FF, 0x8D1FC3FF, 0xB649F1FF, 0x9A20BFFF, 0xC54AECFF,
                0xA81FC0FF, 0xD54AEEFF, 0xB920BFFF, 0xE74CECFF, 0xC11C84FF, 0xED43A8FF, 0xC01C50FF, 0xEE4370FF,
                0xFD2918FF, 0xFA4411FF, 0xFD580BFF, 0xDF7C52FF, 0xE0814EFF, 0xF6792EFF, 0xCE8E65FF, 0xFA7E17FF,
                0xFA831BFF, 0xFD8F14FF, 0xFB9A1EFF, 0xFDA514FF, 0xF7B321FF, 0xF8C41FFF, 0xFDDC27FF, 0xFBF42CFF,
                0xEDFF21FF, 0xDAFF2FFF, 0xC9FF29FF, 0xAFFF21FF, 0x94FF19FF, 0x7AFF27FF, 0x49FF21FF, 0x00FF3CFF,
                0x00EE6EFF, 0x00DF9BFF, 0x00DFBBFF, 0x00EAE0FF, 0x00EBFFFF, 0x00CEFFFF, 0x00ADFFFF, 0x007EFFFF,
                0x2200FFFF, 0x4300FFFF, 0x5F00FFFF, 0x7900FFFF, 0x8F05FFFF, 0x9B13FEFF, 0xA600FFFF, 0xB510FFFF,
                0xBD15FFFF, 0xCA11FFFF, 0xE10AFFFF, 0xED16FCFF, 0xFD15DFFF, 0xFD1BA4FF, 0xFF1271FF, 0xFE173BFF,
        };

        int[] tetra255 = new int[] {
                0x00000000, 0x000000FF, 0x282828FF, 0x585858FF, 0x868686FF, 0xA2A2A2FF, 0xCBCBCBFF, 0xFFFFFFFF,
                0xA6D755FF, 0x8ABF5EFF, 0x7AA221FF, 0x6E8A31FF, 0x0A4111FF, 0x0F661DFF, 0x147E25FF, 0x229E35FF,
                0x42C372FF, 0x8CE7A6FF, 0x78FAE6FF, 0x00C7A5FF, 0x009282FF, 0x163135FF, 0x21526BFF, 0x3B768FFF,
                0x53A1ADFF, 0x8CDAFFFF, 0x50AAF7FF, 0x3E83EBFF, 0x354AD7FF, 0x1D2DAAFF, 0x152135FF, 0x66397EFF,
                0x7E5596FF, 0xA68ABFFF, 0xDFBFEFFF, 0xC772FFFF, 0x9245E7FF, 0x6E05C3FF, 0x350082FF, 0x721C2FFF,
                0xB22E69FF, 0xE54286FF, 0xFF6EAFFF, 0xFF9AC7FF, 0xFFD7F3FF, 0xE3B3C3FF, 0xCB96A2FF, 0xAA768AFF,
                0xCF4929FF, 0xF3820DFF, 0xFFAA0DFF, 0xFFD3A6FF, 0xFFBB8AFF, 0xE7A67AFF, 0xBB7251FF, 0x82491DFF,
                0x513115FF, 0xB7515AFF, 0x6E5A51FF, 0x8A7A5AFF, 0xB79E5EFF, 0xDFC721FF, 0xFFDF00FF, 0xFFF3B3FF,
                0x050403FF, 0x0F0D0CFF, 0x1A1817FF, 0x1D182CFF, 0x251B2EFF, 0x2B1C1BFF, 0x2C1D2EFF, 0x2D231CFF,
                0x2D241DFF, 0x1D2F21FF, 0x2E2820FF, 0x323425FF, 0x393534FF, 0x334459FF, 0x4A4645FF, 0x45405AFF,
                0x574241FF, 0x4F435BFF, 0x5A475CFF, 0x405645FF, 0x594D44FF, 0x5B4F46FF, 0x5C554BFF, 0x56644FFF,
                0x4A6264FF, 0x726E6CFF, 0x637690FF, 0x777090FF, 0x8C7472FF, 0x837491FF, 0x6A836FFF, 0x8F8176FF,
                0x908277FF, 0x938B7EFF, 0x8C9C83FF, 0x809B9EFF, 0x9A9D87FF, 0x9BB6A0FF, 0x9BB1CEFF, 0xB2AACFFF,
                0xB6B2B0FF, 0xC9ADAAFF, 0xCCBCB0FF, 0xD3CABCFF, 0xBDDCDFFF, 0xCADCC0FF, 0xD9DCC4FF, 0xB0923AFF,
                0xDEBE62FF, 0xB4A740FF, 0xE1D468FF, 0xFBF42CFF, 0x6E6C3DFF, 0xEDFF21FF, 0xDDEC6FFF, 0xB4C048FF,
                0xDAFF2FFF, 0xD0EA73FF, 0xA7BD4CFF, 0x98A868FF, 0xC9FF29FF, 0xC2DF9EFF, 0xBFE86FFF, 0x8BA56AFF,
                0x59703BFF, 0xAFFF21FF, 0x82BE46FF, 0xA8E96BFF, 0x94FF19FF, 0xB0DD99FF, 0x7BA366FF, 0x7AFF27FF,
                0x49FF21FF, 0x50BD47FF, 0x76E86BFF, 0x64A362FF, 0x00FF3CFF, 0x00EE6EFF, 0x346C4FFF, 0x569271FF,
                0x7CBC98FF, 0x30B482FF, 0x23A979FF, 0x00DF9BFF, 0x00DFBBFF, 0x2B665DFF, 0x2BAD9AFF, 0x69AAA0FF,
                0x00EAE0FF, 0x38BDC1FF, 0x00EBFFFF, 0x00CEFFFF, 0x319DBCFF, 0x326672FF, 0x5AC7E8FF, 0x2D80B7FF,
                0x00ADFFFF, 0x81ACD7FF, 0x1D44B0FF, 0x3967DCFF, 0x2200FFFF, 0x667ACEFF, 0x1D2565FF, 0x3E4D97FF,
                0x4300FFFF, 0x5F00FFFF, 0x4B2BB2FF, 0x877ECEFF, 0x684DDDFF, 0x584E95FF, 0x7900FFFF, 0x6C5199FF,
                0x9D7ED0FF, 0x8F05FFFF, 0x6D2FB3FF, 0x422866FF, 0x9052DFFF, 0x765399FF, 0x9B13FEFF, 0x7A31B5FF,
                0xA600FFFF, 0xA155E2FF, 0x492A66FF, 0xAE56E2FF, 0x8631B5FF, 0xB510FFFF, 0xBD15FFFF, 0xBA85D3FF,
                0x552B67FF, 0x9431B1FF, 0xCA11FFFF, 0xBE56DEFF, 0xC789D4FF, 0x9F35B3FF, 0x90599CFF, 0xE10AFFFF,
                0xED16FCFF, 0xDB5CE3FF, 0xAE36B6FF, 0xFD15DFFF, 0x9B5382FF, 0x692B54FF, 0xB33581FF, 0xDD56A4FF,
                0xFD1BA4FF, 0xFF1271FF, 0xCF8088FF, 0xFE173BFF, 0xCE8579FF, 0xB0342EFF, 0xFD2918FF, 0xDC654CFF,
                0xB1432EFF, 0xFA4411FF, 0x98584EFF, 0x986650FF, 0xFD580BFF, 0xDD754EFF, 0x663B28FF, 0xB0512CFF,
                0xB25D33FF, 0xFC6A1AFF, 0x9A6C54FF, 0xF8721EFF, 0xDE8155FF, 0xDF8650FF, 0xFD740EFF, 0xF9770FFF,
                0xB36731FF, 0x68412CFF, 0x68452FFF, 0x9A7258FF, 0xE08C54FF, 0xFA7E17FF, 0xB3612EFF, 0xD3A085FF,
                0xD0A386FF, 0xDE8B53FF, 0xB56832FF, 0xDF975AFF, 0xFD8F14FF, 0x6A4A2DFF, 0x9E7F5BFF, 0xFB9A1EFF,
                0xE0A259FF, 0xB47B35FF, 0xD7B58DFF, 0xB4863CFF, 0xDEAD5FFF, 0xF7B321FF, 0x6A5A36FF, 0x9E8B63FF,
        };

        int[] treat255 = new int[] {
                0x00000000, 0x000000FF, 0x282828FF, 0x585858FF, 0x868686FF, 0xA2A2A2FF, 0xCBCBCBFF, 0xFFFFFFFF,
                0xA6D755FF, 0x8ABF5EFF, 0x7AA221FF, 0x6E8A31FF, 0x0A4111FF, 0x0F661DFF, 0x147E25FF, 0x229E35FF,
                0x42C372FF, 0x8CE7A6FF, 0x78FAE6FF, 0x00C7A5FF, 0x009282FF, 0x163135FF, 0x21526BFF, 0x3B768FFF,
                0x53A1ADFF, 0x8CDAFFFF, 0x50AAF7FF, 0x3E83EBFF, 0x354AD7FF, 0x1D2DAAFF, 0x152135FF, 0x66397EFF,
                0x7E5596FF, 0xA68ABFFF, 0xDFBFEFFF, 0xC772FFFF, 0x9245E7FF, 0x6E05C3FF, 0x350082FF, 0x721C2FFF,
                0xB22E69FF, 0xE54286FF, 0xFF6EAFFF, 0xFF9AC7FF, 0xFFD7F3FF, 0xE3B3C3FF, 0xCB96A2FF, 0xAA768AFF,
                0xCF4929FF, 0xF3820DFF, 0xFFAA0DFF, 0xFFD3A6FF, 0xFFBB8AFF, 0xE7A67AFF, 0xBB7251FF, 0x82491DFF,
                0x513115FF, 0xB7515AFF, 0x6E5A51FF, 0x8A7A5AFF, 0xB79E5EFF, 0xDFC721FF, 0xFFDF00FF, 0xFFF3B3FF,
                0x050403FF, 0x0F0D0CFF, 0x4A4645FF, 0xB6B2B0FF, 0xB0881DFF, 0xEBBF55FF, 0xF7B321FF, 0xEDA832FF,
                0xB38331FF, 0x7A5600FF, 0xC28100FF, 0x774E00FF, 0xF1AD54FF, 0xEC9D36FF, 0xB5771FFF, 0xBF7600FF,
                0xFB9A1EFF, 0xEF9039FF, 0xB76B23FF, 0xFD8F14FF, 0xF39E54FF, 0xBE6700FF, 0xEF8532FF, 0x422000FF,
                0xD98957FF, 0xAD6435FF, 0xFA7E17FF, 0xF0813AFF, 0x68452FFF, 0xF6792EFF, 0xC15F00FF, 0xE0814EFF,
                0xC45E12FF, 0xAC603AFF, 0x813D00FF, 0x813E00FF, 0x723B1AFF, 0x3E1900FF, 0xA66743FF, 0x71422AFF,
                0xD9845CFF, 0xF48657FF, 0xDF7C52FF, 0xED6A36FF, 0xB75429FF, 0xFD580BFF, 0x7F2800FF, 0xFA4411FF,
                0xEE5636FF, 0xC13212FF, 0x491000FF, 0xF27059FF, 0xB74330FF, 0x7F1500FF, 0xFD2918FF, 0xED4437FF,
                0xC01C16FF, 0x7F2823FF, 0x480000FF, 0xFE173BFF, 0xB93850FF, 0xF5667CFF, 0xFF1271FF, 0xFD1BA4FF,
                0xC11C84FF, 0xED43A8FF, 0x7B065FFF, 0xB23C8EFF, 0xFD15DFFF, 0xB920BFFF, 0xE74CECFF, 0xED16FCFF,
                0xAE62B4FF, 0xE10AFFFF, 0x713078FF, 0xDC75EEFF, 0xA244B3FF, 0x3D0044FF, 0xD54AEEFF, 0xA81FC0FF,
                0x6D137CFF, 0x9A20BFFF, 0xCA11FFFF, 0x60117EFF, 0xC54AECFF, 0x9142B4FF, 0xBD15FFFF, 0xB510FFFF,
                0x8D1FC3FF, 0xB649F1FF, 0xD69BFFFF, 0x310049FF, 0xB871F5FF, 0x811FC2FF, 0x9661BCFF, 0xA849F0FF,
                0xA600FFFF, 0x8440B9FF, 0x540D80FF, 0x9B13FEFF, 0xA86FF3FF, 0x741EC0FF, 0x4B0F81FF, 0x8F05FFFF,
                0x7740B8FF, 0x8B44F3FF, 0x4F2F82FF, 0x7900FFFF, 0x26004BFF, 0x8972F7FF, 0x5B40B9FF, 0x6844F0FF,
                0x4D1DC4FF, 0x5F00FFFF, 0x4300FFFF, 0x4747F4FF, 0x5A73F7FF, 0x1A1584FF, 0x2200FFFF, 0x000E51FF,
                0x083DC7FF, 0x1B3D8AFF, 0x2762F5FF, 0x4672CAFF, 0x7BAEFFFF, 0x197AC7FF, 0x0081CBFF, 0x2DA8F8FF,
                0x00ADFFFF, 0x00A0CDFF, 0x24CBFAFF, 0x00CEFFFF, 0x00A0C1FF, 0x00EBFFFF, 0x00C2C8FF, 0x1FEEF3FF,
                0x007074FF, 0x00EAE0FF, 0x006F63FF, 0x00B7A7FF, 0x00B39BFF, 0x00DFBBFF, 0x00DF9BFF, 0x00AF74FF,
                0x00BA7DFF, 0x009E62FF, 0x007540FF, 0x00EE6EFF, 0x1ECF49FF, 0x00B733FF, 0x00FF3CFF, 0x72E873FF,
                0x003800FF, 0x5DEE53FF, 0x33C22AFF, 0x49FF21FF, 0x5AC01EFF, 0x82EE4EFF, 0x7AFF27FF, 0x66AB3CFF,
                0x387600FF, 0x94FF19FF, 0x476C17FF, 0x7AC214FF, 0xA0ED47FF, 0x7BA74DFF, 0xAFFF21FF, 0xB6E76CFF,
                0x507500FF, 0x8EBE16FF, 0xB8EC4BFF, 0xC9FF29FF, 0xDAFF2FFF, 0xD2EC45FF, 0x99AB33FF, 0xA8BF00FF,
                0xD0E669FF, 0x626900FF, 0x687700FF, 0xEDFF21FF, 0x99A340FF, 0xB8C113FF, 0xE2EC49FF, 0x333700FF,
                0xFBF42CFF, 0xE5D95BFF, 0x776B00FF, 0xE5D443FF, 0xAB9F22FF, 0xB9A700FF, 0xE7BC3EFF, 0xB89000FF,
        };

        // yam255 with lloyd relaxation run twice
        int[] yumdos255 = new int[]{
                0x00000000, 0x000000FF, 0x050403FF, 0x0F0D0CFF, 0x1A1817FF, 0x292625FF, 0x393534FF, 0x4A4645FF, 0x5C5957FF, 0x726E6CFF, 0x878381FF, 0x9D9997FF, 0xB6B2B0FF, 0xCFCAC8FF, 0xE9E4E2FF, 0xFBFFFFFF,
                0x390810FF, 0x5A4242FF, 0x947373FF, 0xD6A5ADFF, 0x391808FF, 0x524A42FF, 0x8C7B6BFF, 0xC6BDADFF, 0x292118FF, 0x63524AFF, 0x9C847BFF, 0xE7BDB5FF, 0x392918FF, 0x63524AFF, 0x9C8C84FF, 0xDEC6B5FF,
                0x423918FF, 0x6B6352FF, 0xA59C84FF, 0xE7DEBDFF, 0x184218FF, 0x526B52FF, 0x849C7BFF, 0xB5E7C6FF, 0x103110FF, 0x295231FF, 0x6B846BFF, 0x9CB59CFF, 0x103142FF, 0x4A636BFF, 0x849CA5FF, 0xB5E7EFFF,
                0x081039FF, 0x214252FF, 0x63738CFF, 0x94B5D6FF, 0x210831FF, 0x42395AFF, 0x736B94FF, 0xADA5D6FF, 0x291039FF, 0x4A4263FF, 0x84739CFF, 0xC6ADDEFF, 0x421031FF, 0x634A63FF, 0x9C7B9CFF, 0xE7B5DEFF,
                0x732110FF, 0x945242FF, 0xCE8473FF, 0x6B3918FF, 0x94634AFF, 0xD69484FF, 0x733918FF, 0xA56B5AFF, 0xEF9C8CFF, 0x734239FF, 0x9C735AFF, 0xC6A58CFF, 0x734A18FF, 0x947B4AFF, 0xD6AD84FF, 0x735218FF,
                0x9C845AFF, 0xE7B58CFF, 0x6B5A21FF, 0x9C8C63FF, 0xDEC694FF, 0x7B6B29FF, 0xAD9C6BFF, 0xE7D69CFF, 0x637B21FF, 0x9CAD6BFF, 0xD6EFADFF, 0x5A7331FF, 0x84A56BFF, 0xB5E7ADFF, 0x4A7329FF, 0x7BA55AFF,
                0xA5DEA5FF, 0x217321FF, 0x639C39FF, 0x84DE9CFF, 0x217352FF, 0x429463FF, 0x7BBD94FF, 0x18635AFF, 0x29847BFF, 0x63ADA5FF, 0x216B84FF, 0x5A94A5FF, 0x94CEDEFF, 0x184A73FF, 0x4A739CFF, 0x84ADDEFF,
                0x101873FF, 0x29529CFF, 0x637BD6FF, 0x31186BFF, 0x525294FF, 0x8484D6FF, 0x42106BFF, 0x6B529CFF, 0x9C7BD6FF, 0x4A2163FF, 0x735294FF, 0xA58CD6FF, 0x5A186BFF, 0x844A94FF, 0xBD84DEFF, 0x6B2173FF,
                0x9C5AA5FF, 0xD68CE7FF, 0x7B1852FF, 0xA55284FF, 0xE784B5FF, 0x731829FF, 0x945263FF, 0xD67B8CFF, 0xB51821FF, 0xD64A42FF, 0xB54221FF, 0xDE634AFF, 0xAD5218FF, 0xDE734AFF, 0xB55A31FF, 0xE78463FF,
                0xAD5A10FF, 0xDE8431FF, 0xC66B21FF, 0xD68C42FF, 0xAD6321FF, 0xEF8C5AFF, 0xA57321FF, 0xDE945AFF, 0xB57B21FF, 0xE7A552FF, 0xB58429FF, 0xDEAD63FF, 0xA59421FF, 0xDEBD63FF, 0xBDA529FF, 0xE7D663FF,
                0xBDC631FF, 0xE7F77BFF, 0xA5BD52FF, 0xC6EF84FF, 0x94B531FF, 0xBDE763FF, 0x84C631FF, 0xADEF63FF, 0x73B529FF, 0x9CE74AFF, 0x31BD29FF, 0x6BE763FF, 0x29A529FF, 0x39CE4AFF, 0x21A56BFF, 0x31BD84FF,
                0x21AD9CFF, 0x39C6ADFF, 0x29BDC6FF, 0x73EFE7FF, 0x219CBDFF, 0x5AC6E7FF, 0x217BBDFF, 0x4AA5E7FF, 0x1842B5FF, 0x2963DEFF, 0x2118ADFF, 0x394ADEFF, 0x4A18B5FF, 0x6B4AE7FF, 0x6318B5FF, 0x8452E7FF,
                0x6B29ADFF, 0x9452DEFF, 0x7B21B5FF, 0x9C5AE7FF, 0x8C21B5FF, 0xAD5AE7FF, 0x9418A5FF, 0xBD52D6FF, 0xA529B5FF, 0xC65ADEFF, 0xBD21B5FF, 0xE763E7FF, 0xB52184FF, 0xDE5AA5FF, 0xB52152FF, 0xDE527BFF,
                0xEF2118FF, 0xEF4A18FF, 0xF75A21FF, 0xF76B21FF, 0xEF7321FF, 0xFF7321FF, 0xEF7B18FF, 0xFF7B10FF, 0xEF8421FF, 0xF79418FF, 0xEF9C21FF, 0xF7A521FF, 0xEFB521FF, 0xEFC621FF, 0xEFDE29FF, 0xF7F739FF,
                0xEFFF21FF, 0xD6F731FF, 0xC6F729FF, 0xADF729FF, 0x94F729FF, 0x73F729FF, 0x52F718FF, 0x21F729FF, 0x29EF5AFF, 0x31DE94FF, 0x31DEBDFF, 0x29EFD6FF, 0x21E7F7FF, 0x21CEF7FF, 0x21A5F7FF, 0x2184F7FF,
                0x1818E7FF, 0x4221EFFF, 0x5A18EFFF, 0x7318EFFF, 0x8C18EFFF, 0x9421EFFF, 0xA518EFFF, 0xAD18EFFF, 0xBD21EFFF, 0xCE18EFFF, 0xD618EFFF, 0xEF21F7FF, 0xEF21D6FF, 0xEF21A5FF, 0xEF1873FF, 0xEF1842FF,
        };
        // yam255 with lloyd relaxation run five times
        int[] yumcinco255 = new int[]{
                0x00000000, 0x000000FF, 0x050403FF, 0x0F0D0CFF, 0x1A1817FF, 0x292625FF, 0x393534FF, 0x4A4645FF, 0x5C5957FF, 0x726E6CFF, 0x878381FF, 0x9D9997FF, 0xB6B2B0FF, 0xCFCAC8FF, 0xE9E4E2FF, 0xFBFFFFFF,
                0x310810FF, 0x5A3142FF, 0x946B7BFF, 0xD6A5BDFF, 0x521010FF, 0x524A29FF, 0x8C7B63FF, 0xBDBDADFF, 0x182108FF, 0x73524AFF, 0xAD847BFF, 0xEFB5BDFF, 0x422910FF, 0x635242FF, 0x9C8C9CFF, 0xEFC6B5FF,
                0x423910FF, 0x73634AFF, 0xA59C84FF, 0xEFDEBDFF, 0x184218FF, 0x526B52FF, 0x6B9C7BFF, 0xADEFD6FF, 0x103110FF, 0x215221FF, 0x5A846BFF, 0x94B59CFF, 0x103152FF, 0x4A6373FF, 0x849CBDFF, 0xB5E7EFFF,
                0x080839FF, 0x184252FF, 0x63738CFF, 0x94B5D6FF, 0x210829FF, 0x39315AFF, 0x736B94FF, 0xADA5CEFF, 0x29104AFF, 0x4A4273FF, 0x8473ADFF, 0xC6ADEFFF, 0x4A1031FF, 0x6B4A63FF, 0xAD7BA5FF, 0xEFB5EFFF,
                0x7B1010FF, 0x944A31FF, 0xC68473FF, 0x633910FF, 0x94634AFF, 0xD69494FF, 0x8C2910FF, 0xB56B63FF, 0xF79C94FF, 0x8C2939FF, 0xA5734AFF, 0xC6A58CFF, 0x734A18FF, 0x7B7B42FF, 0xCEAD84FF, 0x845218FF,
                0xB58452FF, 0xEFB58CFF, 0x525A18FF, 0x948C5AFF, 0xD6C694FF, 0x7B6B18FF, 0xB59C5AFF, 0xEFD694FF, 0x4A8421FF, 0x9CAD6BFF, 0xDEF7B5FF, 0x5A7331FF, 0x73A573FF, 0x94EFADFF, 0x317321FF, 0x73A552FF,
                0xA5D6A5FF, 0x107318FF, 0x639C21FF, 0x7BDE8CFF, 0x187352FF, 0x299463FF, 0x73BD94FF, 0x186352FF, 0x218484FF, 0x63ADADFF, 0x186B84FF, 0x5A94A5FF, 0x94CEDEFF, 0x184A73FF, 0x31739CFF, 0x7BADEFFF,
                0x101073FF, 0x2152A5FF, 0x637BD6FF, 0x29187BFF, 0x52529CFF, 0x7B8CE7FF, 0x42086BFF, 0x6B52B5FF, 0x9C73D6FF, 0x4A2163FF, 0x73528CFF, 0xA594DEFF, 0x5A106BFF, 0x8C4294FF, 0xBD84DEFF, 0x73187BFF,
                0x9C5AADFF, 0xE78CEFFF, 0x841852FF, 0xB55284FF, 0xEF84B5FF, 0x6B1031FF, 0x944A63FF, 0xD6738CFF, 0xB51021FF, 0xD64242FF, 0xBD3121FF, 0xDE6352FF, 0xA54A18FF, 0xDE734AFF, 0xBD5221FF, 0xF77B73FF,
                0x945A18FF, 0xD68418FF, 0xCE6B21FF, 0xCE8C31FF, 0xAD6318FF, 0xF78C5AFF, 0x9C7318FF, 0xDE945AFF, 0xBD7B21FF, 0xF7A55AFF, 0xAD8C21FF, 0xCEAD63FF, 0x949421FF, 0xDEBD63FF, 0xBDA521FF, 0xE7D663FF,
                0xBDC629FF, 0xEFF77BFF, 0xA5BD63FF, 0xBDF78CFF, 0x94B521FF, 0xBDDE52FF, 0x73CE31FF, 0x8CF77BFF, 0x63B529FF, 0x9CDE29FF, 0x21B521FF, 0x39F77BFF, 0x219C21FF, 0x29CE29FF, 0x29A563FF, 0x31BD73FF,
                0x21AD9CFF, 0x29C6ADFF, 0x29BDCEFF, 0x63F7E7FF, 0x219CBDFF, 0x5AC6E7FF, 0x217BBDFF, 0x4AA5E7FF, 0x1839B5FF, 0x2963DEFF, 0x1010ADFF, 0x294ADEFF, 0x4218ADFF, 0x5A4AE7FF, 0x6310B5FF, 0x7B52E7FF,
                0x5A31A5FF, 0x944ACEFF, 0x7B18B5FF, 0x846BEFFF, 0x8C18BDFF, 0xAD5AEFFF, 0x94108CFF, 0xBD4ABDFF, 0xA521B5FF, 0xCE5ADEFF, 0xC618B5FF, 0xEF63E7FF, 0xB51884FF, 0xDE5AADFF, 0xB52152FF, 0xEF4A7BFF,
                0xE71818FF, 0xEF4218FF, 0xF75A29FF, 0xF76B18FF, 0xE77318FF, 0xF77342FF, 0xEF7B18FF, 0xFF7B18FF, 0xEF8421FF, 0xF79421FF, 0xDE9C21FF, 0xF7A521FF, 0xE7B521FF, 0xEFC621FF, 0xE7DE29FF, 0xF7F731FF,
                0xEFFF18FF, 0xD6F739FF, 0xC6F729FF, 0xADF729FF, 0x8CF731FF, 0x6BF729FF, 0x39F739FF, 0x18F718FF, 0x31E739FF, 0x31D684FF, 0x31DEBDFF, 0x31F7BDFF, 0x39E7EFFF, 0x21CEEFFF, 0x18A5EFFF, 0x2984EFFF,
                0x1010E7FF, 0x3121EFFF, 0x5218E7FF, 0x7318E7FF, 0x8C10EFFF, 0x9431EFFF, 0xA510D6FF, 0xAD18EFFF, 0xBD29EFFF, 0xCE18D6FF, 0xD621EFFF, 0xEF21F7FF, 0xEF21CEFF, 0xEF21A5FF, 0xE71873FF, 0xEF214AFF
        };

        int[] dichotomy255 = new int[] {
                0x00000000, 0x000000FF, 0x282828FF, 0x585858FF, 0x868686FF, 0xA2A2A2FF, 0xCBCBCBFF, 0xFFFFFFFF,
                0xA6D755FF, 0x8ABF5EFF, 0x7AA221FF, 0x6E8A31FF, 0x0A4111FF, 0x0F661DFF, 0x147E25FF, 0x229E35FF,
                0x42C372FF, 0x8CE7A6FF, 0x78FAE6FF, 0x00C7A5FF, 0x009282FF, 0x163135FF, 0x21526BFF, 0x3B768FFF,
                0x53A1ADFF, 0x8CDAFFFF, 0x50AAF7FF, 0x3E83EBFF, 0x354AD7FF, 0x1D2DAAFF, 0x152135FF, 0x66397EFF,
                0x7E5596FF, 0xA68ABFFF, 0xDFBFEFFF, 0xC772FFFF, 0x9245E7FF, 0x6E05C3FF, 0x350082FF, 0x721C2FFF,
                0xB22E69FF, 0xE54286FF, 0xFF6EAFFF, 0xFF9AC7FF, 0xFFD7F3FF, 0xE3B3C3FF, 0xCB96A2FF, 0xAA768AFF,
                0xCF4929FF, 0xF3820DFF, 0xFFAA0DFF, 0xFFD3A6FF, 0xFFBB8AFF, 0xE7A67AFF, 0xBB7251FF, 0x82491DFF,
                0x513115FF, 0xB7515AFF, 0x6E5A51FF, 0x8A7A5AFF, 0xB79E5EFF, 0xDFC721FF, 0xFFDF00FF, 0xFFF3B3FF,
                0x050403FF, 0x0F0D0CFF, 0x292118FF, 0x392918FF, 0x393534FF, 0x214252FF, 0x4A4645FF, 0x5A4242FF,
                0x524A42FF, 0x634A63FF, 0x63524AFF, 0x63524AFF, 0x4A636BFF, 0x526B52FF, 0x726E6CFF, 0x63738CFF,
                0x6B846BFF, 0x947373FF, 0x9C847BFF, 0x9C8C84FF, 0x849C7BFF, 0x849CA5FF, 0xA59C84FF, 0xC6A58CFF,
                0x9CB59CFF, 0x94B5D6FF, 0xB6B2B0FF, 0xC6BDADFF, 0xDEC6B5FF, 0xB5E7EFFF, 0xE7DEBDFF, 0xDEBD63FF,
                0x6B5A21FF, 0x7B6B29FF, 0xBDA529FF, 0xA59421FF, 0xE7D663FF, 0xF7F739FF, 0xBDC631FF, 0xEFFF21FF,
                0xE7F77BFF, 0xD6F731FF, 0x9CAD6BFF, 0x94B531FF, 0xC6F729FF, 0xBDE763FF, 0xC6EF84FF, 0x5A7331FF,
                0xADF729FF, 0xADEF63FF, 0x84C631FF, 0x73B529FF, 0x7BA55AFF, 0x94F729FF, 0x84A56BFF, 0x73F729FF,
                0x52F718FF, 0xB5E7ADFF, 0x31BD29FF, 0x6BE763FF, 0x21F729FF, 0x103110FF, 0xA5DEA5FF, 0x39CE4AFF,
                0x29EF5AFF, 0x295231FF, 0x429463FF, 0xB5E7C6FF, 0x7BBD94FF, 0x21A56BFF, 0x31DE94FF, 0x217352FF,
                0x31DEBDFF, 0x29EFD6FF, 0x21AD9CFF, 0x18635AFF, 0x63ADA5FF, 0x29BDC6FF, 0x21E7F7FF, 0x21CEF7FF,
                0x219CBDFF, 0x5AC6E7FF, 0x216B84FF, 0x21A5F7FF, 0x217BBDFF, 0x84ADDEFF, 0x29529CFF, 0x2963DEFF,
                0x1842B5FF, 0x081039FF, 0x1818E7FF, 0x101873FF, 0x637BD6FF, 0x4221EFFF, 0x525294FF, 0x8484D6FF,
                0x5A18EFFF, 0x6B4AE7FF, 0x4A18B5FF, 0xADA5D6FF, 0x736B94FF, 0x7318EFFF, 0x42395AFF, 0x4A4263FF,
                0x8452E7FF, 0x6B529CFF, 0x9C7BD6FF, 0x8C18EFFF, 0x84739CFF, 0x6B29ADFF, 0x9C5AE7FF, 0x42106BFF,
                0x9421EFFF, 0xC6ADDEFF, 0x210831FF, 0x7B21B5FF, 0x291039FF, 0xAD5AE7FF, 0xA518EFFF, 0x4A2163FF,
                0xAD18EFFF, 0xBD84DEFF, 0x8C21B5FF, 0xBD21EFFF, 0x844A94FF, 0x5A186BFF, 0xBD52D6FF, 0xD68CE7FF,
                0xCE18EFFF, 0xD618EFFF, 0x9418A5FF, 0x9C5AA5FF, 0xA529B5FF, 0xEF21F7FF, 0xE763E7FF, 0xBD21B5FF,
                0xEF21D6FF, 0x421031FF, 0xA55284FF, 0xB52184FF, 0xEF21A5FF, 0xDE5AA5FF, 0x7B1852FF, 0xEF1873FF,
                0xD67B8CFF, 0xEF1842FF, 0x390810FF, 0xB51821FF, 0xEF2118FF, 0x734239FF, 0xEF9C8CFF, 0xCE8473FF,
                0xDE634AFF, 0x732110FF, 0x945242FF, 0xEF4A18FF, 0xB54221FF, 0xE78463FF, 0xF75A21FF, 0xDE734AFF,
                0xB55A31FF, 0x391808FF, 0xF76B21FF, 0xEF8C5AFF, 0x94634AFF, 0xFF7321FF, 0x733918FF, 0xAD5218FF,
                0xEF7321FF, 0x9C735AFF, 0x6B3918FF, 0xFF7B10FF, 0xEF7B18FF, 0xC66B21FF, 0xAD5A10FF, 0xDE945AFF,
                0xAD6321FF, 0xDE8431FF, 0xD68C42FF, 0xF79418FF, 0xE7A552FF, 0xEF9C21FF, 0xB57B21FF, 0xDEAD63FF,
                0xA57321FF, 0x735218FF, 0x9C845AFF, 0xB58429FF, 0x947B4AFF, 0xDEC694FF, 0xEFB521FF, 0x9C8C63FF,
        };

        // yam255 with 2 lloydCentral iterations, using Oklab version.
        int[] joker255 = new int[] {
                0x00000000, 0x000000FF, 0x050403FF, 0x0F0D0CFF, 0x1A1817FF, 0x292625FF, 0x393534FF, 0x4A4645FF, 0x5C5957FF, 0x726E6CFF, 0x878381FF, 0x9D9997FF, 0xB6B2B0FF, 0xCFCAC8FF, 0xE9E4E2FF, 0xFBFFFFFF,
                0x3F0C10FF, 0x5C393EFF, 0x956C75FF, 0xDBA3B1FF, 0x3B1C0CFF, 0x504D3CFF, 0x8A7F6CFF, 0xBDC1AEFF, 0x251F12FF, 0x614C48FF, 0xA77E77FF, 0xEDB8B6FF, 0x452515FF, 0x5F5643FF, 0x9C8C86FF, 0xEBCABBFF,
                0x423817FF, 0x6E6552FF, 0xA69E87FF, 0xECE0C0FF, 0x1A421BFF, 0x4F6951FF, 0x7B9B80FF, 0xB6ECCFFF, 0x142B13FF, 0x2C5527FF, 0x6A8369FF, 0x9BBAA1FF, 0x153144FF, 0x4D6272FF, 0x829AAEFF, 0xB5E6F1FF,
                0x09123EFF, 0x1B4454FF, 0x5E798DFF, 0x95B7D6FF, 0x1C0A34FF, 0x42375FFF, 0x746693FF, 0xAFA1DAFF, 0x2C133FFF, 0x4D4569FF, 0x8178A3FF, 0xC3B0E7FF, 0x461234FF, 0x6D4767FF, 0xA7799DFF, 0xECB4E7FF,
                0x731B11FF, 0x93523DFF, 0xC58374FF, 0x623819FF, 0x90654DFF, 0xD39486FF, 0x833619FF, 0xAF695CFF, 0xF49892FF, 0x80403DFF, 0x99745FFF, 0xC1A588FF, 0x6A4715FF, 0x8F7846FF, 0xD1AC7FFF, 0x7D4F1BFF,
                0x9E8253FF, 0xF0B18AFF, 0x695B1FFF, 0x998F5DFF, 0xD9C590FF, 0x816925FF, 0xB09D63FF, 0xEDD695FF, 0x648325FF, 0xA0B06AFF, 0xDDF6B5FF, 0x5E7035FF, 0x7FAB72FF, 0xA3F4B5FF, 0x4B6D25FF, 0x7AA159FF,
                0xACD99CFF, 0x227922FF, 0x6C9933FF, 0x80E69DFF, 0x257354FF, 0x3C9063FF, 0x7BC493FF, 0x20625BFF, 0x2A8783FF, 0x67AEA6FF, 0x236A86FF, 0x5D93A8FF, 0x92D1E1FF, 0x1D4B77FF, 0x4473A2FF, 0x7FAAE6FF,
                0x131A75FF, 0x2B559EFF, 0x6378DAFF, 0x311D6DFF, 0x544B97FF, 0x7E86E2FF, 0x481273FF, 0x6851A7FF, 0xA174D6FF, 0x4E2259FF, 0x75599BFF, 0xA08EDAFF, 0x5D1770FF, 0x894794FF, 0xBF81E0FF, 0x72237CFF,
                0x9D5EAEFF, 0xE38EEBFF, 0x811C56FF, 0xAA5280FF, 0xE981B5FF, 0x72162DFF, 0x974B5EFF, 0xD9788CFF, 0xAE1D20FF, 0xD54B45FF, 0xBE3B26FF, 0xE16457FF, 0xA84D19FF, 0xD8744AFF, 0xBD583AFF, 0xF17B67FF,
                0xA75E15FF, 0xD8802BFF, 0xCA6525FF, 0xCF8E40FF, 0xAF672EFF, 0xF68D62FF, 0xA0711EFF, 0xE0985CFF, 0xBA7924FF, 0xE4A253FF, 0xB3862EFF, 0xDAB161FF, 0xA39324FF, 0xE0C166FF, 0xBFA52BFF, 0xE4D668FF,
                0xBDC630FF, 0xEEF481FF, 0xA2C362FF, 0xBDF789FF, 0x97B333FF, 0xC4E159FF, 0x83CB35FF, 0x9DF376FF, 0x70B230FF, 0x9FDF3CFF, 0x32C129FF, 0x66EF75FF, 0x2FA42CFF, 0x3DD24DFF, 0x27A265FF, 0x38BC7DFF,
                0x2DA89BFF, 0x3BC9B0FF, 0x36BAC9FF, 0x79F2E8FF, 0x289CC1FF, 0x60C9E6FF, 0x2580BCFF, 0x57A2E3FF, 0x1F43B4FF, 0x2F66DBFF, 0x201DAEFF, 0x334DE7FF, 0x4A21B0FF, 0x664FE4FF, 0x6519B2FF, 0x8051E3FF,
                0x6E2EA4FF, 0x8F57DDFF, 0x7924BAFF, 0x9D5AEAFF, 0x8B20BDFF, 0xB15CEEFF, 0x951C95FF, 0xC14CCDFF, 0xA32FB5FF, 0xCD5FE5FF, 0xC324B6FF, 0xEF63E5FF, 0xB82480FF, 0xDF58A8FF, 0xB52152FF, 0xE45377FF,
                0xEA211AFF, 0xF24727FF, 0xF15B25FF, 0xFA682FFF, 0xEB7124FF, 0xFE7831FF, 0xE47815FF, 0xFD7F1CFF, 0xEE8729FF, 0xF19222FF, 0xEF9D25FF, 0xF3A730FF, 0xE9B42AFF, 0xEDC729FF, 0xEADE2EFF, 0xF5F444FF,
                0xF4FD27FF, 0xD9FA3BFF, 0xC7F332FF, 0xAFF733FF, 0x94F734FF, 0x73F63CFF, 0x4BFB26FF, 0x2CF02EFF, 0x37EA5AFF, 0x39E395FF, 0x40DEBEFF, 0x3CF7D1FF, 0x36E8F4FF, 0x28CAF1FF, 0x29A5F2FF, 0x2F82F1FF,
                0x1921E8FF, 0x3D25EAFF, 0x5A22EAFF, 0x7322EAFF, 0x881EECFF, 0x9825E7FF, 0xA61CEDFF, 0xB01DE4FF, 0xB92DECFF, 0xCA23EAFF, 0xDB20E9FF, 0xF12BF6FF, 0xF027D1FF, 0xEB26A4FF, 0xEB2372FF, 0xEA2144FF
        };

        int[] tater255 = new int[] {
                0x00000000, 0x000000FF, 0x282828FF, 0x585858FF, 0x868686FF, 0xA2A2A2FF, 0xCBCBCBFF, 0xFFFFFFFF,
                0xA6D755FF, 0x8ABF5EFF, 0x7AA221FF, 0x6E8A31FF, 0x0A4111FF, 0x0F661DFF, 0x147E25FF, 0x229E35FF,
                0x42C372FF, 0x8CE7A6FF, 0x78FAE6FF, 0x00C7A5FF, 0x009282FF, 0x163135FF, 0x21526BFF, 0x3B768FFF,
                0x53A1ADFF, 0x8CDAFFFF, 0x50AAF7FF, 0x3E83EBFF, 0x354AD7FF, 0x1D2DAAFF, 0x152135FF, 0x66397EFF,
                0x7E5596FF, 0xA68ABFFF, 0xDFBFEFFF, 0xC772FFFF, 0x9245E7FF, 0x6E05C3FF, 0x350082FF, 0x721C2FFF,
                0xB22E69FF, 0xE54286FF, 0xFF6EAFFF, 0xFF9AC7FF, 0xFFD7F3FF, 0xE3B3C3FF, 0xCB96A2FF, 0xAA768AFF,
                0xCF4929FF, 0xF3820DFF, 0xFFAA0DFF, 0xFFD3A6FF, 0xFFBB8AFF, 0xE7A67AFF, 0xBB7251FF, 0x82491DFF,
                0x513115FF, 0xB7515AFF, 0x6E5A51FF, 0x8A7A5AFF, 0xB79E5EFF, 0xDFC721FF, 0xFFDF00FF, 0xFFF3B3FF,
                0x050403FF, 0x0F0D0CFF, 0x1A1817FF, 0x251F12FF, 0x393534FF, 0x5C393EFF, 0x4A4645FF, 0x504D3CFF,
                0x614C48FF, 0x5F5643FF, 0x4D6272FF, 0x4F6951FF, 0x726E6CFF, 0x5E798DFF, 0x956C75FF, 0x6A8369FF,
                0xA77E77FF, 0x9C8C86FF, 0x7B9B80FF, 0x829AAEFF, 0xA69E87FF, 0xC1A588FF, 0x95B7D6FF, 0x9BBAA1FF,
                0xB6B2B0FF, 0xBDC1AEFF, 0xEBCABBFF, 0xB5E6F1FF, 0xECE0C0FF, 0x816925FF, 0xE0C166FF, 0x998F5DFF,
                0x8F7846FF, 0x695B1FFF, 0xBFA52BFF, 0xE4D668FF, 0xA39324FF, 0xF5F444FF, 0xF4FD27FF, 0xEEF481FF,
                0xBDC630FF, 0xD9FA3BFF, 0xA0B06AFF, 0xC4E159FF, 0x97B333FF, 0xC7F332FF, 0x5E7035FF, 0xAFF733FF,
                0x83CB35FF, 0xBDF789FF, 0x70B230FF, 0x7AA159FF, 0x94F734FF, 0x9DF376FF, 0x73F63CFF, 0xACD99CFF,
                0x2C5527FF, 0x4BFB26FF, 0x7FAB72FF, 0x32C129FF, 0x2CF02EFF, 0x142B13FF, 0x3DD24DFF, 0x66EF75FF,
                0x37EA5AFF, 0xA3F4B5FF, 0x7BC493FF, 0x27A265FF, 0x3C9063FF, 0x39E395FF, 0xB6ECCFFF, 0x257354FF,
                0x40DEBEFF, 0x3CF7D1FF, 0x2DA89BFF, 0x20625BFF, 0x67AEA6FF, 0x36E8F4FF, 0x36BAC9FF, 0x60C9E6FF,
                0x28CAF1FF, 0x236A86FF, 0x289CC1FF, 0x1B4454FF, 0x2580BCFF, 0x29A5F2FF, 0x7FAAE6FF, 0x2B559EFF,
                0x2F66DBFF, 0x1F43B4FF, 0x1921E8FF, 0x131A75FF, 0x6378DAFF, 0x3D25EAFF, 0x7E86E2FF, 0x664FE4FF,
                0x5A22EAFF, 0x544B97FF, 0x4A21B0FF, 0xAFA1DAFF, 0x4D4569FF, 0x8178A3FF, 0x7322EAFF, 0x1C0A34FF,
                0x6851A7FF, 0x746693FF, 0xC3B0E7FF, 0x8F57DDFF, 0x42375FFF, 0x9D5AEAFF, 0x881EECFF, 0x6E2EA4FF,
                0xA174D6FF, 0x481273FF, 0x7924BAFF, 0x9825E7FF, 0x2C133FFF, 0xA61CEDFF, 0xBF81E0FF, 0xB15CEEFF,
                0x8B20BDFF, 0x4E2259FF, 0x5D1770FF, 0xB92DECFF, 0xB01DE4FF, 0x9D5EAEFF, 0xCA23EAFF, 0xA32FB5FF,
                0x894794FF, 0xE38EEBFF, 0xDB20E9FF, 0xC14CCDFF, 0x951C95FF, 0xF12BF6FF, 0xEF63E5FF, 0xC324B6FF,
                0x6D4767FF, 0xF027D1FF, 0x461234FF, 0xDF58A8FF, 0xB82480FF, 0xEB26A4FF, 0xAA5280FF, 0x811C56FF,
                0x974B5EFF, 0xE45377FF, 0xD9788CFF, 0x3F0C10FF, 0xEA2144FF, 0xAE1D20FF, 0xF49892FF, 0x80403DFF,
                0xEA211AFF, 0xE16457FF, 0x731B11FF, 0xF17B67FF, 0xF24727FF, 0xBE3B26FF, 0xC58374FF, 0x833619FF,
                0xF15B25FF, 0x93523DFF, 0xD8744AFF, 0xF68D62FF, 0xFA682FFF, 0x3B1C0CFF, 0xA84D19FF, 0x452515FF,
                0x90654DFF, 0xFE7831FF, 0xCA6525FF, 0xEB7124FF, 0x99745FFF, 0xFD7F1CFF, 0xAF672EFF, 0x623819FF,
                0xE47815FF, 0xA75E15FF, 0xE0985CFF, 0xD8802BFF, 0xF19222FF, 0x6A4715FF, 0xCF8E40FF, 0xBA7924FF,
                0xE4A253FF, 0xEF9D25FF, 0xA0711EFF, 0xB3862EFF, 0xDAB161FF, 0x9E8253FF, 0xD9C590FF, 0xE9B42AFF,
        };

        int[] limited31 = {
                0x00000000,
                0x000000FF,
                0x292625FF,
                0x4A4645FF,
                0x726E6CFF,
                0x9D9997FF,
                0xCFCAC8FF,
                0xFBFFFFFF,
                0x662F28FF,
                0xB0342EFF,
                0xD0977EFF,
                0x68452FFF,
                0xB36731FF,
                0xD3AA85FF,
                0x6E6C3DFF,
                0xDDEC6FFF,
                0xD9DCC4FF,
                0x366F35FF,
                0x47CA5FFF,
                0xB0DD99FF,
                0x326672FF,
                0x63E7ECFF,
                0xBDDCDFFF,
                0x1D2565FF,
                0x3967DCFF,
                0x81ACD7FF,
                0x422866FF,
                0x662CB3FF,
                0x9D7ED0FF,
                0x5E2E69FF,
                0xDD56A4FF,
                0xCFB5D2FF
        };

        int[] yam2 = {
                0x00000000, 0x000000FF, 0x0B0909FF, 0x1C1A19FF, 0x302D2CFF, 0x464241FF, 0x5A5755FF, 0x6F6B6AFF,
                0x847F7EFF, 0x999492FF, 0xACA7A5FF, 0xBEB9B7FF, 0xD1CCCAFF, 0xE2DDDBFF, 0xF3EEEBFF, 0xFFFDFBFF,
                0x3D1913FF, 0x7C4C43FF, 0xB98076FF, 0xEFB0A4FF, 0x342620FF, 0x6F5C54FF, 0xA89289FF, 0xDCC4BAFF,
                0x3B2414FF, 0x7B5D48FF, 0xB8957DFF, 0xEEC8ADFF, 0x392E19FF, 0x776A4FFF, 0xB1A183FF, 0xE6D5B4FF,
                0x353914FF, 0x73794DFF, 0xADB482FF, 0xE2EBB4FF, 0x27391DFF, 0x627955FF, 0x9AB58CFF, 0xCDEABDFF,
                0x14391AFF, 0x457049FF, 0x73A478FF, 0x9FD4A4FF, 0x173B3FFF, 0x50797EFF, 0x87B5BBFF, 0xB8EAF0FF,
                0x0A1A42FF, 0x364F82FF, 0x6583BDFF, 0x92B3F4FF, 0x271B3EFF, 0x5D4F7DFF, 0x9182B7FF, 0xC3B2EDFF,
                0x321941FF, 0x6D4E81FF, 0xA683BEFF, 0xDAB3F4FF, 0x3A1B3EFF, 0x78517DFF, 0xB486B9FF, 0xE9B7EFFF,
                0x79261AFF, 0xB55545FF, 0xEB816DFF, 0x74351EFF, 0xAE654AFF, 0xE49274FF, 0x6A4434FF, 0xA17461FF,
                0xD4A28DFF, 0x604C40FF, 0x978072FF, 0xC8AF9FFF, 0x7A491DFF, 0xB67D4DFF, 0xEBAD78FF, 0x725328FF,
                0xAF8A5AFF, 0xE5BD88FF, 0x765C20FF, 0xB29554FF, 0xE9CA83FF, 0x706E2AFF, 0xAEAC62FF, 0xE5E393FF,
                0x65761BFF, 0x9FB455FF, 0xD4EB85FF, 0x58742AFF, 0x90B15FFF, 0xC4E98FFF, 0x3F741CFF, 0x76B254FF,
                0xA8EA84FF, 0x28762CFF, 0x5EB25FFF, 0x8FE98EFF, 0x14754EFF, 0x47A679FF, 0x70D3A2FF, 0x156B65FF,
                0x459992FF, 0x6CC4BBFF, 0x00697CFF, 0x4AA5BAFF, 0x7CDBF2FF, 0x0F4A77FF, 0x4380B4FF, 0x71B3EDFF,
                0x1D217DFF, 0x4052BBFF, 0x6680F3FF, 0x362479FF, 0x6154B4FF, 0x8E81EDFF, 0x4B207FFF, 0x7C50BCFF,
                0xAC7EF4FF, 0x552779FF, 0x8855B3FF, 0xB982E9FF, 0x63237EFF, 0x9B55BAFF, 0xCE82F1FF, 0x702978FF,
                0xAA5AB3FF, 0xE089EAFF, 0x7A2061FF, 0xB64F95FF, 0xEC7BC6FF, 0x722431FF, 0xAE535EFF, 0xE47E88FF,
                0xBD2520FF, 0xEB4C40FF, 0xBA3D27FF, 0xE55F46FF, 0xBE4424FF, 0xEC6845FF, 0xA1614AFF, 0xCB846BFF,
                0xA76240FF, 0xD48963FF, 0xBA6130FF, 0xE78653FF, 0xBB6420FF, 0xEB8C48FF, 0xB67230FF, 0xE59B56FF,
                0xBB7721FF, 0xECA24CFF, 0xB58533FF, 0xE3B05AFF, 0xBE9923FF, 0xEAC24DFF, 0xBDAD3DFF, 0xEADA66FF,
                0xAFBA1DFF, 0xDFEC54FF, 0xA4BB37FF, 0xD1EB63FF, 0x8ABD26FF, 0xB6EE56FF, 0x78B937FF, 0xA4EB63FF,
                0x5FBA17FF, 0x8AEC4DFF, 0x41BA30FF, 0x6CEA5BFF, 0x00BC40FF, 0x25DB5AFF, 0x18B27FFF, 0x37C993FF,
                0x00B8A1FF, 0x25D6BDFF, 0x25BBBFFF, 0x5AEBEFFF, 0x009EC0FF, 0x41CBF0FF, 0x097ABAFF, 0x40A6ECFF,
                0x0024C0FF, 0x164CEFFF, 0x332DB7FF, 0x4C51E3FF, 0x4E22C1FF, 0x6E4CF3FF, 0x672DBBFF, 0x8B53EAFF,
                0x7823C5FF, 0x9E4BF4FF, 0x8130BFFF, 0xA755ECFF, 0x9123C7FF, 0xBB4EF7FF, 0x9B31BBFF, 0xC759EAFF,
                0xAF27C8FF, 0xDC51F6FF, 0xB435B9FF, 0xE35CE7FF, 0xBE2285FF, 0xEB49AAFF, 0xB82E56FF, 0xE45076FF,
                0xFF1B00FF, 0xF34428FF, 0xFC4400FF, 0xCD7758FF, 0xD7764CFF, 0xED7432FF, 0xC59171FF, 0xF87E26FF,
                0xF98000FF, 0xF49023FF, 0xFA9600FF, 0xF2A733FF, 0xF6AF00FF, 0xF9C834FF, 0xFEDD00FF, 0xFFF932FF,
                0xEDFF00FF, 0xD7FB38FF, 0xC1FE00FF, 0xACF829FF, 0x8CFF00FF, 0x72FC32FF, 0x2EFE00FF, 0x26FC45FF,
                0x00FF7EFF, 0x28F7B1FF, 0x00FBD4FF, 0x07FFF5FF, 0x00E7FEFF, 0x00C3F8FF, 0x00A6FFFF, 0x0070F2FF,
                0x2300FFFF, 0x3F25F1FF, 0x5F00FFFF, 0x7824F7FF, 0x9500FFFF, 0x9625FAFF, 0xAD00FFFF, 0xB32AFFFF,
                0xCA00FFFF, 0xC72BF8FF, 0xEB03FFFF, 0xEF33FFFF, 0xFE00E2FF, 0xF02D9CFF, 0xFF0070FF, 0xF62941FF,
        };

        int[] yam3 = {
                0x00000000, 0x000000FF, 0x0B0909FF, 0x1C1A19FF, 0x302D2CFF, 0x464241FF, 0x5A5755FF, 0x6F6B6AFF,
                0x847F7EFF, 0x999492FF, 0xACA7A5FF, 0xBEB9B7FF, 0xD1CCCAFF, 0xE2DDDBFF, 0xF3EEEBFF, 0xFFFDFBFF,
                0x62322CFF, 0x824C45FF, 0xA36760FF, 0xC7867DFF, 0xEBA69DFF, 0x644D47FF, 0x856B65FF, 0xA1867EFF,
                0xBC9F97FF, 0xDCBDB5FF, 0x664A37FF, 0x83644FFF, 0xA2816AFF, 0xC4A087FF, 0xE7C1A7FF, 0x6E5B43FF,
                0x937E64FF, 0xB19B7FFF, 0xCCB597FF, 0xE7CFB0FF, 0x66663DFF, 0x87875BFF, 0xA2A374FF, 0xC0C18FFF,
                0xE2E3AFFF, 0x4B5E38FF, 0x677D53FF, 0x869D70FF, 0xA6C090FF, 0xC9E4B1FF, 0x436E48FF, 0x639267FF,
                0x7EAF82FF, 0x95C899FF, 0xB1E7B5FF, 0x416766FF, 0x5D8585FF, 0x77A2A2FF, 0x95C2C1FF, 0xB4E4E3FF,
                0x2D4475FF, 0x4A659BFF, 0x6380BBFF, 0x7999D6FF, 0x8FB0F0FF, 0x4F416DFF, 0x6C5D8DFF, 0x8576A9FF,
                0x9F8FC6FF, 0xBEADE7FF, 0x573A6AFF, 0x735388FF, 0x906FA7FF, 0xB18DCAFF, 0xD4ADEEFF, 0x6D466CFF,
                0x916690FF, 0xAE80ADFF, 0xC898C7FF, 0xE5B2E4FF, 0x953229FF, 0xBC5044FF, 0xE77264FF, 0x885E4CFF,
                0xAA7D69FF, 0xCD9C87FF, 0x935C36FF, 0xB87B53FF, 0xE2A176FF, 0x9E7844FF, 0xC59D65FF, 0xE6BB80FF,
                0x90963DFF, 0xB4BB5EFF, 0xDAE280FF, 0x688D3FFF, 0x8BB460FF, 0xB4E086FF, 0x449F4DFF, 0x64C46CFF,
                0x83E68AFF, 0x489595FF, 0x69B9B8FF, 0x8CE1DFFF, 0x1D42A1FF, 0x3662C9FF, 0x4D7DEAFF, 0x654099FF,
                0x835CBCFF, 0xA37AE1FF, 0x7A3896FF, 0x9C56BCFF, 0xC479E6FF, 0x9A4799FF, 0xC167BFFF, 0xE182DFFF,
                0xC6221BFF, 0xDB362AFF, 0xF3493BFF, 0xB7503CFF, 0xC85D48FF, 0xDB6C56FF, 0xAF5B45FF, 0xC16A53FF,
                0xD77C63FF, 0xAC6A52FF, 0xC07B62FF, 0xD0886FFF, 0xB26B48FF, 0xC37A56FF, 0xD78B65FF, 0xB46C43FF,
                0xC87C52FF, 0xDD8E63FF, 0xC76D2AFF, 0xDD7F3CFF, 0xF0904BFF, 0xC5762FFF, 0xD8873FFF, 0xEF9B51FF,
                0xCB8223FF, 0xE19639FF, 0xF4A748FF, 0xC58C33FF, 0xD99E44FF, 0xEEB156FF, 0xC99D2AFF, 0xDCAF3DFF,
                0xF2C350FF, 0xCFB63EFF, 0xE4CA51FF, 0xF6DC61FF, 0xBEC22BFF, 0xD2D741FF, 0xE8ED56FF, 0xA9C13CFF,
                0xBCD650FF, 0xD3EE66FF, 0x9EC725FF, 0xB1DC3CFF, 0xC3F050FF, 0x89BF34FF, 0x9CD448FF, 0xB1EB5DFF,
                0x6AC829FF, 0x7EDE41FF, 0x8EF152FF, 0x54C339FF, 0x65D64BFF, 0x78EB5DFF, 0x29C742FF, 0x3FDA53FF,
                0x55F166FF, 0x49C88EFF, 0x5CDCA0FF, 0x6DEEB0FF, 0x2FC8ACFF, 0x44DBBDFF, 0x5AF0D2FF, 0x48C7C6FF,
                0x5DDDDCFF, 0x6EF0EEFF, 0x27A7CAFF, 0x3DBADEFF, 0x51CEF4FF, 0x2A81BDFF, 0x3B92D1FF, 0x50A8EAFF,
                0x002FCDFF, 0x0D41E1FF, 0x1950F4FF, 0x3834C0FF, 0x4143D2FF, 0x4E53E6FF, 0x5127C6FF, 0x603BDDFF,
                0x704FF6FF, 0x7536C2FF, 0x8446D6FF, 0x9455E9FF, 0x7E2ACDFF, 0x8E3CE0FF, 0xA04EF7FF, 0x8F39C5FF,
                0xA149DAFF, 0xB158ECFF, 0x9E2BCCFF, 0xB03DE0FF, 0xC44FF5FF, 0xA238C2FF, 0xB448D6FF, 0xCA5BEDFF,
                0xBE2FCEFF, 0xD443E4FF, 0xE653F6FF, 0xC139C2FF, 0xD449D4FF, 0xEA5CEAFF, 0xC72183FF, 0xDC3494FF,
                0xF347A7FF, 0xC43659FF, 0xD74567FF, 0xE95374FF, 0xFE000FFF, 0xE65239FF, 0xDA6746FF, 0xCF7859FF,
                0xE17C4BFF, 0xE58349FF, 0xF87C13FF, 0xF48A1EFF, 0xFC9500FF, 0xF6A727FF, 0xFFC400FF, 0xFFE12EFF,
                0xF3F900FF, 0xE0F826FF, 0xC4FD00FF, 0xA3F827FF, 0x75FC00FF, 0x49FA2AFF, 0x00FF3BFF, 0x31F7ABFF,
                0x00FFDAFF, 0x39F9F8FF, 0x00CCFEFF, 0x179BEFFF, 0x0000FFFF, 0x3F25F1FF, 0x6400FEFF, 0x8824F1FF,
                0x9D00FFFF, 0xAA28FAFF, 0xBF00FFFF, 0xCB25F8FF, 0xEC0FFFFF, 0xF42FFAFF, 0xFF00A9FF, 0xF52664FF,
        };
        int[] nasty = {
                0x00000000, 0x000000FF, 0xFF00FFFF
        };
        int[] nastier = {
                0x00000000, 0x504000FF, 0xFF00FFFF
        };
        int[] fuser = {
                0x00000000,
                0xC36A49FF,0xFFCCAAFF,0x6A3111FF,0xFFF321FF,0x4145C3FF,0xA2A6A2FF,0x7ACF5EFF,0x399615FF,
                0x29ADFFFF,0xEBF7FFFF,0x55415FFF,0x83769CFF,0xDF1539FF,0xFF77A8FF,0x000000FF
        };

        int[] fusera = {
                0x00000000,
                0xDF6E45FF,0xFFCCAAFF,0x6A3111FF,0xFFF35AFF,0x2D45C3FF,0xA2A6A2FF,0x66CF96FF,0x399615FF,
                0x29ADFFFF,0xEBF7FFFF,0x55415FFF,0x9282AAFF,0xDF1539FF,0xF396B7FF,0x000000FF
        };
        int[] fusede = {
                0x00000000,
                0xC07C63FF,0xF3C3A2FF,0x7E5141FF,0xFFE7AAFF,0x4B59A5FF,0xA2A5A2FF,0xA2C786FF,0x4D763DFF,
                0x53A3D4FF,0xEFF6FBFF,0x45313DFF,0x9E96B7FF,0xB63D53FF,0xE0A8BCFF,0x000000FF
        };
        int[] ube = {
                0x00000000, 0x000000FF, 0x121212FF, 0x242424FF, 0x363636FF, 0x484848FF, 0x5B5B5BFF, 0x6D6D6DFF,
                0x7F7F7FFF, 0x919191FF, 0xA3A3A3FF, 0xB6B6B6FF, 0xC8C8C8FF, 0xDADADAFF, 0xECECECFF, 0xFFFFFFFF,
                0x7F3333FF, 0xA64343FF, 0xC06666FF, 0xD49696FF, 0xEACCCCFF, 0x8D593FFF, 0xB37557FF, 0xC3947CFF,
                0xD5B3A2FF, 0xE9D8D0FF, 0x876039FF, 0xAB7A49FF, 0xC0966DFF, 0xD3B79AFF, 0xEADBCEFF, 0x856D4BFF,
                0xA98F68FF, 0xBFAB8EFF, 0xD2C4AFFF, 0xE7E0D5FF, 0x8F8F3AFF, 0xB6B64DFF, 0xC5C572FF, 0xD6D69CFF,
                0xEBEBCEFF, 0x697F39FF, 0x88A34AFF, 0xA4BC6CFF, 0xC1D19AFF, 0xE1E9CEFF, 0x3B923BFF, 0x54B954FF,
                0x7CC97CFF, 0xA1D8A1FF, 0xCFEBCFFF, 0x3D8787FF, 0x4DACACFF, 0x71BFBFFF, 0x9DD2D2FF, 0xCFE9E9FF,
                0x3C3C95FF, 0x5959BBFF, 0x8484CCFF, 0xABABDCFF, 0xD2D2ECFF, 0x623F8CFF, 0x8055B2FF, 0x9B79C2FF,
                0xB8A0D4FF, 0xDBD0E9FF, 0x733786FF, 0x9246ABFF, 0xAC6AC2FF, 0xC698D5FF, 0xE3CDEAFF, 0x8F408FFF,
                0xB55BB5FF, 0xC783C7FF, 0xD7A7D7FF, 0xEAD1EAFF, 0xA42020FF, 0xDB4B4BFF, 0xEEAEAEFF, 0xB55A2DFF,
                0xD98C66FF, 0xECC7B5FF, 0xAC6926FF, 0xD99654FF, 0xEDCFB0FF, 0xA67D40FF, 0xCDAD7FFF, 0xE6D7C0FF,
                0xB9B924FF, 0xDEDE59FF, 0xEFEFB0FF, 0x7CA128FF, 0xADD454FF, 0xDAEBB1FF, 0x25BE25FF, 0x65E065FF,
                0xB3F0B3FF, 0x2AACACFF, 0x5BD6D6FF, 0xB2ECECFF, 0x2626C2FF, 0x6F6FE2FF, 0xB9B9F1FF, 0x6A2CB4FF,
                0x9964D8FF, 0xCEB4ECFF, 0x8A22ACFF, 0xB94FDCFF, 0xDFAEEFFF, 0xB82DB8FF, 0xDB6FDBFF, 0xEDB8EDFF,
                0xB50F0FFF, 0xEE3838FF, 0xF7A5A5FF, 0xC72E1BFF, 0xE86757FF, 0xF4B6AEFF, 0xC23710FF, 0xEE663FFF,
                0xF7B8A6FF, 0xCB561BFF, 0xE99063FF, 0xF4C8B2FF, 0xCC5911FF, 0xEF8948FF, 0xF7C7A8FF, 0xB15C18FF,
                0xE58B44FF, 0xF3CAAAFF, 0xCE7116FF, 0xEDA258FF, 0xF6D1ADFF, 0xB37024FF, 0xDC9C54FF, 0xEFD1B0FF,
                0xC37E26FF, 0xE2AF6EFF, 0xF1D8B9FF, 0xAE7B31FF, 0xD4A868FF, 0xEAD5B7FF, 0x9C7F33FF, 0xCBAE60FF,
                0xE7DAB6FF, 0xB6A430FF, 0xD9CB71FF, 0xECE5B9FF, 0xCACA11FF, 0xEFEF45FF, 0xF7F7A8FF, 0x9FAE17FF,
                0xD4E542FF, 0xEBF3A9FF, 0xAAD111FF, 0xD0F051FF, 0xE8F7ABFF, 0x8ABB19FF, 0xB6E648FF, 0xDDF3ABFF,
                0x6DD612FF, 0xA2F15DFF, 0xD1F8B0FF, 0x42C41AFF, 0x74E751FF, 0xBDF3ADFF, 0x0FBB0FFF, 0x3BEE3BFF,
                0xA6F7A6FF, 0x1BC955FF, 0x5EE98CFF, 0xB0F4C6FF, 0x10C88BFF, 0x43EFB5FF, 0xA7F7DDFF, 0x1CCDCDFF,
                0x68EAEAFF, 0xB7F5F5FF, 0x1190D0FF, 0x4EBAF0FF, 0xAADDF7FF, 0x194EB8FF, 0x477CE5FF, 0xAAC2F3FF,
                0x1111D5FF, 0x5B5BF1FF, 0xAEAEF8FF, 0x341AC2FF, 0x664FE7FF, 0xB7ACF3FF, 0x430FB8FF, 0x713AEEFF,
                0xBEA5F7FF, 0x6A1BC8FF, 0x9C5BE8FF, 0xCEAFF4FF, 0x7510C5FF, 0xA141EFFF, 0xD3A7F7FF, 0x8F1BCDFF,
                0xBC66EAFF, 0xDEB4F4FF, 0x9F11CEFF, 0xC74BEFFF, 0xE4A9F7FF, 0x9B18B5FF, 0xCB45E5FF, 0xE7AAF3FF,
                0xC411D4FF, 0xE458F0FF, 0xF1ADF8FF, 0xC01AC0FF, 0xE64DE6FF, 0xF3ACF3FF, 0xB60F7EFF, 0xEE39B1FF,
                0xF7A5DCFF, 0xC71B54FF, 0xE85888FF, 0xF4AEC5FF, 0xFF0101FF, 0xF2270DFF, 0xFF3901FF, 0xF2590DFF,
                0xFF6301FF, 0xF2730DFF, 0xF97F06FF, 0xE3851CFF, 0xE58C1AFF, 0xD38F2CFF, 0xCCA233FF, 0xD7BF28FF,
                0xFFFF01FF, 0xDBF20DFF, 0xCBFF01FF, 0xACF20DFF, 0x76FF01FF, 0x42F20DFF, 0x01FF01FF, 0x0DF259FF,
                0x01FFAAFF, 0x0DF2F2FF, 0x01AAFFFF, 0x0D59F2FF, 0x0101FFFF, 0x300DF2FF, 0x4E01FFFF, 0x760DF2FF,
                0x8E01FFFF, 0xA30DF2FF, 0xC001FFFF, 0xCC0DF2FF, 0xEA01FFFF, 0xF20DF2FF, 0xFF01AAFF, 0xF20D59FF,
        };
        int[] corn = {
                0x00000000, 0x000000FF, 0xFFFFFFFF, 0x888888FF, 0x444444FF, 0xCCCCCCFF, 0x222222FF, 0xAAAAAAFF,
                0x666666FF, 0xEEEEEEFF, 0x111111FF, 0x999999FF, 0x555555FF, 0xDDDDDDFF, 0x333333FF, 0xBBBBBBFF,
                0x777777FF, 0x4416A6FF, 0x795AF6FF, 0x5833C5FF, 0xDF6F08FF, 0xC651A3FF, 0x992E7BFF, 0xE268BCFF,
                0x55842DFF, 0x8FC666FF, 0x335D00FF, 0x6A9C42FF, 0xA7E17DFF, 0x577DBBFF, 0x001D49FF, 0x91BDFFFF,
                0x365890FF, 0x6D95D6FF, 0x173465FF, 0xFEAFA1FF, 0x8B4D43FF, 0xD0877BFF, 0x612B24FF, 0xA56258FF,
                0x9438C1FF, 0x6A0092FF, 0xAE4FDEFF, 0x70D7BFFF, 0x006C5BFF, 0x48AC96FF, 0x87F1D8FF, 0x208471FF,
                0xF82E8AFF, 0x001686FF, 0x235AD7FF, 0x0032A4FF, 0x3773F5FF, 0xC59D19FF, 0xDFB536FF, 0xC697CCFF,
                0x5E3A63FF, 0x9D72A2FF, 0x36183AFF, 0xE0B0E7FF, 0x764F7BFF, 0x00C04BFF, 0x16DA61FF, 0x932FFFFF,
                0xEF5445FF, 0xBE2E24FF, 0x00B9E6FF, 0x13D4FFFF, 0xF346D6FF, 0xC115AAFF, 0x0022EEFF, 0xF3F7C8FF,
                0x878A63FF, 0x2B2C0FFF, 0xC7CB9FFF, 0x636542FF, 0x9FA279FF, 0x404122FF, 0x5541A4FF, 0x8E7CEEFF,
                0x341A74FF, 0x6956BFFF, 0x6D0D39FF, 0xB74A72FF, 0x89264EFF, 0xD46089FF, 0xAEE140FF, 0x86B500FF,
                0xC6FC59FF, 0xC112F3FF, 0x17394AFF, 0xACDCF6FF, 0x4C7489FF, 0x85B2CAFF, 0x2A4E61FF, 0x618BA1FF,
                0x3300B7FF, 0x422BD8FF, 0xF1A165FF, 0xC47A42FF, 0x99561FFF, 0xAE59BAFF, 0xF696FFFF, 0x83358EFF,
                0xC86FD4FF, 0x5A0D64FF, 0x66C884FF, 0x005F2BFF, 0x419E60FF, 0x7EE29CFF, 0x19773FFF, 0xE72057FF,
                0x347CD2FF, 0x0A56A4FF, 0x4994EEFF, 0x77525AFF, 0xB88C95FF, 0x4F3037FF, 0xFFCDD7FF, 0x8F676FFF,
                0x270F15FF, 0xD3A4AEFF, 0x4FF737FF, 0x1ACA00FF, 0x7E37D5FF, 0x5900A4FF, 0x9550F3FF, 0x46F5F5FF,
                0x00C9CAFF, 0xE040A1FF, 0xB01279FF, 0xE7E786FF, 0x7D7C27FF, 0xBCBC60FF, 0xFFFF9CFF, 0x95943DFF,
                0xA79BE5FF, 0x473B74FF, 0x8074B8FF, 0x251948FF, 0xBFB3FFFF, 0x5C518EFF, 0xD66263FF, 0xA73E40FF,
                0xF27877FF, 0x791922FF, 0xDD4AECFF, 0xAF1EBEFF, 0xFA63FFFF, 0x658F7DFF, 0x0C2E22FF, 0xA2D1BCFF,
                0x426859FF, 0x7BA694FF, 0x224437FF, 0xBBECD6FF, 0x707CFFFF, 0x231386FF, 0x5056D6FF, 0x332FA5FF,
                0xE49200FF, 0xFFAA2EFF, 0x9E5187FF, 0xE58CC8FF, 0x742F61FF, 0xB9679FFF, 0x490B3AFF, 0x277800FF,
                0x61B946FF, 0x9FFF83FF, 0x3C8F1FFF, 0x78D45DFF, 0xAE1DFFFF, 0x25739EFF, 0x61B3E3FF, 0x004E74FF,
                0x3C8BB8FF, 0x2C1CECFF, 0xD3AA85FF, 0x68482BFF, 0xA88260FF, 0x41270BFF, 0xEDC29BFF, 0x805E3FFF,
                0x6F39A3FF, 0xAE74EDFF, 0x491074FF, 0x874FBFFF, 0x13CCA1FF, 0x3BE6B9FF, 0xD0376FFF, 0x0093FFFF,
                0xDDD737FF, 0xF8F353FF, 0x9A91AEFF, 0x3B3449FF, 0xDCD3F3FF, 0x746C87FF, 0x171121FF, 0xB2AAC8FF,
                0x504961FF, 0x6E35E6FF, 0x834EFFFF, 0xC75426FF, 0xE46B3CFF, 0xCD48B8FF, 0x9E208DFF, 0xEA5FD3FF,
                0xC0EEA8FF, 0x5C8148FF, 0x97C181FF, 0x3B5B28FF, 0x72995DFF, 0x1B3700FF, 0x2F3B87FF, 0x6277CFFF,
                0x131456FF, 0x4151A2FF, 0x788EECFF, 0x4B1223FF, 0x914958FF, 0xD88393FF, 0x652736FF, 0xAC5E6EFF,
                0x79D500FF, 0x8FF02BFF, 0xC752FFFF, 0x9B27CFFF, 0x73D3D6FF, 0x006A6EFF, 0x4EA9ADFF, 0x8CEEF1FF,
                0x278285FF, 0xFF1999FF, 0x3052EBFF, 0x1827B8FF, 0xC69A45FF, 0x9C7420FF, 0xE0B35CFF, 0x87579DFF,
                0xC993E3FF, 0x5F3473FF, 0x9F6CB6FF, 0x391149FF, 0xE4ABFEFF, 0x05BD68FF, 0x36D87EFF, 0xA30B2BFF,
                0xF2535FFF, 0xC02B3EFF, 0x19B5FDFF, 0xF935E5FF, 0x1A00FDFF, 0x534C42FF, 0xFAF1E1FF, 0x8E867AFF,
        };
        int[] corn2 = {
                0x00000000, 0x000000FF, 0xFFFFFFFF, 0x888888FF, 0x444444FF, 0xCCCCCCFF, 0x222222FF, 0xAAAAAAFF,
                0x666666FF, 0xEEEEEEFF, 0x111111FF, 0x999999FF, 0x555555FF, 0xDDDDDDFF, 0x333333FF, 0xBBBBBBFF,
                0x777777FF, 0x577DBBFF, 0x001D49FF, 0x91BDFFFF, 0x365890FF, 0x6D95D6FF, 0x173465FF, 0xFEAFA1FF,
                0x8B4D43FF, 0xD0877BFF, 0x612B24FF, 0xA56258FF, 0x70D7BFFF, 0x006C5BFF, 0x48AC96FF, 0x87F1D8FF,
                0x208471FF, 0xC59D19FF, 0xDFB536FF, 0xC697CCFF, 0x5E3A63FF, 0x9D72A2FF, 0x36183AFF, 0xE0B0E7FF,
                0x764F7BFF, 0x00C04BFF, 0x16DA61FF, 0xF3F7C8FF, 0x878A63FF, 0x2B2C0FFF, 0xC7CB9FFF, 0x636542FF,
                0x9FA279FF, 0x404122FF, 0x17394AFF, 0xACDCF6FF, 0x4C7489FF, 0x85B2CAFF, 0x2A4E61FF, 0x618BA1FF,
                0x3300B7FF, 0x422BD8FF, 0x66C884FF, 0x005F2BFF, 0x419E60FF, 0x7EE29CFF, 0x19773FFF, 0x77525AFF,
                0xB88C95FF, 0x4F3037FF, 0xFFCDD7FF, 0x8F676FFF, 0x270F15FF, 0xD3A4AEFF, 0xA79BE5FF, 0x473B74FF,
                0x8074B8FF, 0x251948FF, 0xBFB3FFFF, 0x5C518EFF, 0x658F7DFF, 0x0C2E22FF, 0xA2D1BCFF, 0x426859FF,
                0x7BA694FF, 0x224437FF, 0xBBECD6FF, 0x9E5187FF, 0xE58CC8FF, 0x742F61FF, 0xB9679FFF, 0x490B3AFF,
                0x25739EFF, 0x61B3E3FF, 0x004E74FF, 0x3C8BB8FF, 0xD3AA85FF, 0x68482BFF, 0xA88260FF, 0x41270BFF,
                0xEDC29BFF, 0x805E3FFF, 0x13CCA1FF, 0x3BE6B9FF, 0x9A91AEFF, 0x3B3449FF, 0xDCD3F3FF, 0x746C87FF,
                0x171121FF, 0xB2AAC8FF, 0x504961FF, 0xC0EEA8FF, 0x5C8148FF, 0x97C181FF, 0x3B5B28FF, 0x72995DFF,
                0x1B3700FF, 0x534C42FF, 0xFAF1E1FF, 0x8E867AFF, 0x2E2920FF, 0xCFC6B8FF, 0x686155FF, 0x070400FF,
                0xA69E91FF, 0x5D37B1FF, 0x9873FDFF, 0x3C0781FF, 0x734ECEFF, 0xED66A8FF, 0xBD4180FF, 0x8F1B5BFF,
                0x3D76E6FF, 0x000765FF, 0x1D50B7FF, 0x518EFFFF, 0x002986FF, 0xE7B1D6FF, 0x7A4F6DFF, 0xBB89ACFF,
                0x532E48FF, 0x926585FF, 0x2A0D23FF, 0xABA067FF, 0x483F0EFF, 0xF0E4A4FF, 0x837944FF, 0xC4B87DFF,
                0x5F5524FF, 0xB194F6FF, 0x503582FF, 0x8A6FC9FF, 0x2C1053FF, 0x664B9DFF, 0xD5F7FFFF, 0x6D8A92FF,
                0x162B31FF, 0xAACBD3FF, 0x4B656CFF, 0x84A2AAFF, 0x2A4147FF, 0x89E389FF, 0x28762CFF, 0x63B763FF,
                0x005001FF, 0xA1FEA0FF, 0x3F8F41FF, 0x2A0F0DFF, 0xD9A49CFF, 0x6D4540FF, 0xAE7E77FF, 0x44231FFF,
                0xF4BDB5FF, 0x855A54FF, 0x66517DFF, 0xA48CBFFF, 0x412F54FF, 0xE7CDFFFF, 0x7C6694FF, 0x1C0D2AFF,
                0xBDA4D9FF, 0xFF67F5FF, 0xD03FC7FF, 0xA20E9BFF, 0x2D432AFF, 0xC8E8C2FF, 0x647E5FFF, 0x0C1D09FF,
                0x9FBE9AFF, 0x41583DFF, 0xE0FFDAFF, 0x7A9675FF, 0x3A3494FF, 0x6E70DFFF, 0x1E0763FF, 0x4D4BB1FF,
                0x8F50ACFF, 0xD38BF3FF, 0x682D81FF, 0xA966C7FF, 0xBCABB2FF, 0x564A4FFF, 0xFFEEF6FF, 0x93838AFF,
                0x32282DFF, 0xD4C3CBFF, 0x6D5F65FF, 0x0B0508FF, 0x848FD6FF, 0x2C3066FF, 0x6169ABFF, 0x0E0835FF,
                0x9CA7F2FF, 0x404681FF, 0xB65B59FF, 0xFF9793FF, 0x8A3838FF, 0xD1716EFF, 0x5D151AFF, 0xA1EEDAFF,
                0x3E8171FF, 0x79C2AFFF, 0x1A5B4EFF, 0x549988FF, 0x3F133CFF, 0xF0AAE7FF, 0x81497BFF, 0xC483BCFF,
                0x582754FF, 0x9A5F94FF, 0x53D669FF, 0x26AA45FF, 0x6BF080FF, 0xAF9D79FF, 0x4B3E23FF, 0xF3E0B8FF,
                0x877756FF, 0x251B00FF, 0xC8B691FF, 0x625336FF, 0x404B62FF, 0x7885A1FF, 0x1F273BFF, 0xB6C5E5FF,
                0x546079FF, 0x8F9DBBFF, 0xDA65D5FF, 0xAC40A9FF, 0xF57CF0FF, 0x80197FFF, 0x97DF9DFF, 0x387540FF,
                0x71B578FF, 0x144E1FFF, 0xB0FBB6FF, 0x4D8D55FF, 0x9C6371FF, 0x2D0916FF, 0xE19FAEFF, 0x72404DFF,
        };
        int[] corn3 = {
                0x00000000, 0x000000FF, 0xFFFFFFFF, 0x888888FF, 0x444444FF, 0xCCCCCCFF, 0x222222FF, 0xAAAAAAFF,
                0x666666FF, 0xEEEEEEFF, 0x111111FF, 0x999999FF, 0x555555FF, 0xDDDDDDFF, 0x333333FF, 0xBBBBBBFF,
                0x777777FF, 0x4416A6FF, 0x795AF6FF, 0x5833C5FF, 0xDF6F08FF, 0xC651A3FF, 0x992E7BFF, 0xE268BCFF,
                0xB44493FF, 0x55842DFF, 0x8FC666FF, 0x335D00FF, 0x6A9C42FF, 0xA7E17DFF, 0x47751FFF, 0x577DBBFF,
                0x001D49FF, 0x91BDFFFF, 0x365890FF, 0x6D95D6FF, 0x173465FF, 0xFEAFA1FF, 0x8B4D43FF, 0xD0877BFF,
                0x612B24FF, 0xA56258FF, 0xEC9F92FF, 0x9438C1FF, 0x6A0092FF, 0xAE4FDEFF, 0x70D7BFFF, 0x006C5BFF,
                0x48AC96FF, 0x87F1D8FF, 0x208471FF, 0x60C6AFFF, 0xF82E8AFF, 0x001686FF, 0x235AD7FF, 0x0032A4FF,
                0x3773F5FF, 0xC59D19FF, 0xDFB536FF, 0xC697CCFF, 0x5E3A63FF, 0x9D72A2FF, 0x36183AFF, 0xE0B0E7FF,
                0x764F7BFF, 0x00C04BFF, 0x16DA61FF, 0x932FFFFF, 0x8416F7FF, 0xEF5445FF, 0xBE2E24FF, 0xDC4638FF,
                0x00B9E6FF, 0x13D4FFFF, 0xF346D6FF, 0xC115AAFF, 0x0022EEFF, 0xF3F7C8FF, 0x878A63FF, 0x2B2C0FFF,
                0xC7CB9FFF, 0x636542FF, 0x9FA279FF, 0x5541A4FF, 0x8E7CEEFF, 0x341A74FF, 0x6956BFFF, 0x483292FF,
                0x6D0D39FF, 0xB74A72FF, 0x89264EFF, 0xD46089FF, 0xAEE140FF, 0x86B500FF, 0xC6FC59FF, 0x9ECF2DFF,
                0xC112F3FF, 0x17394AFF, 0xACDCF6FF, 0x4C7489FF, 0x85B2CAFF, 0x2A4E61FF, 0x618BA1FF, 0x3300B7FF,
                0x422BD8FF, 0xF1A165FF, 0xC47A42FF, 0x99561FFF, 0xE09257FF, 0xAE59BAFF, 0xF696FFFF, 0x83358EFF,
                0xC86FD4FF, 0x5A0D64FF, 0x9D4BA9FF, 0x66C884FF, 0x005F2BFF, 0x419E60FF, 0x7EE29CFF, 0x19773FFF,
                0x58B876FF, 0xE72057FF, 0x347CD2FF, 0x0A56A4FF, 0x4994EEFF, 0x266DC0FF, 0x77525AFF, 0xB88C95FF,
                0x4F3037FF, 0xFFCDD7FF, 0x8F676FFF, 0x270F15FF, 0x4FF737FF, 0x1ACA00FF, 0x7E37D5FF, 0x5900A4FF,
                0x9550F3FF, 0x7028C3FF, 0x46F5F5FF, 0x00C9CAFF, 0xE040A1FF, 0xB01279FF, 0xFE58BAFF, 0xE7E786FF,
                0x7D7C27FF, 0xBCBC60FF, 0xFFFF9CFF, 0x95943DFF, 0xD6D678FF, 0xA79BE5FF, 0x473B74FF, 0x8074B8FF,
                0x251948FF, 0xBFB3FFFF, 0x5C518EFF, 0xD66263FF, 0xA73E40FF, 0xF27877FF, 0x791922FF, 0xC45455FF,
                0xDD4AECFF, 0xAF1EBEFF, 0xFA63FFFF, 0xCB3BDBFF, 0x658F7DFF, 0x0C2E22FF, 0xA2D1BCFF, 0x426859FF,
                0x7BA694FF, 0x224437FF, 0x707CFFFF, 0x231386FF, 0x5056D6FF, 0x332FA5FF, 0x636EF4FF, 0xE49200FF,
                0xFFAA2EFF, 0x9E5187FF, 0xE58CC8FF, 0x742F61FF, 0xB9679FFF, 0x490B3AFF, 0xFFA4E3FF, 0x277800FF,
                0x61B946FF, 0x9FFF83FF, 0x3C8F1FFF, 0x78D45DFF, 0xAE1DFFFF, 0x25739EFF, 0x61B3E3FF, 0x004E74FF,
                0x3C8BB8FF, 0x78CDFFFF, 0x15658EFF, 0x2C1CECFF, 0xD3AA85FF, 0x68482BFF, 0xA88260FF, 0x41270BFF,
                0xEDC29BFF, 0x805E3FFF, 0x6F39A3FF, 0xAE74EDFF, 0x491074FF, 0x874FBFFF, 0xC88BFFFF, 0x13CCA1FF,
                0x3BE6B9FF, 0x00BB91FF, 0xD0376FFF, 0xEE4F86FF, 0x0093FFFF, 0xDDD737FF, 0xF8F353FF, 0x9A91AEFF,
                0x3B3449FF, 0xDCD3F3FF, 0x746C87FF, 0x171121FF, 0xB2AAC8FF, 0x6E35E6FF, 0x834EFFFF, 0x6022D2FF,
                0xC75426FF, 0xE46B3CFF, 0xB54617FF, 0xCD48B8FF, 0x9E208DFF, 0xEA5FD3FF, 0xC0EEA8FF, 0x5C8148FF,
                0x97C181FF, 0x3B5B28FF, 0x72995DFF, 0x1B3700FF, 0x2F3B87FF, 0x6277CFFF, 0x131456FF, 0x4151A2FF,
                0x788EECFF, 0x232D74FF, 0x4B1223FF, 0x914958FF, 0xD88393FF, 0x652736FF, 0xAC5E6EFF, 0xF49AABFF,
                0x79D500FF, 0x8FF02BFF, 0xC752FFFF, 0x9B27CFFF, 0xB542ECFF, 0x73D3D6FF, 0x006A6EFF, 0x4EA9ADFF,
        };

        int[] corn4 = {
                0x00000000, 0x000000FF, 0xFFFFFFFF, 0x858585FF, 0x434343FF, 0xCECECEFF, 0x242424FF, 0xA8A8A8FF,
                0x636363FF, 0xF5F5F4FF, 0x141414FF, 0x969696FF, 0x535353FF, 0xE2E2E2FF, 0x343434FF, 0xBBBBBBFF,
                0x747474FF, 0x4616A3FF, 0x7C5AF2FF, 0x5A33C2FF, 0xE16E00FF, 0xC850A0FF, 0x9A2C78FF, 0xE467B9FF,
                0xB74391FF, 0x598329FF, 0x94C563FF, 0x385C00FF, 0x6E9B3EFF, 0xACE07AFF, 0x4C741AFF, 0x5B7CB8FF,
                0x081D47FF, 0x96BCFFFF, 0x3A588EFF, 0x7194D3FF, 0x1B3463FF, 0xFFAE9EFF, 0x8D4C41FF, 0xD38678FF,
                0x632A22FF, 0xA86155FF, 0xEF9D8FFF, 0x9637BEFF, 0x6C008FFF, 0xB04EDBFF, 0x76D6BCFF, 0x076C58FF,
                0x4FAB93FF, 0x8DF0D5FF, 0x29836EFF, 0x66C5ACFF, 0xFA2B87FF, 0x001783FF, 0x295AD4FF, 0x0932A2FF,
                0x3C72F2FF, 0xC89B0EFF, 0xE2B331FF, 0xC996C9FF, 0x603960FF, 0x9F71A0FF, 0x371739FF, 0xE4AFE4FF,
                0x784E78FF, 0x00BF48FF, 0x2AD95DFF, 0x952FFFFF, 0x8617F4FF, 0xF15342FF, 0xC02B20FF, 0xDE4435FF,
                0x00B9E3FF, 0x29D3FFFF, 0xF545D3FF, 0xC312A7FF, 0x0024EBFF, 0xF7F6C5FF, 0x8B8960FF, 0x2D2B0CFF,
                0xCBC99CFF, 0x66643FFF, 0xA3A176FF, 0x5740A2FF, 0x917BEBFF, 0x351A72FF, 0x6C56BCFF, 0x4A328FFF,
                0x6F0937FF, 0xB9496FFF, 0x8B244BFF, 0xD65F86FF, 0xB2E03BFF, 0x8BB400FF, 0xCBFA55FF, 0xA2CE27FF,
                0xC211F0FF, 0x1B3948FF, 0xB1DBF3FF, 0x507386FF, 0x8AB2C7FF, 0x2E4E5FFF, 0x658A9EFF, 0x3400B4FF,
                0x442BD5FF, 0xF4A061FF, 0xC7793EFF, 0x9C551AFF, 0xE39154FF, 0xB158B7FF, 0xF895FFFF, 0x85348CFF,
                0xCA6ED1FF, 0x5B0C62FF, 0x9F4AA6FF, 0x6CC781FF, 0x005E28FF, 0x489D5DFF, 0x84E198FF, 0x23763CFF,
                0x5EB773FF, 0xE91C55FF, 0x3A7CCFFF, 0x1655A1FF, 0x4F93EAFF, 0x2D6DBDFF, 0x7A5158FF, 0xBB8B93FF,
                0x512F35FF, 0xFFCCD4FF, 0x91666DFF, 0x280E14FF, 0x58F631FF, 0x2BC900FF, 0x8037D2FF, 0x5B00A2FF,
                0x984FF0FF, 0x7227C0FF, 0x51F4F2FF, 0x18C8C7FF, 0xE23E9EFF, 0xB20E77FF, 0xFF57B7FF, 0xEBE583FF,
                0x817B22FF, 0xC0BB5DFF, 0xFFFE99FF, 0x989339FF, 0xDAD574FF, 0xAA9AE2FF, 0x493B71FF, 0x8374B5FF,
                0x271846FF, 0xC2B2FCFF, 0x5E508BFF, 0xD96160FF, 0xA93C3EFF, 0xF57775FF, 0x7B171FFF, 0xC65252FF,
                0xDF49E9FF, 0xB11DBCFF, 0xFC62FFFF, 0xCD3AD8FF, 0x6A8E7BFF, 0x112D20FF, 0xA6D0B9FF, 0x466856FF,
                0x7FA591FF, 0x264435FF, 0x737CFFFF, 0x251484FF, 0x5356D3FF, 0x3530A3FF, 0x676DF0FF, 0xE79000FF,
                0xFFA928FF, 0xA15084FF, 0xE88BC5FF, 0x762E5EFF, 0xBB669DFF, 0x4A0939FF, 0xFFA3E0FF, 0x2E7700FF,
                0x67B842FF, 0xA5FF7FFF, 0x428E1AFF, 0x7ED359FF, 0xAF1DFFFF, 0x2C739BFF, 0x66B2E0FF, 0x004E72FF,
                0x428AB5FF, 0x7ECCFCFF, 0x1E658BFF, 0x2F1EE9FF, 0xD6A982FF, 0x6A4728FF, 0xAB815DFF, 0x432606FF,
                0xF0C198FF, 0x835D3CFF, 0x7138A1FF, 0xB173EAFF, 0x4A1072FF, 0x894EBCFF, 0xCB8BFFFF, 0x27CB9EFF,
                0x46E5B6FF, 0x00BA8EFF, 0xD2356CFF, 0xF04D83FF, 0x0092FFFF, 0xE1D632FF, 0xFCF14FFF, 0x9D90ABFF,
                0x3D3447FF, 0xE0D2F0FF, 0x776C84FF, 0x18111FFF, 0xB6A9C5FF, 0x7035E3FF, 0x854EFFFF, 0x6223CFFF,
                0xC95221FF, 0xE66938FF, 0xB74510FF, 0xCF47B5FF, 0xA01E8BFF, 0xEC5ED0FF, 0xC4EDA5FF, 0x608045FF,
                0x9BC07DFF, 0x3E5B25FF, 0x76985AFF, 0x1E3600FF, 0x323B84FF, 0x6676CDFF, 0x151454FF, 0x44509FFF,
                0x7B8EE9FF, 0x262D72FF, 0x4D1021FF, 0x934856FF, 0xDA8190FF, 0x672534FF, 0xAE5D6BFF, 0xF799A8FF,
                0x7ED400FF, 0x95EF24FF, 0xC951FCFF, 0x9D26CCFF, 0xB741E9FF, 0x79D2D3FF, 0x146A6BFF, 0x54A9AAFF,
        };

        int[] corn5 = {
                0x00000000, 0x000000FF, 0xFFFFFFFF, 0x858585FF, 0x434343FF, 0xCECECEFF, 0x242424FF, 0xA8A8A8FF,
                0x636363FF, 0xF5F5F4FF, 0x141414FF, 0x969696FF, 0x535353FF, 0xE2E2E2FF, 0x343434FF, 0xBBBBBBFF,
                0x747474FF, 0x8614F5FF, 0xF25241FF, 0xC12A1FFF, 0xDF4334FF, 0x00B9E3FF, 0x26D3FFFF, 0xF544D4FF,
                0xC40FA7FF, 0xF7F6C4FF, 0x8B8960FF, 0x2D2B0BFF, 0xCBCA9BFF, 0x66643FFF, 0xA3A176FF, 0x5840A2FF,
                0x917BECFF, 0x351A73FF, 0x6C55BDFF, 0x4A3290FF, 0x6F0737FF, 0xBA486FFF, 0x8B244BFF, 0xD75E86FF,
                0xB2E039FF, 0x8BB400FF, 0xCBFA53FF, 0xA2CE25FF, 0xC30CF1FF, 0x1B3948FF, 0xB0DBF3FF, 0x507386FF,
                0x89B2C8FF, 0x2E4E5FFF, 0x658A9FFF, 0x3500B5FF, 0x442BD6FF, 0xF49F61FF, 0x823F00FF, 0xC7793DFF,
                0x9C5519FF, 0xE39153FF, 0xB158B8FF, 0xF995FFFF, 0x86348CFF, 0xCB6DD1FF, 0x5B0B62FF, 0xA049A6FF,
                0x6CC781FF, 0x005E28FF, 0x479E5DFF, 0x84E198FF, 0x22763CFF, 0x5EB773FF, 0xEA1A54FF, 0x3A7CD0FF,
                0x1555A2FF, 0x4E93EBFF, 0x2C6DBEFF, 0x7A5158FF, 0xBC8B93FF, 0x522F35FF, 0xFFCCD4FF, 0x92666DFF,
                0x280E14FF, 0x57F62FFF, 0x8037D3FF, 0x5B00A2FF, 0x984FF1FF, 0x7227C1FF, 0x4FF4F2FF, 0x14C8C7FF,
                0xE33D9EFF, 0xB30B77FF, 0xFF56B7FF, 0xEBE582FF, 0x817B21FF, 0xC0BB5CFF, 0x989338FF, 0xDAD573FF,
                0xAA9AE2FF, 0x493B72FF, 0x8373B5FF, 0x271847FF, 0xC2B2FDFF, 0x5F508CFF, 0xD9615FFF, 0xAA3C3EFF,
                0xF57774FF, 0x7B161FFF, 0xC65252FF, 0xDF48EAFF, 0xB11BBCFF, 0xCE39D8FF, 0x698E7AFF, 0x112D20FF,
                0xA6D0B9FF, 0x466856FF, 0x7FA691FF, 0x264435FF, 0x737CFFFF, 0x251384FF, 0x5355D4FF, 0x352FA4FF,
                0x676DF1FF, 0xE79000FF, 0xFFA925FF, 0xA15084FF, 0xE88BC6FF, 0x762E5EFF, 0xBC669DFF, 0x4B0839FF,
                0xFFA3E0FF, 0x66B941FF, 0xA4FF7EFF, 0x428F18FF, 0x7DD358FF, 0xB01BFFFF, 0x2B739BFF, 0x66B2E1FF,
                0x004E72FF, 0x428AB5FF, 0x7DCCFDFF, 0x1D658CFF, 0x2F1DEAFF, 0xD6A981FF, 0x6A4728FF, 0xAB815DFF,
                0x432505FF, 0xF0C198FF, 0x835D3CFF, 0x7138A1FF, 0xB173EAFF, 0x4A0F73FF, 0x894EBDFF, 0x25CB9EFF,
                0x44E5B5FF, 0x00BA8EFF, 0xFF5B91FF, 0xD2346CFF, 0xF14D83FF, 0x0092FFFF, 0xE1D62FFF, 0xFCF14DFF,
                0x9D90ABFF, 0x3D3447FF, 0xE0D2F0FF, 0x776B84FF, 0x18111FFF, 0xB6A9C5FF, 0x7035E4FF, 0x854DFFFF,
                0x6222D0FF, 0xC95220FF, 0xE76937FF, 0xB8440EFF, 0xD046B6FF, 0xA01D8BFF, 0xED5ED0FF, 0xC4EDA4FF,
                0x608045FF, 0x9BC17DFF, 0x3E5B24FF, 0x769859FF, 0x1E3600FF, 0x323B85FF, 0x6576CDFF, 0x151454FF,
                0x44509FFF, 0x7B8EE9FF, 0x262C72FF, 0x4D1021FF, 0x944756FF, 0xDB8190FF, 0x682534FF, 0xAF5D6BFF,
                0xF799A8FF, 0x95EF20FF, 0xCA50FDFF, 0x9D25CDFF, 0xB840EAFF, 0x79D2D3FF, 0x136A6BFF, 0x53A9AAFF,
                0x91EDEEFF, 0x2E8183FF, 0x6AC2C3FF, 0xFF0F97FF, 0x3452E9FF, 0x1C28B6FF, 0xC99940FF, 0x9F7319FF,
                0xE4B257FF, 0xB98A32FF, 0x8A569BFF, 0xCC91E0FF, 0x623371FF, 0xA26BB4FF, 0x3A1047FF, 0xE7AAFCFF,
                0x1EBC64FF, 0x3FD77BFF, 0x00AD57FF, 0xA50028FF, 0xF5505CFF, 0xC2273BFF, 0x26B4FBFF, 0xFC32E3FF,
                0x1E00FBFF, 0x554B3FFF, 0xFEEFDEFF, 0x918577FF, 0x30281EFF, 0xD3C5B5FF, 0x6B6053FF, 0x6036AFFF,
                0x9B72FBFF, 0x3D067FFF, 0x764DCCFF, 0x52279DFF, 0xF064A5FF, 0xC03F7EFF, 0x911759FF, 0xDD5595FF,
                0xB9DC60FF, 0x92B13AFF, 0xD3F778FF, 0x6E890AFF, 0xAACB52FF, 0x7D95C5FF, 0x253558FF, 0x596E9AFF,
                0x06102BFF, 0x93ACDEFF, 0x384A71FF, 0x5017E6FF, 0xB15E44FF, 0xFA9B7CFF, 0x853B24FF, 0xCC7458FF,
        };

        int[] munsellish255 = {
                0x00000000, 0x000000FF, 0x404040FF, 0x808080FF, 0xABABABFF, 0xD5D5D5FF, 0xFFFFFFFF, 0xFF94A8FF,
                0xFDA4B1FF, 0xF67E92FF, 0xFED1DDFF, 0xEFB3BDFF, 0xD9929AFF, 0xFADBE3FF, 0xDFBAC4FF, 0xF4E7F1FF,
                0xD9C3C9FF, 0xFF003EFF, 0xEC2E54FF, 0xB30039FF, 0x810031FF, 0xDD4A62FF, 0x9C243FFF, 0x671135FF,
                0xCA99A0FF, 0xC16570FF, 0x724251FF, 0x4B2B35FF, 0xAB9198FF, 0x7E5C65FF, 0xFF9576FF, 0xFDA397FF,
                0xFA7C7FFF, 0xFFD0C1FF, 0xF2B5A5FF, 0xDD918EFF, 0xFDDCDEFF, 0xDEB8BCFF, 0xDEBCB8FF, 0xFF512EFF,
                0xF16F4EFF, 0xDC320AFF, 0xE37C64FF, 0xCD4525FF, 0xD28477FF, 0xB51C01FF, 0x890014FF, 0xC8897DFF,
                0xAA4742FF, 0x662129FF, 0xB78F88FF, 0x925854FF, 0x603434FF, 0xFF8C38FF, 0xFF8F2FFF, 0xE86A00FF,
                0xFFBE9BFF, 0xF09C73FF, 0xD7712DFF, 0xAE5000FF, 0x79200AFF, 0xD5855EFF, 0x995538FF, 0x63290EFF,
                0xB88D7AFF, 0x8D5C4FFF, 0x5B372FFF, 0xAB938DFF, 0x7D625FFF, 0xFFCE71FF, 0xFFAF2AFF, 0xEE9300FF,
                0xFFD198FF, 0xF7B56EFF, 0xE39331FF, 0xF7D2B3FF, 0xBC7700FF, 0x854E00FF, 0xE0A775FF, 0xA57748FF,
                0x6C421FFF, 0xCDA899FF, 0xA07765FF, 0x664D3BFF, 0xFFCC00FF, 0xFFD95DFF, 0xF0BB1AFF, 0xD29F00FF,
                0xFADF98FF, 0xEABB56FF, 0xCB9F3CFF, 0xF7E1BDFF, 0xDEBF84FF, 0xC1A162FF, 0xF9E7E4FF, 0xD5C7B7FF,
                0xB1892FFF, 0x8A6713FF, 0x583A14FF, 0xF7E800FF, 0xF5E736FF, 0xD3C81CFF, 0xB6AB00FF, 0xFAE686FF,
                0xD0C556FF, 0xB4A730FF, 0xF5E6ABFF, 0xD6C37DFF, 0xA78F25FF, 0x7A6E14FF, 0x4B3D00FF, 0xA79871FF,
                0x786840FF, 0x484121FF, 0xAC9684FF, 0x766352FF, 0xB0ED00FF, 0xCBED54FF, 0x91B615FF, 0x558400FF,
                0xD7E997FF, 0x9BAF5CFF, 0xE3E4BBFF, 0xAAAD8DFF, 0x336D00FF, 0x57721AFF, 0x294705FF, 0x627052FF,
                0x3E452CFF, 0x20ED30FF, 0x80ED83FF, 0x20B14DFF, 0x1A8313FF, 0x005807FF, 0xD1F5CAFF, 0x99DC98FF,
                0x61AA70FF, 0x327643FF, 0x124A1FFF, 0x00FCAAFF, 0x32E4B3FF, 0x00A375FF, 0xAAEFD2FF, 0x6BC49FFF,
                0x31906EFF, 0x0D6649FF, 0x0F4034FF, 0xCEE6E0FF, 0x9CBAB3FF, 0x609A7AFF, 0x3C6C4FFF, 0x1F4A37FF,
                0xE0FBE6FF, 0xC1DCCAFF, 0x87AD92FF, 0x597F64FF, 0x65FFDEFF, 0x1EE9DEFF, 0x00A796FF, 0x8BF2F1FF,
                0x5CC0C6FF, 0x209296FF, 0x176063FF, 0x004043FF, 0x00D1FCFF, 0x009BD2FF, 0x9CE3FCFF, 0x5EBDE3FF,
                0x1E8DB4FF, 0x005E7FFF, 0x003D53FF, 0x3272EAFF, 0x63AFF7FF, 0x2C7FE4FF, 0x0D38B0FF, 0xA8D3FFFF,
                0x84B7EBFF, 0x267EC9FF, 0x16457FFF, 0xCBDEFBFF, 0x9FB2D3FF, 0x5A7DA2FF, 0x3B516EFF, 0x21354EFF,
                0xECE9F8FF, 0xC6C5D9FF, 0x9499AAFF, 0x61687BFF, 0x534DEDFF, 0x909BF5FF, 0x626DD0FF, 0x352FA4FF,
                0xC4CDFFFF, 0x98A4DFFF, 0x5960AFFF, 0x2F2A73FF, 0xD1D6FDFF, 0x9EA5CEFF, 0x545F9BFF, 0x9240F8FF,
                0xAB91EEFF, 0x7C47D0FF, 0x570D97FF, 0xD6C8FFFF, 0xAE9DDFFF, 0x7552B8FF, 0x482B74FF, 0xDED1F6FF,
                0xAFA0CFFF, 0x7359A0FF, 0xDA32FDFF, 0xDB9FEFFF, 0xBB51D6FF, 0x86209EFF, 0x620079FF, 0xF0C7FAFF,
                0xCCA2E0FF, 0xAC64BEFF, 0x743E86FF, 0x4F1E63FF, 0xECD6F7FF, 0xC0A6CCFF, 0x9B729FFF, 0x6B4C73FF,
                0x462B48FF, 0xF2E7F7FF, 0xD3C3DBFF, 0xA395AAFF, 0x73627CFF, 0xFD1BD7FF, 0xD147B7FF, 0x9B1786FF,
                0x6C0066FF, 0xD78EC2FF, 0xBF5BAEFF, 0x823973FF, 0x581C58FF, 0xC696BCFF, 0xAD6A9AFF, 0xFFB4F1FF,
                0xFB9AD7FF, 0xEB81C1FF, 0xFDC0E5FF, 0xEBA9CFFF, 0xDC8EB1FF, 0xF5D3E9FF, 0xDDAFC8FF, 0xFF2A9AFF,
                0xE4338AFF, 0xB00070FF, 0x730052FF, 0xD74B8EFF, 0x922D61FF, 0x631244FF, 0xCB97ABFF, 0xBD638AFF,
        };
        int[] glimmer = {
                0x00000000, 0x000000FF, 0xFFFFFFFF, 0x858585FF, 0x444444FF, 0xCCCCCCFF, 0x252524FF, 0xA7A7A7FF,
                0x646464FF, 0xF2F2F2FF, 0x141414FF, 0x969696FF, 0x545454FF, 0xDFDFDFFF, 0x343434FF, 0xB9B9B9FF,
                0x747474FF, 0x9AA483FF, 0xFF0063FF, 0x254862FF, 0x141C00FF, 0xFFE0E8FF, 0x00C1FFFF, 0x709500FF,
                0xE8003DFF, 0x002E58FF, 0xF7FFDCFF, 0xFFABC2FF, 0x73A0C6FF, 0x4A7F00FF, 0x6C2435FF, 0x001132FF,
                0xBDFC66FF, 0xFF4E8CFF, 0x0082FCFF, 0x1D6800FF, 0x57001AFF, 0xF9F9F9FF, 0x65F100FF, 0xD67681FF,
                0x005BFFFF, 0x284416FF, 0x250004FF, 0xC4E1FFFF, 0x00DB00FF, 0xFF0044FF, 0x0026FFFF, 0x0A2B00FF,
                0xFBF3F5FF, 0x82C3FFFF, 0x67A443FF, 0xF80009FF, 0x0F3370FF, 0x000C00FF, 0xFFC5C3FF, 0x1C9CFFFF,
                0x009500FF, 0x5E4140FF, 0x000C60FF, 0xDFF8DDFF, 0xFF8787FF, 0x5689E9FF, 0x007E00FF, 0x640011FF,
                0x03000EFF, 0x00FF28FF, 0xFF0025FF, 0x134EFFFF, 0x324D34FF, 0x400000FF, 0xE3EAFDFF, 0x00F800FF,
                0xF4403CFF, 0x4B00FFFF, 0x003910FF, 0xFFF9F6FF, 0xB5CBFFFF, 0x87A48BFF, 0xFF0000FF, 0x283789FF,
                0x001B00FF, 0xF9DED7FF, 0x85A3FFFF, 0x009E4BFF, 0xE20000FF, 0x1C008EFF, 0xDDFFE8FF, 0xFFAA93FF,
                0x8B93C1FF, 0x008927FF, 0x602A1BFF, 0x110048FF, 0x93FABBFF, 0xFF5718FF, 0x6462FFFF, 0x006D16FF,
                0x490000FF, 0xF6F6F6FF, 0x00FB74FF, 0xD0775BFF, 0x6300FFFF, 0x17412CFF, 0x180000FF, 0xD1D6FDFF,
                0x00E25CFF, 0xDF3800FF, 0x7200FFFF, 0x002716FF, 0xF9EFEAFF, 0xB4ACFFFF, 0x539E7DFF, 0xCA0000FF,
                0x321781FF, 0x000502FF, 0xFFC5A6FF, 0xA06EFFFF, 0x008E61FF, 0x50433DFF, 0x21005EFF, 0xD0F6E6FF,
                0xFF882AFF, 0x8475E2FF, 0x00764AFF, 0x4B2006FF, 0xFFFCFFFF, 0x00FBBAFF, 0xFF0000FF, 0x8400FFFF,
                0x354542FF, 0x290900FF, 0xE4E3F8FF, 0x00E6A7FF, 0xC56820FF, 0x8700FFFF, 0x003227FF, 0xFFF6EDFF,
                0xD0B9FFFF, 0x8D9B97FF, 0xB94000FF, 0x443067FF, 0x001511FF, 0xF9D9C6FF, 0xC77CFFFF, 0x12937FFF,
                0x9B2100FF, 0x330060FF, 0xBDFFF9FF, 0xFFA94DFF, 0x9889B6FF, 0x007E6CFF, 0x4A331EFF, 0x130026FF,
                0x61F9E4FF, 0xFF5D00FF, 0xA428FFFF, 0x006357FF, 0x341800FF, 0xF2F2F2FF, 0x00EAD5FF, 0xAA865FFF,
                0xA400FFFF, 0x163A38FF, 0x0A0000FF, 0xE6C7FDFF, 0x00D0C5FF, 0xAA6100FF, 0x8B00F0FF, 0x00211FFF,
                0xEFECE6FF, 0xEA87FFFF, 0x569594FF, 0x964100FF, 0x451458FF, 0xF3FFFFFF, 0xFFC372FF, 0xFF00FFFF,
                0x008485FF, 0x424242FF, 0x280037FF, 0xC4F1F4FF, 0xFF9100FF, 0xB94FDAFF, 0x006B74FF, 0x36270BFF,
                0xFFF7FFFF, 0x00EDF8FF, 0xF97200FF, 0xBC00E7FF, 0x344042FF, 0x1A0E00FF, 0xF0D8F2FF, 0x00D4F2FF,
                0x9F7730FF, 0xA900CCFF, 0x002B30FF, 0xFFF5D0FF, 0xFF94FFFF, 0x00BAE4FF, 0x8C5B00FF, 0x4C2C4BFF,
                0x000F11FF, 0xF2DA9AFF, 0xFF00FFFF, 0x1C8999FF, 0x734100FF, 0x3A003CFF, 0xBDFFFFFF, 0xFCB300FF,
                0xAD7BA6FF, 0x00738DFF, 0x3B3420FF, 0x0E000DFF, 0x8FE7F6FF, 0xE29600FF, 0xCB08B7FF, 0x005879FF,
                0x231B00FF, 0xFFDBFFFF, 0x00DAFFFF, 0x928A62FF, 0xC200A4FF, 0x1A343BFF, 0xFFFFF2FF, 0xFBB9E6FF,
                0x00BEFFFF, 0x876E00FF, 0xA3007CFF, 0x001B23FF, 0xEBEACEFF, 0xFF64E6FF, 0x568DA4FF, 0x6C5500FF,
                0x491337FF, 0xEBFFFFFF, 0xE6CE00FF, 0xFF00E6FF, 0x0079A2FF, 0x4E3F00FF, 0x27001BFF, 0xD2E6EFFF,
                0xC9B400FF, 0xCC4A94FF, 0x005E97FF, 0x2A2807FF, 0xFFF2FEFF, 0x65D6FFFF, 0xAB9900FF, 0xD2007FFF,
                0x353B3EFF, 0x0F0D00FF, 0xF0D4E2FF, 0x00BFFFFF, 0x7D802DFF, 0xBA005FFF, 0x002536FF, 0xFDFF00FF,
        };
        int[] glimmer2 = {
                0x00000000, 0x000000FF, 0xFFFFFFFF, 0x858585FF, 0x444444FF, 0xCCCCCCFF, 0x252524FF, 0xA7A7A7FF,
                0x646464FF, 0xF2F2F2FF, 0x141414FF, 0x969696FF, 0x545454FF, 0xDFDFDFFF, 0x343434FF, 0xB9B9B9FF,
                0x747474FF, 0x616B43FF, 0x8D0032FF, 0xECF8FFFF, 0x9EE700FF, 0xFF6696FF, 0x0079FFFF, 0x475E00FF,
                0x590017FF, 0xB3E6FFFF, 0x75DA00FF, 0xFF0071FF, 0x376D9DFF, 0x274A00FF, 0xFFF3F7FF, 0x76D4FFFF,
                0x79BB00FF, 0xFF0042FF, 0x0055B4FF, 0x102D00FF, 0xFFD0DAFF, 0x9FBADAFF, 0x46B100FF, 0xBE3353FF,
                0x0037AEFF, 0xF0FFE8FF, 0xFFA3B0FF, 0x51A9FFFF, 0x00A300FF, 0xC7002BFF, 0x000F88FF, 0x95FF4AFF,
                0xE4A8ACFF, 0x0089FFFF, 0x3B8116FF, 0xAE0000FF, 0xFAFDFFFF, 0x00FF00FF, 0xFF6A74FF, 0x004DFFFF,
                0x007500FF, 0x3F2324FF, 0xD4E9FFFF, 0x5FE04CFF, 0xFF002FFF, 0x1D60FFFF, 0x006000FF, 0x080000FF,
                0xA5D3FFFF, 0x00DD00FF, 0xFF0000FF, 0x2000FFFF, 0x1B371BFF, 0xFFDCD5FF, 0xA3BFF9FF, 0x00D100FF,
                0xEC0000FF, 0x5800FFFF, 0x001300FF, 0xFFB2A5FF, 0x79A4FFFF, 0x67936CFF, 0xEC0000FF, 0x1B2382FF,
                0xA7FFBCFF, 0xFFA79AFF, 0x637DFFFF, 0x009332FF, 0xCE0000FF, 0x110052FF, 0x00FF31FF, 0xFF7452FF,
                0x7382D0FF, 0x008220FF, 0x611B0FFF, 0xEAEDFFFF, 0x00F07BFF, 0xFF0000FF, 0x584BFFFF, 0x006D15FF,
                0x370000FF, 0xD6DAE6FF, 0x00E965FF, 0xE2613AFF, 0x6900FFFF, 0x034429FF, 0xFFECDFFF, 0xB8C0FFFF,
                0x00D754FF, 0xEF1C00FF, 0x7A00FFFF, 0x002715FF, 0xF3D6C9FF, 0xA79DFFFF, 0x24A77AFF, 0xDE0000FF,
                0x3E00AFFF, 0xC2FFEBFF, 0xFFAF80FF, 0x9F6CFFFF, 0x009D64FF, 0x644D40FF, 0x2C0085FF, 0x9EF6D6FF,
                0xFF7900FF, 0x9075FFFF, 0x008B59FF, 0x6D2700FF, 0xF7F6FFFF, 0x00FEB8FF, 0xFF0000FF, 0x940EFFFF,
                0x3B5E52FF, 0x4A0C00FF, 0xE4DDFAFF, 0x00F1AEFF, 0xEC6800FF, 0xA600FFFF, 0x00513FFF, 0xFFF6EDFF,
                0xD5BFFFFF, 0x90ADA6FF, 0xE84600FF, 0x6738B4FF, 0x00352BFF, 0xFFDEC5FF, 0xD194FFFF, 0x00B398FF,
                0xD52B00FF, 0x6400C7FF, 0xEBFFFEFF, 0xFFBA72FF, 0xAF9CD8FF, 0x00A58CFF, 0x824D1DFF, 0x4F009DFF,
                0x95FFF1FF, 0xFF8900FF, 0xBD5EFFFF, 0x009283FF, 0x753300FF, 0x070508FF, 0x00FFF2FF, 0xE39A51FF,
                0xD000FFFF, 0x046D68FF, 0x551E00FF, 0xF3E4FFFF, 0x00F7EAFF, 0xEE7800FF, 0xE200FFFF, 0x005C59FF,
                0x130E0AFF, 0xF7BBFFFF, 0x4CC4C0FF, 0xE15F00FF, 0x9500CDFF, 0x004241FF, 0xFFE8C6FF, 0xFF83FFFF,
                0x00BBBFFF, 0x76746FFF, 0x8C00C1FF, 0x0A1818FF, 0xFFC844FF, 0xE087F9FF, 0x00ACB8FF, 0x895700FF,
                0x700099FF, 0xB6FFFFFF, 0xFF9900FF, 0xFF00FFFF, 0x538081FF, 0x774100FF, 0x270D2EFF, 0x00FFFFFF,
                0xEBA300FF, 0xFF00FFFF, 0x007583FF, 0x5C2C00FF, 0xFFEBFFFF, 0x00FAFFFF, 0xE38D00FF, 0xB04CB5FF,
                0x006377FF, 0x261E06FF, 0xFFB8FFFF, 0x00D2ECFF, 0xD47800FF, 0xC200C1FF, 0x004A62FF, 0xFFF7CFFF,
                0xDFBBDFFF, 0x00C1EEFF, 0x94782EFF, 0xB800ABFF, 0x02272DFF, 0xFFD700FF, 0xFF78F5FF, 0x00AFF0FF,
                0x896300FF, 0x960086FF, 0xE2FFFFFF, 0xE6CB70FF, 0xFF00FFFF, 0x278CA9FF, 0x735100FF, 0x47003CFF,
                0x82F8FFFF, 0xE1B600FF, 0xFF00FFFF, 0x007EA8FF, 0x444230FF, 0xFFF7FFFF, 0x94DBF4FF, 0xD0A400FF,
                0xE900B0FF, 0x00689FFF, 0x322A00FF, 0xFFCCF5FF, 0x00D4FFFF, 0xBD9200FF, 0xF0009DFF, 0x2B4955FF,
                0xFFFFDDFF, 0xFFB9DAFF, 0x00C3FFFF, 0x8D8700FF, 0xE20082FF, 0x00334BFF, 0xFFF100FF, 0xFF87D0FF,
                0x769DB2FF, 0x797700FF, 0x782350FF, 0x000A11FF, 0xDAE000FF, 0xFF26C3FF, 0x0094DAFF, 0x646400FF,
        };

        int[] glimmer3 = {
                0x00000000, 0x000000FF, 0xFFFFFFFF, 0x8CBF00FF, 0xFF0077FF, 0xE4FBFFFF, 0xB6FF00FF, 0xFF8EBEFF,
                0x30BEFFFF, 0x89A551FF, 0xFF0051FF, 0xD8EFFFFF, 0x90FD00FF, 0xFF9CB6FF, 0x00ACFFFF, 0x639D00FF,
                0xFFEFF8FF, 0xBBE5FFFF, 0xB5D98DFF, 0xFF7298FF, 0x54A0ECFF, 0x318500FF, 0xFFE6E5FF, 0x98DDFFFF,
                0x7BE400FF, 0xFF2879FF, 0x0083FFFF, 0xECFFD4FF, 0xFFCCD2FF, 0xB3CFF0FF, 0x0FE600FF, 0xF86B7CFF,
                0x004FFFFF, 0xCEFFB4FF, 0xFFB5BBFF, 0x91C4FFFF, 0x00E300FF, 0xFF003FFF, 0xFAFCFFFF, 0x87FF54FF,
                0xF6BEC0FF, 0x6EB6FFFF, 0x3AC100FF, 0xFF0000FF, 0xE3F2FFFF, 0x00FF00FF, 0xFF9E9BFF, 0x49A4FFFF,
                0x00BC00FF, 0x471B1AFF, 0xCCE5FFFF, 0x49FB55FF, 0xFF7A77FF, 0x6B9BFFFF, 0x00A700FF, 0xFFEAE3FF,
                0xB7D9FFFF, 0x00FF00FF, 0xD1A19BFF, 0x4679FFFF, 0x1F5729FF, 0xFFD5CAFF, 0xBECFFFFF, 0x00FF00FF,
                0xFF6454FF, 0x4311FFFF, 0xD2FFDBFF, 0xFFBEACFF, 0xA6C2FFFF, 0x6AC989FF, 0xFF0000FF, 0x372BE8FF,
                0x68FFA9FF, 0xFFBFB0FF, 0x99AEFFFF, 0x00D057FF, 0xFF0000FF, 0xEDF4FFFF, 0xC0E9CBFF, 0xFFA486FF,
                0x9FADEFFF, 0x00C743FF, 0xA92F00FF, 0xDFE6FFFF, 0x00FF91FF, 0xFF8346FF, 0x8F92FFFF, 0x00B339FF,
                0xFFF2E9FF, 0xDCDBF0FF, 0x00FF7BFF, 0xF89773FF, 0x8768FFFF, 0x00784CFF, 0xFFDEC9FF, 0xCBCEFFFF,
                0x00FF7AFF, 0xFF6900FF, 0x8180A8FF, 0xD5FFF3FF, 0xF6D8CBFF, 0xC4BBFFFF, 0x14D79AFF, 0xFF0000FF,
                0x6F0EFFFF, 0x79FFDCFF, 0xFFC199FF, 0xBEA5FFFF, 0x00D891FF, 0xB97553FF, 0xFBF7FFFF, 0x90FBD7FF,
                0xFFAB66FF, 0xB7A5FFFF, 0x00CC8AFF, 0xBF4400FF, 0xEEE5FFFF, 0x00FFCAFF, 0xD2BCAEFF, 0xB983FFFF,
                0x4A9C86FF, 0xFFF9EDFF, 0xE2DDFFFF, 0x00FFC9FF, 0xFF9741FF, 0xC047FFFF, 0x008D75FF, 0xFFE5C0FF,
                0xE3C9FFFF, 0x85D6C5FF, 0xFF6A00FF, 0xA26CECFF, 0xEBFFFDFF, 0xFFDCBCFF, 0xE6B1FFFF, 0x00E0C3FF,
                0xFF4600FF, 0xAD00FFFF, 0xEAF2F0FF, 0xFFC882FF, 0xD0B9ECFF, 0x00DBC4FF, 0xD07814FF, 0x6100B6FF,
                0x72FFF4FF, 0xFFB118FF, 0xDA98FFFF, 0x00D2C3FF, 0xC65900FF, 0xF6F0F8FF, 0x00FFFFFF, 0xFAB770FF,
                0xEE62FFFF, 0x00ABA4FF, 0x833200FF, 0xF6DAFFFF, 0x00FFFFFF, 0xFF9A00FF, 0xA79DACFF, 0x009A9AFF,
                0xFEF1E6FF, 0xFEC0FFFF, 0x21E5E8FF, 0xFF8200FF, 0xDC3CFFFF, 0x006D74FF, 0xFFE2ACFF, 0xFF9FFFFF,
                0x00E6F1FF, 0xBF9E6EFF, 0xF300FFFF, 0xDBFEFDFF, 0xFFD053FF, 0xF3A8FFFF, 0x00DEFCFF, 0xCE8600FF,
                0xCC00FEFF, 0x91FFFFFF, 0xFFB800FF, 0xFF74FFFF, 0x5DB7BEFF, 0xC36E00FF, 0xFDF2FFFF, 0x00FFFFFF,
                0xFFBB00FF, 0xFF00FFFF, 0x00B4CCFF, 0x995300FF, 0xFFD7FFFF, 0xA9E1E8FF, 0xFFAA00FF, 0xF06FE9FF,
                0x00A2C8FF, 0xFFF8DEFF, 0xFFBBFFFF, 0x00E8FFFF, 0xFF9D00FF, 0xFF00FFFF, 0x0082B1FF, 0xFFEA84FF,
                0xEFC8E6FF, 0x00E6FFFF, 0xCAA52AFF, 0xFF00FFFF, 0xE9FEFFFF, 0xFFD900FF, 0xFFA3F1FF, 0x00DCFFFF,
                0xC69600FF, 0x965684FF, 0xC5F8FFFF, 0xF1D959FF, 0xFF7DF6FF, 0x00BFEAFF, 0xB18600FF, 0xFFF7FFFF,
                0x7EF7FFFF, 0xF7CD00FF, 0xFF38F2FF, 0x00B7FFFF, 0x7A7442FF, 0xFFE1FAFF, 0xA5E3FEFF, 0xEDC500FF,
                0xFF6FCDFF, 0x00A4FFFF, 0xFFFFDCFF, 0xFFC7F3FF, 0x60E0FFFF, 0xBFBB88FF, 0xFF00C5FF, 0x3181A4FF,
                0xFFF900FF, 0xFFC7E3FF, 0x00DBFFFF, 0xB6B600FF, 0xFF00BAFF, 0x00446AFF, 0xFCF300FF, 0xFFA9D7FF,
                0x85C4E3FF, 0xA9AC00FF, 0xDC2B83FF, 0xD6F8FFFF, 0xD8EB00FF, 0xFF87CBFF, 0x00BFFFFF, 0x939F00FF,
                0xAF0051FF, 0xDFE9EDFF, 0xCBE500FF, 0xEEA3BFFF, 0x00B0FFFF, 0x74890CFF, 0xFFEAF2FF, 0xB3E3FFFF,
        };


        int[] ridgeback1 = new int[]{
                0x00000000, 0x000000FF, 0x121212FF, 0x222222FF, 0x313131FF, 0x3F3F3FFF, 0x4E4E4EFF, 0x5D5D5DFF,
                0x6C6C6CFF, 0x7C7C7CFF, 0x8C8C8CFF, 0x9C9C9CFF, 0xADADACFF, 0xBEBEBDFF, 0xCFCFCFFF, 0xE1E1E1FF,
                0xF3F3F3FF, 0xFFFFFFFF, 0x5E4D00FF, 0x6E5C18FF, 0x7E6C28FF, 0x8F7B37FF, 0x9F8B45FF, 0xB09C54FF,
                0xC1AC62FF, 0xD3BD72FF, 0xE5CF81FF, 0xF7E192FF, 0xFECA00FF, 0x3D4409FF, 0x4C541BFF, 0x5A6329FF,
                0x697337FF, 0x798345FF, 0x889353FF, 0x98A462FF, 0xA9B571FF, 0xBAC680FF, 0xCBD890FF, 0xDDEAA1FF,
                0xEFFDB1FF, 0xA9BA00FF, 0xBACC15FF, 0xCBDE30FF, 0xDCF144FF, 0x193A0CFF, 0x274A1BFF, 0x345A28FF,
                0x426A36FF, 0x507A44FF, 0x5F8A52FF, 0x6E9B60FF, 0x7DAB6FFF, 0x8DBD7EFF, 0x9DCE8EFF, 0xAEE09EFF,
                0xBFF3AFFF, 0x2E8300FF, 0x3D941DFF, 0x4DA52FFF, 0x5CB73FFF, 0x6BC94EFF, 0x7BDB5EFF, 0x8BEE6EFF,
                0x59FA00FF, 0x004D30FF, 0x185D3EFF, 0x296D4CFF, 0x387D5AFF, 0x478E69FF, 0x569E78FF, 0x65AF87FF,
                0x75C197FF, 0x84D2A8FF, 0x95E5B9FF, 0xA6F7CAFF, 0x00D281FF, 0x0EE591FF, 0x32F7A1FF, 0x006E64FF,
                0x177E73FF, 0x2B8F83FF, 0x3CA093FF, 0x4DB1A4FF, 0x5DC2B5FF, 0x6DD4C6FF, 0x7DE6D8FF, 0x8EF9EAFF,
                0x006B76FF, 0x1F7B87FF, 0x318B97FF, 0x419CA8FF, 0x51ADB9FF, 0x61BECBFF, 0x71D0DDFF, 0x81E2EFFF,
                0x005777FF, 0x146788FF, 0x277799FF, 0x3787ABFF, 0x4698BDFF, 0x56A8CFFF, 0x65BAE1FF, 0x75CBF4FF,
                0x06325AFF, 0x18416CFF, 0x26517EFF, 0x346090FF, 0x4270A2FF, 0x5080B4FF, 0x5F90C6FF, 0x6EA1D9FF,
                0x7DB2EBFF, 0x8DC3FEFF, 0x007EEDFF, 0x148FFFFF, 0x0D0933FF, 0x191B49FF, 0x252B5DFF, 0x333A6FFF,
                0x404982FF, 0x4E5894FF, 0x5C68A6FF, 0x6B77B8FF, 0x7A87CAFF, 0x8A97DDFF, 0x99A8F0FF, 0xAAB9FFFF,
                0x1E1A87FF, 0x282D9DFF, 0x333EB2FF, 0x404EC6FF, 0x4C5EDBFF, 0x5A6FEFFF, 0x687FFFFF, 0x3418E9FF,
                0x3D32FFFF, 0x16062CFF, 0x261842FF, 0x352754FF, 0x443567FF, 0x534478FF, 0x62538AFF, 0x72629BFF,
                0x8171ADFF, 0x9180BFFF, 0xA290D1FF, 0xB2A1E3FF, 0xC3B1F6FF, 0x3C007DFF, 0x4B1E92FF, 0x5A2FA7FF,
                0x693FBBFF, 0x784FCFFF, 0x875FE3FF, 0x976FF7FF, 0x7214E9FF, 0x822EFFFF, 0x31123AFF, 0x42214CFF,
                0x532F5EFF, 0x633D6FFF, 0x744C80FF, 0x845A91FF, 0x9569A2FF, 0xA679B4FF, 0xB788C5FF, 0xC999D7FF,
                0xDBA9EAFF, 0xEDBAFDFF, 0x631278FF, 0x75248BFF, 0x86349EFF, 0x9844B0FF, 0xAA53C3FF, 0xBC62D6FF,
                0xCE72E9FF, 0xE082FCFF, 0xAD03D4FF, 0xC027E9FF, 0xD33BFDFF, 0x390F2DFF, 0x4B1E3EFF, 0x5D2C4EFF,
                0x6F3A5EFF, 0x80486DFF, 0x91577EFF, 0xA3668EFF, 0xB4759EFF, 0xC685AFFF, 0xD995C1FF, 0xEBA5D2FF,
                0xFEB6E4FF, 0x8A156CFF, 0x9D287DFF, 0xB1388EFF, 0xC4479FFF, 0xD857B1FF, 0xEB66C2FF, 0xFF76D4FF,
                0xE300ACFF, 0xF921BDFF, 0x3F0B1DFF, 0x531B2BFF, 0x662939FF, 0x783848FF, 0x8A4656FF, 0x9C5465FF,
                0xAE6374FF, 0xC07284FF, 0xD38294FF, 0xE692A4FF, 0xF9A2B5FF, 0x960946FF, 0xAB2255FF, 0xBF3363FF,
                0xD44372FF, 0xE85382FF, 0xFD6292FF, 0x3F0F0EFF, 0x521E1BFF, 0x652D28FF, 0x773B36FF, 0x894943FF,
                0x9B5851FF, 0xAD6760FF, 0xBF766EFF, 0xD2867EFF, 0xE5968DFF, 0xF8A69DFF, 0x9C0817FF, 0xB12226FF,
                0xC63433FF, 0xDB4441FF, 0xEF544FFF, 0x522000FF, 0x652F12FF, 0x773D20FF, 0x894C2EFF, 0x9A5B3BFF,
                0xAC6A49FF, 0xBF7957FF, 0xD18966FF, 0xE49975FF, 0xF7AA84FF, 0xE6620CFF, 0xFA7225FF, 0x6D4510FF,
                0x7E5321FF, 0x90622FFF, 0xA1723DFF, 0xB2814BFF, 0xC4925AFF, 0xD6A268FF, 0xE9B378FF, 0xFBC488FF,
        };

        int[] ridgeback2 = new int[]{
                0x00000000, 0x000000FF, 0x111111FF, 0x1F1F1FFF, 0x2C2C2CFF, 0x393939FF, 0x474747FF, 0x545454FF,
                0x616161FF, 0x6E6E6EFF, 0x7C7C7CFF, 0x8B8B8BFF, 0x999999FF, 0xA7A7A7FF, 0xB6B6B6FF, 0xC6C6C6FF,
                0xD6D6D6FF, 0xE5E5E5FF, 0xF5F5F5FF, 0xFFFFFFFF, 0x0E0034FF, 0x0D1A49FF, 0x1F1444FF, 0x2A0F3DFF,
                0x330B30FF, 0x3B0020FF, 0x3E0010FF, 0x351E52FF, 0x431843FF, 0x4C1431FF, 0x501323FF, 0x51150CFF,
                0x00370FFF, 0x11295BFF, 0x24245AFF, 0x23430DFF, 0x004725FF, 0x22356CFF, 0x382F67FF, 0x4B285AFF,
                0x57234AFF, 0x5E213BFF, 0x612227FF, 0x5F260AFF, 0x713038FF, 0x713325FF, 0x6E3700FF, 0x3C4F13FF,
                0x1D5528FF, 0x29457DFF, 0x423F78FF, 0x52396FFF, 0x623262FF, 0x6E2E4DFF, 0x823A4DFF, 0x823E36FF,
                0x7F421FFF, 0x754A0BFF, 0x665200FF, 0x4F5B18FF, 0x34612EFF, 0x136443FF, 0x005C81FF, 0x295689FF,
                0x444E8DFF, 0x5B4783FF, 0x6D4175FF, 0x783D63FF, 0x465F9DFF, 0x5F5798FF, 0x72518DFF, 0x814C7BFF,
                0x8F4763FF, 0x93494CFF, 0x924C37FF, 0x8A5324FF, 0x7B5C11FF, 0x66651DFF, 0x506C2DFF, 0x337145FF,
                0x00745EFF, 0x006E88FF, 0x286795FF, 0x31815CFF, 0x008276FF, 0x008089FF, 0x1D7A9CFF, 0x4272A9FF,
                0x5D69ADFF, 0x7162A7FF, 0x855C98FF, 0x97577FFF, 0xA25467FF, 0xA45553FF, 0xA05B3DFF, 0x936429FF,
                0x826D21FF, 0x6F742AFF, 0x557C40FF, 0x2D89ABFF, 0x4781B9FF, 0x6478BDFF, 0x7E70B7FF, 0x9369A7FF,
                0xA56393FF, 0xB06179FF, 0xB4625FFF, 0xB06849FF, 0xA66F36FF, 0x95792FFF, 0x7D8237FF, 0x628A4CFF,
                0x428F63FF, 0x23907EFF, 0x138E98FF, 0x9D79BDFF, 0xB074A8FF, 0xBE6F93FF, 0xC37178FF, 0xC3745CFF,
                0xB97C4AFF, 0xAD843CFF, 0x958E44FF, 0x789753FF, 0x5B9D6CFF, 0x3DA082FF, 0x339E9DFF, 0x359AB7FF,
                0x5093C6FF, 0x668BCFFF, 0x8382C9FF, 0x629FDBFF, 0x7F96DFFF, 0x968FD9FF, 0xB285C7FF, 0xC57FB1FF,
                0xD27D96FF, 0xD57E80FF, 0xD28463FF, 0xC78C50FF, 0xB39649FF, 0x9F9E51FF, 0x7DA866FF, 0x5EAE7FFF,
                0x44AF9BFF, 0x3EADB1FF, 0x4AA7CCFF, 0xE68E7CFF, 0xE0946AFF, 0xCE9F5DFF, 0xB9A957FF, 0x9BB366FF,
                0x82B97AFF, 0x65BD98FF, 0x4ABEB5FF, 0x4CBAD1FF, 0x5EB4E1FF, 0x7DAAEBFF, 0x98A0EFFF, 0xB597E3FF,
                0xC891D2FF, 0xD98DB5FF, 0xE68A99FF, 0x95B5FFFF, 0xB3ABFAFF, 0xCBA4EDFF, 0xE09DD6FF, 0xF199B9FF,
                0xF69A9CFF, 0xF59E84FF, 0xE9A771FF, 0xD7B163FF, 0xBCBC6BFF, 0xA1C47AFF, 0x83CA94FF, 0x64CEB3FF,
                0x5BCCD0FF, 0x60C7E6FF, 0x78BFF6FF, 0xFBB77FFF, 0xE8C172FF, 0xCCCC7AFF, 0xB1D589FF, 0x92DBA3FF,
                0x73DFC3FF, 0x6BDDE1FF, 0x70D8F8FF, 0xDBB3FFFF, 0xF1ADE7FF, 0xFFA8C9FF, 0xCEE18FFF, 0xAEE9A5FF,
                0x94EDBFFF, 0x7BEFDFFF, 0x7CEBFDFF, 0xEED580FF, 0xF9E78FFF, 0xD8F39EFF, 0xB3FCBAFF, 0x9FFED5FF,
                0x86FFF5FF, 0xF6FEA5FF, 0x0A1189FF, 0x33179BFF, 0x4F0088FF, 0x3A2CB0FF, 0x5B1E9CFF, 0x740B81FF,
                0x3641C3FF, 0x5D32B7FF, 0x7C259BFF, 0x931677FF, 0xA4004BFF, 0xAA001DFF, 0x3B51D5FF, 0x6A40C9FF,
                0x8B32B0FF, 0xA42786FF, 0xB51B5DFF, 0xBC1B29FF, 0xD02B2EFF, 0x4B5EE7FF, 0x7C4CDBFF, 0x9F3EBCFF,
                0xB93290FF, 0xC82C65FF, 0xB948BDFF, 0xD23C90FF, 0xE0385DFF, 0xE14022FF, 0x009A29FF, 0x2876FBFF,
                0x6C65F8FF, 0x9755E2FF, 0xF4511CFF, 0xB060EFFF, 0xD154C4FF, 0xE84B95FF, 0xF34A60FF, 0x00BC4DFF,
                0xBB71FFFF, 0xE062D9FF, 0xFA59A4FF, 0xF370E4FF, 0x85BE00FF, 0x16CC61FF, 0x6BD646FF, 0xABDD25FF,
                0x5BEB6EFF, 0xC9E829FF, 0x7CFA6CFF, 0xF4F013FF, 0x3718FBFF, 0x980EFFFF, 0xEA1DE5FF, 0xFF2FECFF,
        };
*/
int[] honona = {
        0x00000000, 0xF6C4BAFF, 0xE5858CFF, 0xBD516DFF, 0x80436BFF, 0x383552FF, 0x58485EFF, 0x8D7B80FF, 0xBAA9A6FF, 0xDBD6CAFF, 0xFFFBDEFF, 0xB9EADAFF, 0xB0D18BFF, 0x81C0C6FF, 0x6F9D81FF, 0x5378A7FF,
        0x295A29FF, 0x294221FF, 0x212110FF, 0x5A1031FF, 0x942121FF, 0x945A21FF, 0xE76329FF, 0x9C8C29FF, 0xA5CE31FF, 0xE7BD39FF, 0xE7E742FF, 0xB57B6BFF, 0xD684DEFF, 0xEFDEEFFF, 0x295A9CFF, 0x397B63FF,
        0x4A9CE7FF, 0x31DEB5FF, 0xEFCE8CFF, 0xEF9C73FF, 0xE731CEFF, 0x6B63DEFF, 0x317B21FF, 0x399C31FF, 0x7BB542FF, 0x9CF79CFF, 0x181042FF, 0x211894FF, 0x2929DEFF, 0x2994A5FF, 0x31C639FF, 0x42EF42FF,
        0xB5F731FF, 0xD69C29FF, 0xDE2139FF, 0xAD21C6FF, 0x6B18B5FF
};

int[] apolland = {
        0x00000000, 0x000000FF, 0xFFFFFFFF, 0x6DF7C1FF, 0x11ADC1FF, 0x606C81FF, 0x393457FF, 0x1E8875FF, 0x5BB361FF, 0xA1E55AFF, 0xF7E476FF, 0xF99252FF, 0xCB4D68FF, 0x6A3771FF, 0xC92464FF, 0xF48CB6FF,
        0xF7B69EFF, 0x6B9C6BFF, 0x102152FF, 0x1818ADFF, 0x2931DEFF, 0x3973DEFF, 0x39C6B5FF, 0x4ADEDEFF, 0x183918FF, 0x295A18FF, 0x318421FF, 0x31A521FF, 0x39DE39FF, 0x9CDE94FF, 0x4A2921FF, 0x734A4AFF,
        0xA56B52FF, 0xC68C7BFF, 0xADB58CFF, 0xDED6CEFF, 0x391010FF, 0x731818FF, 0x845221FF, 0x947B21FF, 0xADA529FF, 0xDEBD31FF, 0x290842FF, 0x521042FF, 0x8C1052FF, 0xAD2121FF, 0xE72929FF, 0xE76B31FF,
        0x101073FF, 0x4A108CFF, 0x6B21CEFF, 0x9C29C6FF, 0xDE29CEFF, 0xCE6BD6FF, 0x080831FF, 0x101010FF, 0x102110FF, 0x183139FF, 0x21527BFF, 0x317342FF, 0x848CCEFF, 0x8CB5DEFF, 0xD6BDE7FF, 0xC6EFDEFF
};

        palette =
                apolland
                ;
//                Coloring.HALTONIC255;
//                new int[]
//                { // halturvy
//                        0x00000000, 0x010101FF, 0xFEFEFEFF, 0x777777FF, 0x555555FF, 0xAAAAAAFF, 0x333333FF, 0xE0E0E0FF,
//                        0xC8C8C8FF, 0x563C18FF, 0x5076DDFF, 0x79303DFF, 0xAA8ECEFF, 0x1B295FFF, 0xD6F77EFF, 0x20C93AFF,
//                        0x9F6BD9FF, 0x5A6862FF, 0x6CA557FF, 0x2F0921FF, 0xC42784FF, 0x68208FFF, 0xFC8962FF, 0x3A1F29FF,
//                        0xF86FB2FF, 0x70E2B5FF, 0x4B1849FF, 0xA96A38FF, 0x91574BFF, 0xFA95E9FF, 0x1B8577FF, 0xF7441FFF,
//                        0xC5D04DFF, 0x0B151EFF, 0x9B867DFF, 0x171C3EFF, 0xAA27D8FF, 0x106839FF, 0x105346FF, 0xA2A84EFF,
//                        0x89CC48FF, 0x6E59B2FF, 0x1E53C7FF, 0x372FD0FF, 0x90B9F9FF, 0x6F3E97FF, 0x25BAD1FF, 0xDF3447FF,
//                        0x5339FFFF, 0x259ADDFF, 0xFB6A52FF, 0x591F16FF, 0x353C83FF, 0x48881AFF, 0xEC37B4FF, 0xF873F9FF,
//                        0xD01412FF, 0x6823DEFF, 0xEED17AFF, 0x9D3649FF, 0xA544FFFF, 0xF3AE55FF, 0xD2608EFF, 0x74FF6CFF,
//                        0x661A4FFF, 0x8B4719FF, 0x3A13A6FF, 0xDC24FFFF, 0x1EADA5FF, 0x080804FF, 0x7353F4FF, 0x66671AFF,
//                        0x599159FF, 0x152D1EFF, 0x8D1E78FF, 0x131F14FF, 0x27D6AAFF, 0xB85488FF, 0x31F9EAFF, 0x007D28FF,
//                        0xD310D1FF, 0x174353FF, 0xC36EFEFF, 0x8E32AFFF, 0xC395EFFF, 0xCC7F3FFF, 0x9A1F17FF, 0x3573AAFF,
//                        0x2A4212FF, 0x37EB57FF, 0xE4A4A6FF, 0x382771FF, 0x1B050AFF, 0x820B16FF, 0x508AB4FF, 0xF32D76FF,
//                        0x0A0B45FF, 0xA5C4A0FF, 0xEEB3FFFF, 0x47540AFF, 0xD1A828FF, 0xB84E1CFF, 0xF853ECFF, 0xA1F2BBFF,
//                        0xAB197DFF, 0xD7FBDAFF, 0x1C547DFF, 0x6C87FFFF, 0xCA8187FF, 0x52D5EDFF, 0x824E7AFF, 0x300B5EFF,
//                        0x0B6876FF, 0x19C28DFF, 0x925EBEFF, 0x00A648FF, 0x001074FF, 0x2660EBFF, 0x9C852CFF, 0x090121FF,
//                        0x51436FFF, 0x5EA7F8FF, 0x822EF3FF, 0x828AC5FF, 0x92A093FF, 0xFAFF23FF, 0x130FA2FF, 0x95759DFF,
//                        0x856B2EFF, 0x112FB8FF, 0x0C30FEFF, 0x26B71DFF, 0x820CB6FF, 0x00DD34FF, 0x8B5F84FF, 0xCE6BC2FF,
//                        0xD4E22FFF, 0x4A3952FF, 0x9CE0FCFF, 0xFA51A3FF, 0x500ABDFF, 0x6E4416FF, 0x495D99FF, 0xB7445AFF,
//                        0xF08112FF, 0x5A0B89FF, 0x7F0F67FF, 0x0E08F6FF, 0xCE6957FF, 0x301D06FF, 0x003914FF, 0x3E0533FF,
//                        0xC14CC0FF, 0x783F62FF, 0x300A81FF, 0xBE1B54FF, 0xF8E19DFF, 0xDC259AFF, 0x9A48A5FF, 0xFC4966FF,
//                        0xFDB29CFF, 0x6DC1C6FF, 0x009D96FF, 0x005415FF, 0x00000DFF, 0xC79976FF, 0x00FE2AFF, 0x87FFFFFF,
//                        0x3E47A9FF, 0xB4190DFF, 0x584ACDFF, 0xBDFE20FF, 0x78C188FF, 0xF7FF9AFF, 0x2CF79DFF, 0xD38FACFF,
//                        0x240F06FF, 0x00358AFF, 0x200424FF, 0x530C14FF, 0x585C2DFF, 0x867C1EFF, 0xC7B5E9FF, 0xFBC8B8FF,
//                        0x007960FF, 0x961B4BFF, 0xC159EEFF, 0x7866FFFF, 0xA89617FF, 0xFA2CE3FF, 0x4A4B44FF, 0xF48AC0FF,
//                        0xD25311FF, 0x342C11FF, 0xFCC21FFF, 0x00100AFF, 0x070832FF, 0xB219ADFF, 0x98E521FF, 0x0E87FFFF,
//                        0x18C1FFFF, 0xD5CFFCFF, 0x602A31FF, 0x132942FF, 0xC4AE7DFF, 0x75B124FF, 0x6D9A19FF, 0xD71259FF,
//                        0x6998A2FF, 0x620A37FF, 0x4F7A41FF, 0xA9420DFF, 0x0E5E5EFF, 0x6770B2FF, 0xBAD19AFF, 0xCFBB17FF,
//                        0x0085B3FF, 0x58066BFF, 0x240545FF, 0x631AC1FF, 0x5AA6C9FF, 0x4C0CFBFF, 0x888063FF, 0xF9EBFFFF,
//                        0x90BB25FF, 0x00EAFFFF, 0x48330EFF, 0x9EE78FFF, 0xD67BE9FF, 0x63DD86FF, 0xB95E5CFF, 0x92AAE5FF,
//                        0x4B5083FF, 0xF6E15BFF, 0x000E5EFF, 0x1100C7FF, 0x775451FF, 0x3F8C8BFF, 0xA97CA8FF, 0x452D50FF,
//                        0x004BFBFF, 0x184B69FF, 0x156EFAFF, 0x16152FFF, 0xF99428FF, 0x6F7DD9FF, 0x00395EFF, 0xB73DB9FF,
//                        0x460A07FF, 0x592A73FF, 0x20D271FF, 0x004039FF, 0x95CDFFFF, 0x7B413DFF, 0x9B0AD3FF, 0xEC6433FF,
//                };
//                { // haltok
//                        0x00000000, 0x010101FF, 0xFEFEFEFF, 0x777777FF, 0x555555FF, 0xAAAAAAFF, 0x333333FF, 0xE0E0E0FF,
//                        0xC8C8C8FF, 0x92072EFF, 0xBA81E2FF, 0x1B2076FF, 0xCEFE27FF, 0xAE54FCFF, 0x576A5EFF, 0x0A5D9BFF,
//                        0x5CAB26FF, 0x538E5DFF, 0x461425FF, 0x24EEA3FF, 0xAB4633FF, 0x0A1420FF, 0x55358FFF, 0xE7D05EFF,
//                        0xC210D3FF, 0xAB8071FF, 0x18174BFF, 0xE060B7FF, 0xB99CFEFF, 0xFD4A3FFF, 0x7947D2FF, 0xA1D363FF,
//                        0x598BB6FF, 0x581F61FF, 0x7D26B0FF, 0xB96079FF, 0x2A5F34FF, 0xC62765FF, 0x81F981FF, 0xD15D19FF,
//                        0xFA757FFF, 0x19A4EDFF, 0x2E4F6BFF, 0x4966A2FF, 0x3D31CDFF, 0x31D2E8FF, 0x9A3D74FF, 0x5972F5FF,
//                        0x411AA7FF, 0xEBA239FF, 0xF908DBFF, 0xEF9FA0FF, 0xFEA1E0FF, 0x627D15FF, 0xE18823FF, 0xEFBFFDFF,
//                        0xDD303FFF, 0x280C29FF, 0x69BA94FF, 0x923824FF, 0x7E975DFF, 0x4C4220FF, 0x120B0CFF, 0x132A47FF,
//                        0x6EC03BFF, 0x151F06FF, 0xF073F4FF, 0x8965AFFF, 0x053685FF, 0xD5348BFF, 0x3C63ECFF, 0x682825FF,
//                        0x8D2863FF, 0x4CB9F3FF, 0x2842F5FF, 0x7283F3FF, 0xBE8C97FF, 0x7C6311FF, 0x74F7E1FF, 0x080107FF,
//                        0x6DA1A5FF, 0x232D0EFF, 0x089D06FF, 0x1E83A7FF, 0x603657FF, 0xDCF7AEFF, 0x4CEC3AFF, 0x9A10FDFF,
//                        0x9F6A3BFF, 0x361209FF, 0x692BEBFF, 0x5D0E36FF, 0xF64BFAFF, 0x297538FF, 0xA843A9FF, 0x380652FF,
//                        0x0B4624FF, 0xE64980FF, 0x704995FF, 0x9052E5FF, 0xB8A838FF, 0xC8BB8DFF, 0x674A0CFF, 0xAA70BDFF,
//                        0x1B4450FF, 0x0EA984FF, 0xC87B1CFF, 0xB8B2DDFF, 0x27D596FF, 0x879ED8FF, 0xDC89BDFF, 0x12550DFF,
//                        0x0C0476FF, 0x258063FF, 0x65E2DAFF, 0xA45571FF, 0x270B05FF, 0x112AC8FF, 0xAE0D40FF, 0xA31BAAFF,
//                        0x19D931FF, 0x7D0B6AFF, 0x987F1AFF, 0x0B034DFF, 0x480E5FFF, 0xFEDF6EFF, 0xA69A1BFF, 0xD346BAFF,
//                        0x055ECCFF, 0xC3FDFAFF, 0x1949A3FF, 0x06021BFF, 0xC463FDFF, 0xF4B623FF, 0x200CADFF, 0x3A1A83FF,
//                        0x6D03ADFF, 0x815795FF, 0xF3CFA5FF, 0xC0E110FF, 0x0C26FEFF, 0x4D2301FF, 0x7F5258FF, 0xD00CFCFF,
//                        0xAFBE05FF, 0xFE6518FF, 0xFEB591FF, 0xDC7065FF, 0xDE957AFF, 0xFF87E8FF, 0x7E3010FF, 0xD21226FF,
//                        0xA6DEF6FF, 0x1BBB6DFF, 0x60FD1EFF, 0xFEFC65FF, 0x4B49BBFF, 0x12355CFF, 0x650BD9FF, 0xFF32A5FF,
//                        0x5E5D22FF, 0xA4DC9DFF, 0x27685AFF, 0x3D3667FF, 0xFE577EFF, 0xA90274FF, 0x1B2427FF, 0x098EF4FF,
//                        0x4C4C85FF, 0x089998FF, 0x958BB9FF, 0x721546FF, 0x443701FF, 0x65098AFF, 0x753D4CFF, 0x093B0FFF,
//                        0x99C079FF, 0x9AA171FF, 0x09B8C7FF, 0xC4039EFF, 0x99C8FBFF, 0xFF1D42FF, 0x105346FF, 0x0AC217FF,
//                        0xFB67BBFF, 0xBCEAA5FF, 0x060630FF, 0x8F7A98FF, 0x6D9522FF, 0x390D2EFF, 0x16830AFF, 0x87C2B8FF,
//                        0x83645FFF, 0x0A7AD8FF, 0x1B0220FF, 0x524843FF, 0x050A02FF, 0x8F08D8FF, 0x870B8AFF, 0x087583FF,
//                        0xC44A13FF, 0x4E46FDFF, 0xB355A8FF, 0x091C2FFF, 0x690B0AFF, 0x898264FF, 0x595A7BFF, 0x4B3240FF,
//                        0x274185FF, 0x7BD5A5FF, 0x051601FF, 0xFEFDC0FF, 0x914B14FF, 0x372246FF, 0x09CAC5FF, 0x8F69DEFF,
//                        0x099037FF, 0x576FB4FF, 0x597184FF, 0x09A64FFF, 0x4D10FDFF, 0xFDE7FEFF, 0xA6FF9AFF, 0x5107C5FF,
//                        0xD85C5AFF, 0x266B0FFF, 0x8A8DFCFF, 0xD73DFCFF, 0x6C51FDFF, 0x713A84FF, 0xB81E12FF, 0xC86990FF,
//                        0x78918EFF, 0xF90873FF, 0xFF849BFF, 0xCFEC50FF, 0xD91BB9FF, 0x56DC5FFF, 0x73794DFF, 0xFC8A3AFF,
//                        0xFFA169FF, 0x26A1BFFF, 0xB643DAFF, 0x7BBFFAFF, 0x3B1F0BFF, 0xAA0FD0FF, 0x5656C5FF, 0x870802FF,
//                        0x3F2958FF, 0x85E966FF, 0xD4B6FCFF, 0xBF8B58FF, 0xB06E56FF, 0xA35A0BFF, 0x0EFDB6FF, 0x26C87EFF,
//                };
//                { // haltoyo
//                        0x00000000, 0x010101FF, 0xFEFEFEFF, 0x777777FF, 0x555555FF, 0xAAAAAAFF, 0x333333FF, 0xE0E0E0FF,
//                        0xC8C8C8FF, 0x4972F1FF, 0x822638FF, 0xB189D3FF, 0x192767FF, 0xCFFB6EFF, 0xA464E3FF, 0x556A62FF,
//                        0x64A84AFF, 0x6C1397FF, 0x3F1B29FF, 0x56E8AFFF, 0x4E1050FF, 0xB06728FF, 0x3F4511FF, 0x995245FF,
//                        0xC2D22BFF, 0x0B151EFF, 0x4E3E83FF, 0xB33AC1FF, 0x9F847DFF, 0x161B41FF, 0xA4A934FF, 0xE46254FF,
//                        0x82CF34FF, 0x7253C0FF, 0x004FDBFF, 0x638AACFF, 0x3B1EE2FF, 0xFB47E7FF, 0xA52D96FF, 0x74389FFF,
//                        0xED1740FF, 0xE493D3FF, 0x601708FF, 0x3B1EADFF, 0xF81AB8FF, 0x93F29DFF, 0xE3838BFF, 0x43A3DCFF,
//                        0xF5CF62FF, 0x9E5FA0FF, 0x5D7B1EFF, 0xA82A44FF, 0x5BCEE2FF, 0xDAA95CFF, 0x68EF3FFF, 0x5E2141FF,
//                        0x209462FF, 0x912AF2FF, 0xD18F49FF, 0x426217FF, 0x333870FF, 0x0F2E1EFF, 0x0F4A51FF, 0x151F10FF,
//                        0x06041DFF, 0x4D89FDFF, 0xCB223AFF, 0x196BB7FF, 0x7E4D21FF, 0x7D8930FF, 0x87C486FF, 0x521186FF,
//                        0xA4B0FCFF, 0x4BBBA3FF, 0x070307FF, 0x5DAFF8FF, 0xEF4A8AFF, 0x1F618BFF, 0x6C16FFFF, 0xD037EFFF,
//                        0x2E0731FF, 0x2800A5FF, 0x735177FF, 0x3C57FBFF, 0xD5258CFF, 0x59EFF8FF, 0xBB506CFF, 0x00421BFF,
//                        0xE36CB3FF, 0x5B4531FF, 0x50C01CFF, 0x8B1379FF, 0xF7A3B2FF, 0xD3FDD3FF, 0xF06EF8FF, 0x0082C1FF,
//                        0x137F82FF, 0x009F1DFF, 0xE0AEFFFF, 0x91A288FF, 0x6B2067FF, 0x2DA190FF, 0xFAB46BFF, 0x240607FF,
//                        0x0F0B05FF, 0x005B2EFF, 0xA18E2AFF, 0x007548FF, 0xB6EB30FF, 0x0A08E3FF, 0x924CF5FF, 0x120177FF,
//                        0x090742FF, 0x84FCFCFF, 0xBD6A86FF, 0x0E42B2FF, 0x331359FF, 0xFDC3FEFF, 0xDA522CFF, 0x6312CBFF,
//                        0xBC68FDFF, 0x656EB1FF, 0x095179FF, 0x00DF8FFF, 0x59331BFF, 0x380911FF, 0x7B0E14FF, 0x8727C9FF,
//                        0xFC703FFF, 0x7A3D66FF, 0x8683D3FF, 0x8A6825FF, 0x972A19FF, 0xBF491DFF, 0x8E5488FF, 0xA6D09BFF,
//                        0xC67315FF, 0xCA4BB3FF, 0xF89179FF, 0xF9FE92FF, 0x4E53B3FF, 0x00CE7BFF, 0x372A09FF, 0xDCE7A2FF,
//                        0x3C1079FF, 0xBE0D66FF, 0x5E6A1AFF, 0x00005EFF, 0xB0BCBDFF, 0x523B52FF, 0x16071FFF, 0xF9384CFF,
//                        0xFA8A21FF, 0xBE8FFFFF, 0x00E41DFF, 0x00675CFF, 0xBB15F7FF, 0xF8C7BDFF, 0x00B112FF, 0x4940B1FF,
//                        0xBB8597FF, 0xFAFF23FF, 0xEFE429FF, 0xA911CAFF, 0x930EA3FF, 0x3D2CFEFF, 0x00909CFF, 0xFB88FFFF,
//                        0xB972C4FF, 0x2D1F0DFF, 0x052949FF, 0xB7B72CFF, 0x7AD7FFFF, 0x080695FF, 0x668D76FF, 0x9D2374FF,
//                        0xDB54CCFF, 0xB2DFC4FF, 0xF02178FF, 0x008E25FF, 0x0A395FFF, 0xE5B51BFF, 0xFA6376FF, 0x7A73CDFF,
//                        0xD616CEFF, 0xF977BDFF, 0x7597AAFF, 0xC0D4FFFF, 0xB03707FF, 0x7696F9FF, 0x59669AFF, 0x0098D9FF,
//                        0x9A174CFF, 0x11BD75FF, 0xFCEAF2FF, 0x003197FF, 0x3C2B5DFF, 0x8AA1C3FF, 0x0DAFB3FF, 0x18CFB7FF,
//                        0x2D5650FF, 0x4AFF80FF, 0x4E4E87FF, 0xEF18FFFF, 0x3D043AFF, 0x41350DFF, 0x675BE9FF, 0x99645BFF,
//                        0x008017FF, 0x00FFD2FF, 0xB14085FF, 0x648155FF, 0x5645E3FF, 0x7DDD6CFF, 0x3A3B45FF, 0x609C17FF,
//                        0x7D0C41FF, 0x00D41BFF, 0x495316FF, 0x967D58FF, 0xC1835BFF, 0x1C0C2DFF, 0x0008C7FF, 0xB3A86EFF,
//                        0x9BFFC5FF, 0x00C1DCFF, 0x732F14FF, 0xC215A4FF, 0x001506FF, 0x8D75A0FF, 0x5B1131FF, 0xAAC1F9FF,
//                        0xFAB5DFFF, 0x006EE5FF, 0x4B2CACFF, 0x372545FF, 0xD8175FFF, 0x7D5D31FF, 0x7A9B73FF, 0x526242FF,
//                        0x7968FCFF, 0x5F0C62FF, 0x0087E6FF, 0x9847AFFF, 0x68BD68FF, 0xB5DC8CFF, 0x5D455CFF, 0x0056B0FF,
//                        0x5E30DAFF, 0xDC7914FF, 0x944567FF, 0x502B85FF, 0x53090DFF, 0x9DA0E6FF, 0xD077EAFF, 0xFD49B3FF,
//                };
//                        { // haltesque
//                                0x00000000, 0x000000FF, 0xFFFFFFFF, 0x888888FF, 0x444444FF, 0xCCCCCCFF, 0x222222FF, 0xAAAAAAFF,
//                                0x666666FF, 0xEEEEEEFF, 0x111111FF, 0x999999FF, 0x555555FF, 0xDDDDDDFF, 0x333333FF, 0xBBBBBBFF,
//                                0x777777FF, 0x9F4026FF, 0x5578CEFF, 0x73353DFF, 0xA21DCFFF, 0xD4F695FF, 0x47C453FF, 0x9773CBFF,
//                                0x26D0D8FF, 0x2A2877FF, 0x73A264FF, 0xB93980FF, 0x622D83FF, 0xED9170FF, 0xE97BB2FF, 0xDD33BDFF,
//                                0x176AE1FF, 0x98234AFF, 0x8095E8FF, 0xEE9DE4FF, 0xE5573BFF, 0xC3CF67FF, 0x12569AFF, 0xBE7BA9FF,
//                                0xD5841AFF, 0xBC24FCFF, 0x94C860FF, 0xDA3D19FF, 0x6E5DA4FF, 0x10050FFF, 0x3A3AB9FF, 0x100D6DFF,
//                                0x49304FFF, 0x09A64FFF, 0x68478AFF, 0x355219FF, 0x5247E9FF, 0x711943FF, 0xEB7466FF, 0xF2AB4AFF,
//                                0xEE4281FF, 0x4C8635FF, 0xAA7357FF, 0xF962FFFF, 0xC752F9FF, 0x0B1146FF, 0x00E7B7FF, 0x40105FFF,
//                                0xB0A836FF, 0x147997FF, 0x4D1324FF, 0x9CEE3BFF, 0xB49AE8FF, 0x9D396EFF, 0x816126FF, 0xA3554AFF,
//                                0x931CA1FF, 0x2B0E14FF, 0x261FC3FF, 0x0698F2FF, 0x006D3CFF, 0x7EBAFCFF, 0x33094AFF, 0x1A3E0BFF,
//                                0x6EF3BBFF, 0xAF5C84FF, 0x4D1A87FF, 0xC5FD22FF, 0x704D13FF, 0x45E8FFFF, 0xBC79EAFF, 0x6F12BEFF,
//                                0xF7CE82FF, 0x0691AEFF, 0x40D732FF, 0x002F0CFF, 0x2EB2C9FF, 0x7747F9FF, 0x2F4283FF, 0xE2285DFF,
//                                0x0045E4FF, 0x56390EFF, 0x7564FEFF, 0xC6153BFF, 0x2762B4FF, 0x621B13FF, 0xEB52C0FF, 0x157860FF,
//                                0x1B7F17FF, 0xA74EBBFF, 0x79FFF0FF, 0xF71AEFFF, 0x20C8A4FF, 0x938D25FF, 0x020302FF, 0x1E2448FF,
//                                0x40ED4FFF, 0x4B06F9FF, 0x851E74FF, 0xF7B39BFF, 0xFDB7FCFF, 0x001D0CFF, 0x000534FF, 0x00687BFF,
//                                0x8B7223FF, 0x530CB9FF, 0x618F65FF, 0xEED415FF, 0x590D5FFF, 0xC920B1FF, 0x143F62FF, 0xB6856CFF,
//                                0x352807FF, 0x793AC7FF, 0x140FABFF, 0x391025FF, 0x30A3A4FF, 0x220786FF, 0x004D0EFF, 0x922F0FFF,
//                                0x1000FEFF, 0xC1BBFFFF, 0x76AE0BFF, 0x105569FF, 0x75B188FF, 0xFBFBAFFF, 0x1B0B2CFF, 0x830D17FF,
//                                0xC06B82FF, 0xF9FD43FF, 0xB40E95FF, 0xBEB06FFF, 0x5C7FFFFF, 0x20897AFF, 0x7C4C58FF, 0xEA85EBFF,
//                                0x6D00FCFF, 0xF390B1FF, 0xE59520FF, 0xF95E91FF, 0x5AADFCFF, 0x159918FF, 0x74D0FBFF, 0x54466DFF,
//                                0x8168A9FF, 0x474BBBFF, 0x95D8B2FF, 0x32FF19FF, 0xFD192AFF, 0x00B977FF, 0xA358ECFF, 0x5D6314FF,
//                                0xFCE43DFF, 0x113496FF, 0xBEE887FF, 0xC27615FF, 0x5D8BC3FF, 0x891048FF, 0x6A106FFF, 0x00FF8CFF,
//                                0x0C453AFF, 0x9FD625FF, 0x9544A6FF, 0xBC996DFF, 0x5D7759FF, 0xB21420FF, 0x0B305BFF, 0x00D98BFF,
//                                0x82C6A7FF, 0xC55EB5FF, 0xB35D18FF, 0x00B417FF, 0x9A6FFFFF, 0x610836FF, 0x91557EFF, 0xFB5F22FF,
//                                0x003235FF, 0x0A6047FF, 0x5B4626FF, 0xBD3B14FF, 0x861BFBFF, 0xEC1A8AFF, 0x75E882FF, 0xFABC2BFF,
//                                0x000904FF, 0xF8E0ABFF, 0xA30D76FF, 0x3E5E12FF, 0xEA4FFFFF, 0x2C0433FF, 0x0075FFFF, 0x412544FF,
//                                0x58355DFF, 0x6162D5FF, 0x4D5E8AFF, 0xA29927FF, 0x00260FFF, 0x44340DFF, 0xC593A4FF, 0x240607FF,
//                                0xFC9D89FF, 0x9E29F9FF, 0x62BBCCFF, 0x94749CFF, 0xFE4D5CFF, 0xFEC6BEFF, 0xB9A8FFFF, 0x7DFF86FF,
//                                0xC7B622FF, 0xFB5FCEFF, 0x5E7519FF, 0x678F1AFF, 0x17031EFF, 0xC55A58FF, 0x9DE1FEFF, 0x0655FFFF,
//                                0x8A8DB8FF, 0x001D2CFF, 0xFB7A25FF, 0xDD142BFF, 0xFC28ACFF, 0x89C118FF, 0xD90CFFFF, 0x3D04E1FF,
//                                0x0087EDFF, 0x421509FF, 0x3605ADFF, 0x753E65FF, 0xFBCEFFFF, 0x001E49FF, 0xF6B0D3FF, 0xC7469DFF,
//                                0x5D3239FF, 0x000018FF, 0xBF445DFF, 0x393377FF, 0x457EA7FF, 0x9E7A18FF, 0xBAFFD8FF, 0xBF116CFF,
//                        };
//                        { // surin
//                                0x00000000, 0x000000FF, 0x141414FF, 0xFFFFFFFF, 0x878787FF, 0xCCCCCCFF, 0x4F4F4FFF, 0xEEEEEEFF,
//                                0x282828FF, 0x999999FF, 0x757575FF, 0xDDDDDDFF, 0x3B3B3BFF, 0xBBBBBBFF, 0x626262FF, 0xAAAAAAFF,
//                                0x9B9783FF, 0x514E3DFF, 0xE10788FF, 0xDC8EA1FF, 0xA55F72FF, 0x5E2637FF, 0xF7419BFF, 0x9E0C5BFF,
//                                0x7C706BFF, 0x39302DFF, 0x943907FF, 0xAA755EFF, 0x794B37FF, 0x3A1706FF, 0xAA512AFF, 0x602400FF,
//                                0xE09A8BFF, 0x884F44FF, 0xDC6D00FF, 0xFDAA7CFF, 0xE06719FF, 0x7C3603FF, 0xFF811DFF, 0xA15013FF,
//                                0xECA992FF, 0x945D4AFF, 0xFF6B03FF, 0xFFBE9EFF, 0xEE763DFF, 0x913C07FF, 0xFF9664FF, 0xC15000FF,
//                                0xC09C84FF, 0x6F523EFF, 0xFF3107FF, 0xFF9779FF, 0xCD633FFF, 0x7E2400FF, 0xFF6B4EFF, 0xB52800FF,
//                                0xE9BB63FF, 0x916A13FF, 0xFF6B8EFF, 0xFFC8A5FF, 0xD78C59FF, 0x894A1BFF, 0xFE9C96FF, 0xC74F4EFF,
//                                0xCAC0B2FF, 0x797165FF, 0xFF6F84FF, 0xFFC4C4FF, 0xDA878AFF, 0x8B464AFF, 0xFF9BA3FF, 0xCC475EFF,
//                                0xEEBC98FF, 0x956C4DFF, 0xFF7C64FF, 0xFFCEBDFF, 0xDB9071FF, 0x8D4E33FF, 0xFFA68FFF, 0xC35E47FF,
//                                0xE6CAB3FF, 0x917965FF, 0xF88D7EFF, 0xFEDBCCFF, 0xD79F8CFF, 0x8A5B4BFF, 0xFEB5A5FF, 0xBC6E60FF,
//                                0xE7D7A1FF, 0x928355FF, 0xE79BBAFF, 0xFEE5DAFF, 0xD3AA99FF, 0x876556FF, 0xFCBBC3FF, 0xB27A81FF,
//                                0xBCD68FFF, 0x6C8145FF, 0xF767FDFF, 0xE5DBCCFF, 0xAEA698FF, 0x696156FF, 0xEDA7E5FF, 0xA5689EFF,
//                                0x6A945EFF, 0x294A1FFF, 0x9D00E1FF, 0xAC80D6FF, 0x7B53A0FF, 0x3E1B5BFF, 0xB335FFFF, 0x690B99FF,
//                                0x7AAA6AFF, 0x365E28FF, 0xB725FFFF, 0xD08BFFFF, 0x995ACFFF, 0x561A81FF, 0xC261FFFF, 0x830CBDFF,
//                                0x507A5EFF, 0x133722FF, 0x6410D3FF, 0x6E78BCFF, 0x464C88FF, 0x181747FF, 0x6D45DEFF, 0x3D008CFF,
//                                0x739B83FF, 0x2F513EFF, 0x7B44FFFF, 0x849EE5FF, 0x586EADFF, 0x233266FF, 0x866EFFFF, 0x5203DCFF,
//                                0x7FB98AFF, 0x386A43FF, 0xA162FFFF, 0xA5B9EAFF, 0x7688B5FF, 0x3A486DFF, 0xAB8BFFFF, 0x6D40D3FF,
//                                0x90CCAFFF, 0x457961FF, 0x958AFDFF, 0xB6D2FDFF, 0x7B9AD8FF, 0x3D578BFF, 0xA6ACFFFF, 0x6264DDFF,
//                                0x508B6BFF, 0x0C442CFF, 0x6A10FDFF, 0x6191B8FF, 0x386487FF, 0x002B46FF, 0x635EEBFF, 0x3622A1FF,
//                                0x659FADFF, 0x21535FFF, 0x0080BAFF, 0x4FB3DBFF, 0x1B81A5FF, 0x103E53FF, 0x139AD5FF, 0x065A7DFF,
//                                0x94BAD4FF, 0x4B6B81FF, 0x00AAC5FF, 0x5EDBFFFF, 0x25A5C9FF, 0x055D70FF, 0x26C3E6FF, 0x057D95FF,
//                                0x9DC1EFFF, 0x527198FF, 0x1CB6B9FF, 0x6EE6FFFF, 0x10B3CFFF, 0x026674FF, 0x1FD1E0FF, 0x00898FFF,
//                                0x707DD4FF, 0x32387EFF, 0x197A62FF, 0x6898D8FF, 0x3E6AA3FF, 0x072E5DFF, 0x278DA1FF, 0x114F5AFF,
//                                0x869BEFFF, 0x425196FF, 0x179982FF, 0x5CC1E9FF, 0x2B8FB4FF, 0x114A5FFF, 0x00B3B0FF, 0x116D6BFF,
//                                0xB898E7FF, 0x694D8FFF, 0x00AA3BFF, 0x92C7C5FF, 0x629492FF, 0x275250FF, 0x14C560FF, 0x127A3BFF,
//                                0xBD87D6FF, 0x6C3F80FF, 0x4F961CFF, 0x9CBA97FF, 0x6D8868FF, 0x32482EFF, 0x55B31FFF, 0x386C13FF,
//                                0xD3B0E3FF, 0x7F628CFF, 0x5FBA18FF, 0xA6E790FF, 0x75B060FF, 0x376923FF, 0x6DD819FF, 0x468C0DFF,
//                                0x98738BFF, 0x4D3144FF, 0x65690FFF, 0x9D8E71FF, 0x6E6147FF, 0x342915FF, 0x827C31FF, 0x4A4406FF,
//                                0xD47AA4FF, 0x7D3458FF, 0x8E7C13FF, 0xDC9B71FF, 0xA56B45FF, 0x5F300CFF, 0xB88C14FF, 0x6E530AFF,
//                                0xDBA4AAFF, 0x86595EFF, 0xC98800FF, 0xF8B690FF, 0xC08562FF, 0x764527FF, 0xF79617FF, 0x9D600EFF,
//                                0xEAB0CAFF, 0x926278FF, 0xBAA300FF, 0xFDD07DFF, 0xC7993CFF, 0x7B5800FF, 0xDCBA1CFF, 0x917911FF,
//                        };
//                        { // enclave
//                                0x00000000, 0x000000FF, 0xFFFFFFFF, 0x878787FF, 0xCCCCCCFF, 0x4F4F4FFF, 0xEEEEEEFF, 0x282828FF,
//                                0x999999FF, 0x141414FF, 0x757575FF, 0xDDDDDDFF, 0x3B3B3BFF, 0xBBBBBBFF, 0x626262FF, 0xAAAAAAFF,
//                                0xA48087FF, 0xFF3472FF, 0xFFB6C9FF, 0xB97586FF, 0x763E4DFF, 0xFF91B1FF, 0xD8607FFF, 0xA13655FF,
//                                0xB99193FF, 0xFF6673FF, 0xFFCED0FF, 0xC88B8DFF, 0x845053FF, 0xFFADB7FF, 0xE17C86FF, 0xA94F59FF,
//                                0xB08784FF, 0xFD5744FF, 0xFFBDB2FF, 0xCA7B72FF, 0x84433CFF, 0xFF9F8EFF, 0xE16D5FFF, 0xAA4237FF,
//                                0xB79287FF, 0xFF6B34FF, 0xFFD1BCFF, 0xC38D7BFF, 0x805243FF, 0xFFB190FF, 0xDF8062FF, 0xA85339FF,
//                                0xAA8A78FF, 0xE46E0EFF, 0xFFC79EFF, 0xBA8560FF, 0x784B2BFF, 0xFFAD72FF, 0xCD7C45FF, 0x974F19FF,
//                                0xB6997FFF, 0xEA8500FF, 0xFFDCA6FF, 0xC29667FF, 0x805A30FF, 0xFFC071FF, 0xD88D43FF, 0xA36012FF,
//                                0xA19275FF, 0xC78600FF, 0xF1D4A8FF, 0xA99069FF, 0x6B5533FF, 0xE9C075FF, 0xB38E48FF, 0x82611EFF,
//                                0x9F9777FF, 0xB7921AFF, 0xEEDB9EFF, 0xA7965FFF, 0x695A2AFF, 0xE4C771FF, 0xAF9443FF, 0x7E6514FF,
//                                0x8D8C6CFF, 0x9D8B00FF, 0xD3D198FF, 0x8F8D5AFF, 0x555327FF, 0xC5C06CFF, 0x938E40FF, 0x666115FF,
//                                0x909C78FF, 0x95A100FF, 0xD3E4ACFF, 0x8F9E6CFF, 0x556136FF, 0xC2D479FF, 0x91A04CFF, 0x637020FF,
//                                0x7B9071FF, 0x709A00FF, 0xB5D998FF, 0x75955AFF, 0x3E5926FF, 0x9ECD6EFF, 0x6E9840FF, 0x456A14FF,
//                                0x79977BFF, 0x43AA0FFF, 0xAFE2AAFF, 0x6F9C6BFF, 0x385F35FF, 0x8BD779FF, 0x5DA34CFF, 0x337323FF,
//                                0x658C75FF, 0x009E42FF, 0x9CD3A9FF, 0x5E8F6BFF, 0x2A5436FF, 0x72CA87FF, 0x44965BFF, 0x156733FF,
//                                0x6D9785FF, 0x10A871FF, 0x95E4C2FF, 0x569E81FF, 0x1C6148FF, 0x68DAADFF, 0x36A47CFF, 0x007451FF,
//                                0x5F8B7FFF, 0x00987BFF, 0x90D2C0FF, 0x538E7FFF, 0x1D5347FF, 0x6BC6B1FF, 0x3B937FFF, 0x006555FF,
//                                0x5A8B89FF, 0x17958AFF, 0x8BD2CCFF, 0x4D8E89FF, 0x155350FF, 0x64C6BCFF, 0x34928AFF, 0x00655EFF,
//                                0x4E8083FF, 0x008889FF, 0x7CC5C6FF, 0x408383FF, 0x004A4BFF, 0x5AB7BAFF, 0x2B8589FF, 0x00595DFF,
//                                0x588D96FF, 0x0095A6FF, 0x8CD2E1FF, 0x4E8E9BFF, 0x16535EFF, 0x6AC4D4FF, 0x3B91A1FF, 0x006472FF,
//                                0x538190FF, 0x0C87AAFF, 0x84C5E0FF, 0x47829BFF, 0x10495EFF, 0x62B6D4FF, 0x3485A0FF, 0x005971FF,
//                                0x5D879DFF, 0x158BC6FF, 0x8DCBF4FF, 0x5088ACFF, 0x1B4E6DFF, 0x69BCEDFF, 0x3B8AB7FF, 0x045D85FF,
//                                0x597D99FF, 0x197DD0FF, 0x91BEEAFF, 0x557CA3FF, 0x234464FF, 0x6AAEEDFF, 0x3F7DB7FF, 0x145184FF,
//                                0x7389A9FF, 0x3E84FCFF, 0xA1CDFFFF, 0x6389C3FF, 0x2F4E80FF, 0x7DB9FFFF, 0x5187E2FF, 0x2859AAFF,
//                                0x707FA0FF, 0x5071FFFF, 0xA5BFFFFF, 0x677DB9FF, 0x334477FF, 0x88AAFFFF, 0x5C79D7FF, 0x374DA1FF,
//                                0x7B83A6FF, 0x796FFCFF, 0xBBC3FFFF, 0x7A80B5FF, 0x444874FF, 0xA9AAFFFF, 0x7A7AD3FF, 0x514E9EFF,
//                                0x7D789EFF, 0x8956FFFF, 0xC1B0FFFF, 0x8070C0FF, 0x49397DFF, 0xB394FFFF, 0x8364E2FF, 0x5A39ABFF,
//                                0x9587ABFF, 0xB064FBFF, 0xDCC5FFFF, 0x9782BFFF, 0x5C497DFF, 0xD9A7FFFF, 0xA475DDFF, 0x7549A7FF,
//                                0x95809FFF, 0xD22DFFFF, 0xE9B5FFFF, 0xA274B7FF, 0x643D76FF, 0xEE8CFFFF, 0xB85DD9FF, 0x8430A2FF,
//                                0xA587A4FF, 0xFE00F5FF, 0xFFB3FFFF, 0xC172C1FF, 0x7D397FFF, 0xFF7FFFFF, 0xE24EDEFF, 0xAA19A8FF,
//                                0x9F8097FF, 0xFB0DBEFF, 0xFAB6E6FF, 0xB175A0FF, 0x703E63FF, 0xFF8AE2FF, 0xD25BADFF, 0x9B307DFF,
//                                0xB391A3FF, 0xFF5BA5FF, 0xFFCAE9FF, 0xC986A2FF, 0x854C65FF, 0xFFA8DBFF, 0xDF77A7FF, 0xA84C77FF,
//                        };
//                        { // gray15
//                                0x00000000, 0x000000FF, 0x141414FF, 0xFFFFFFFF, 0x878787FF, 0xCCCCCCFF, 0x4F4F4FFF, 0xEEEEEEFF,
//                                0x282828FF, 0x999999FF, 0x757575FF, 0xDDDDDDFF, 0x3B3B3BFF, 0xBBBBBBFF, 0x626262FF, 0xAAAAAAFF,
//                        };

//        palette = new int[64];
//        float[] outer = {
//            0.96f,//NamedColor.AURORA_CARMINE.hue(),
//            0.015f,//NamedColor.AURORA_LIGHT_SKIN_6.hue(),
//            0.013f,//NamedColor.ORANGE.hue(),
//            NamedColor.CW_LIGHT_YELLOW.hue(),
//            NamedColor.CW_GREEN.hue(),
//            NamedColor.CW_LIGHT_CYAN.hue(),
//            NamedColor.CW_SAPPHIRE.hue(),
//            NamedColor.CW_PURPLE.hue()
//        };
//
//        for (int i = 0; i < 7; i++) {
//            palette[i+1] = getInt(floatGetHSV(0.078f, 0.05f, (i+0.5f)/7f, 1f));
//        }
//        for (int i = 0; i < 8; i++) {
//            float sm = 1.0625f, vm = (9.5f + ((i & 3))) * 0.1f;
//            if(i <= 1 || i == 4) sm -= 0.09375f;
//            if(i == 7 || i == 5) sm -= 0.125f;
//            if(i == 6) vm = 0.9875f;
//            if(i == 7) vm = 0.9375f;
//            palette[i+8]    = getInt(floatGetHSV(outer[i], sm * 0.375f, vm * 0.25f, 1f));
//            palette[i+8+8]  = getInt(floatGetHSV(outer[i], sm * 0.3f, vm * 0.4f, 1f));
//            palette[i+8+16] = getInt(floatGetHSV(outer[i], sm * 0.45f, vm * 0.55f, 1f));
//            palette[i+8+24] = getInt(floatGetHSV(outer[i], sm * 0.55f, vm * 0.75f, 1f));
//            palette[i+8+32] = getInt(floatGetHSV(outer[i], sm * 0.4f, vm * 0.9f, 1f));
//            palette[i+8+40] = getInt(floatGetHSV(lerpHue(outer[i], outer[i+1 & 7], 0.4f), sm * 0.5f, vm * 0.475f, 1f));
//            palette[i+8+48] = getInt(floatGetHSV(lerpHue(outer[i], outer[i-1 & 7], 0.4f), sm * 0.35f, vm * 0.65f, 1f));
//        }
        
//        palette = new int[217];
//        for (int r = 0, i = 1; r < 6; r++) {
//            for (int g = 0; g < 6; g++) {
//                for (int b = 0; b < 6; b++) {
//                    palette[i++] = (r * 0x330000 | g * 0x3300 | b * 0x33) << 8 | 0xFF;
//                }
//            }
//        }
//        palette = new int[] {0x080000FF,0x201A0BFF,0x432817FF,0x492910FF,
//                0x234309FF,0x5D4F1EFF,0x9C6B20FF,0xA9220FFF,
//                0x2B347CFF,0x2B7409FF,0xD0CA40FF,0xE8A077FF,
//                0x6A94ABFF,0xD5C4B3FF,0xFCE76EFF,0xFCFAE2FF };

//        palette = Coloring.MANOSSUS256;
//        palette = new int[256];
//        System.arraycopy(Coloring.MANOS64, 0, palette, 0, 64);
//        PaletteReducer reducer = new PaletteReducer(Coloring.MANOS64);
//        long state = 98765432123456789L;
//        IntArray colors = new IntArray(256);
//        colors.addAll(Coloring.MANOS64);
//        int[] items = colors.items;
//
//        for (int i = 1; i < 14; i++) {
//            int color = i * 0x12121200 + 0x111111FF;
//            int found = reducer.reduceSingle(color);
//            if (CIELABConverter.differenceLAB(color, found, 1.0, 1.5, 1.5) > 300)
//            {
//                colors.add(color);
//                reducer.exact(items, colors.size);
//            }
//        }
//        for (int i = 1; i < 5000; i++) {
//            int r = (int)(i * 0xD1B54A32D192ED03L >>> 56), g = (int)(i * 0xABC98388FB8FAC03L >>> 56), b = (int)(i * 0x8CB92BA72F3D8DD7L >>> 56),
//                    color = r << 24 | g << 16 | b << 8 | 0xFF;
//                            int found = reducer.reduceSingle(color);
//                            if (CIELABConverter.differenceLAB(color, found, 1.0, 1.5, 1.5) > 300)
//                            {
//                                colors.add(color);
//                                reducer.exact(items, colors.size);
//                            }
//                            if(colors.size >= 256)
//                                break;
//        }
//        if(colors.size < 256)
//            System.out.println("UH-OH, colors.size is " + colors.size);
//
//        System.arraycopy(items, 64, palette, 64, 192);
//        
        ArrayList<Integer> mixingPalette = new ArrayList<>(256);
        for (int i = 0; i < palette.length; i++) {
            mixingPalette.add(palette[i]);
        }
//
//        mixingPalette.subList(64, 256).sort(hueComparator);
//        ArrayList<Integer> mixingPalette = new ArrayList<>(256);
//        for (int i = 0; i < 256; i++) {
//            mixingPalette.add(i * 0x01010100 | 0xFF);
//        }

//        float hueAngle = 0.1f, sat;
//        //0.7548776662466927, 0.5698402909980532,   0.6180339887498949
//        for (int i = 0; i < 6; i++) {
//            sat = sin_((i / 5f) * 0.5f) * 0.05f * 2f;
////            sat = TrigTools.sin_((i / 5.0) * 0.5) * 12.0;
////            palette[1 + i] = CIELABConverter.rgba8888((i / 5.0) * 100.0, TrigTools.cos_(hueAngle) * sat, TrigTools.sin_(hueAngle) * sat);
////            palette[1 + i] = Color.rgba8888(NamedColor.ycwcm((i / 5f), TrigTools.zigzag(hueAngle) * sat, TrigTools.zigzag(0.5f + hueAngle) * sat, 1f));
//            palette[1 + i] = Color.rgba8888(NamedColor.ycwcm((i / 5f), cosMaybe(hueAngle) * sat, sinMaybe(hueAngle) * sat, 1f));
//            hueAngle += 0.6180339887498949;
//        }
//        for (int i = 1; i < 7; i++) {
//            sat = sin_(((i + 3f) / 13f) * 0.5f) * 0.125f * 2f;
////            sat = TrigTools.sin_(((i + 2.0) / 11.0) * 0.5) * 28.0;
////            palette[6 + i] = CIELABConverter.rgba8888((i / 7.0) * 100.0, TrigTools.cos_(hueAngle) * sat, TrigTools.sin_(hueAngle) * sat);
////            palette[6 + i] = Color.rgba8888(NamedColor.ycwcm(((i+2f) / 11f), TrigTools.zigzag(hueAngle) * sat, TrigTools.zigzag(0.5f + hueAngle) * sat, 1f));
//            palette[6 + i] = Color.rgba8888(NamedColor.ycwcm(((i+2f) / 11f), cosMaybe(hueAngle) * sat, sinMaybe(hueAngle) * sat, 1f));
//            hueAngle += 0.6180339887498949;
//        }
//        for (int i = 1; i < 20; i++) {
//            sat = sin_(((i + 6f) / 32f) * 0.5f) * 0.2f * 2f;
////            sat = TrigTools.sin_(((i + 5) / 30.0) * 0.5) * (44.0 + 10.0 * TrigTools.cos(i * Math.E));
////            palette[12 + i] = CIELABConverter.rgba8888(Math.pow((i+5) / 30.0, 0.75) * 100.0, TrigTools.cos_(hueAngle) * sat, TrigTools.sin_(hueAngle) * sat);
////            palette[12 + i] = Color.rgba8888(NamedColor.ycwcm((float)Math.pow((i+4f) / 28.0f, 0.75), TrigTools.zigzag(hueAngle) * sat, TrigTools.zigzag(0.5f + hueAngle) * sat, 1f));
//            palette[12 + i] = Color.rgba8888(NamedColor.ycwcm((float)Math.pow((i+4f) / 28.0f, 0.625), cosMaybe(hueAngle) * sat, sinMaybe(hueAngle) * sat, 1f));
//            hueAngle += 0.6180339887498949;
//        }
        StringBuilder sb = new StringBuilder(mixingPalette.size() * 7);
        for (int i = 1; i < mixingPalette.size(); i++) {
            sb.append(String.format("%06x\n", mixingPalette.get(i) >>> 8));
        }
        Gdx.files.local("palettes/hex/"+HexGenerator.NAME+".hex").writeString(sb.toString(), false);
        System.out.println("new int[] {");
        for (int i = 0; i < mixingPalette.size(); i++) {
            System.out.print("0x" + StringKit.hex(mixingPalette.get(i)) + ", ");
            if((i & 7) == 7)
                System.out.println();
        }
        System.out.println("};");
        Gdx.app.exit();
    }


    @Override
    public void render() {
        Gdx.gl.glClearColor(0.4f, 0.4f, 0.4f, 1f);
        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
    }

    private static float cosMaybe(float angle){
        return cos_(angle * 0.25f) * 0.375f + TrigTools.cosq(angle - 0.5f) * 0.625f;
    }
    //3.141592653589793f
    private static float sinMaybe(float angle){
        return sin_(angle * 0.25f) * 0.375f + TrigTools.sinq(angle - 0.5f) * 0.625f;
    }

    private static int getInt(float color){
        final int c = FloatColorTools.floatToInt(color);
        return c | (c >>> 7 & 1);
    }
    public static float lerpHue (float from, float to, float progress) {
        to += 1.5f - from;
        to -= 0.5f + (int)to;
        from += to * progress + 1f;
        return from - (int)from;
        /*
        fract((fract(to + 0.5 - from) - 0.5) * progress + from)
         */
    }

}
