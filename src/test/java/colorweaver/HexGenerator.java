package colorweaver;

import colorweaver.tools.StringKit;
import colorweaver.tools.TrigTools;
import com.badlogic.gdx.ApplicationAdapter;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application;
import com.badlogic.gdx.backends.lwjgl3.Lwjgl3ApplicationConfiguration;
import com.badlogic.gdx.graphics.GL20;

import java.util.ArrayList;

import static colorweaver.tools.TrigTools.cos_;
import static colorweaver.tools.TrigTools.sin_;

public class HexGenerator extends ApplicationAdapter {
    private int[] palette;
    public static final String NAME = "yamog-255";

    public static void main(String[] arg) {
        Lwjgl3ApplicationConfiguration config = new Lwjgl3ApplicationConfiguration();
        config.setTitle(".hex Palette Generator");
        config.setWindowedMode(640, 480);
        config.setIdleFPS(10);
        config.useVsync(true);
        config.setResizable(false);
        new Lwjgl3Application(new HexGenerator(), config);
        AutomaticPaletteTransformer.main(arg);
        AutomaticPalettizer.main(arg);
    }

    @Override
    public void create() {
        int[] haltfire = new int[]{
                0x00000000, 0x48384840, 0x50405040, 0x58485840, 0x60506040, 0x68586840, 0x70607040, 0x78687840,
                0x80708040, 0x88788840, 0x90809040, 0x98889840, 0xA070A040, 0xA860A840, 0xB050B040, 0xB840B840,
                0x000000FF, 0x071314FF, 0x141E09FF, 0x081021FF, 0x102929FF, 0x291919FF, 0x292136FF, 0x233539FF,
                0x393939FF, 0x423131FF, 0x422931FF, 0x52525AFF, 0x6B6B63FF, 0x5A6373FF, 0x8C9484FF, 0x9C848CFF,
                0xA89C9CFF, 0xA5ADBDFF, 0xADBDC6FF, 0xD6CECEFF, 0xD6BDCEFF, 0xDEE7EFFF, 0xEFEFEFFF, 0xE7FFE7FF,
                0xFFFFFFFF, 0x422121FF, 0xBD6363FF, 0x390808FF, 0xC63129FF, 0xF7948CFF, 0xF73121FF, 0x73524AFF,
                0xE75A31FF, 0xF76B42FF, 0xD64A21FF, 0xA53918FF, 0xD68C73FF, 0xF7845AFF, 0x843110FF, 0xF7CEBDFF,
                0xEF5210FF, 0x632910FF, 0xC67B5AFF, 0xE79C7BFF, 0xB59484FF, 0xF76310FF, 0xF7BD9CFF, 0xAD5A29FF,
                0x9C735AFF, 0xEFB58CFF, 0xF79C5AFF, 0xDE7B31FF, 0xF77B18FF, 0x8C6342FF, 0x845229FF, 0xBD6318FF,
                0xEF8429FF, 0xC67321FF, 0x4A2908FF, 0xDE9C52FF, 0xE7AD6BFF, 0xFF9418FF, 0xF7B563FF, 0x945A10FF,
                0x734A10FF, 0xCE8418FF, 0xC6B59CFF, 0xEFAD4AFF, 0xEFCE9CFF, 0xBD9452FF, 0xE7A539FF, 0xDE9418FF,
                0xFFAD21FF, 0x946B18FF, 0x7B6B4AFF, 0xB58418FF, 0xE7AD18FF, 0xEFCE73FF, 0xCEBD8CFF, 0xEFC64AFF,
                0x312910FF, 0x6B634AFF, 0x7B6318FF, 0xEFBD18FF, 0xE7DEBDFF, 0x947B18FF, 0xF7E7A5FF, 0xCEAD21FF,
                0xEFC618FF, 0xA5944AFF, 0xA58C18FF, 0x4A4218FF, 0x847B4AFF, 0xEFD621FF, 0x524A10FF, 0xF7E763FF,
                0xBDB56BFF, 0xC6B510FF, 0xF7E731FF, 0xADA518FF, 0xEFEF21FF, 0xADAD5AFF, 0xFEFE0CFF, 0x9C9C7BFF,
                0xEFEFCEFF, 0xBDBD39FF, 0xE7E78CFF, 0x6B7310FF, 0xD6E721FF, 0xEFFF52FF, 0xE7FF21FF, 0xDEEF6BFF,
                0x5A6321FF, 0xEFFF8CFF, 0xB5D621FF, 0xA5AD84FF, 0xC6D684FF, 0x9CB542FF, 0xCEFF29FF, 0x848C6BFF,
                0x739418FF, 0xBDE75AFF, 0x8CBD21FF, 0x8CA55AFF, 0xADCE6BFF, 0x7BAD18FF, 0xE7FFBDFF, 0xADFF21FF,
                0x5A8418FF, 0x739442FF, 0x9CF721FF, 0x426B10FF, 0x8CDE29FF, 0x73D621FF, 0x5A7B42FF, 0x73F718FF,
                0xA5F773FF, 0x5AB539FF, 0x102908FF, 0x7BF75AFF, 0xADEF9CFF, 0x295221FF, 0x31BD18FF, 0x104208FF,
                0x219410FF, 0x186310FF, 0x29EF18FF, 0x187B10FF, 0x21AD18FF, 0x21D618FF, 0x29FF21FF, 0x0C300CFF,
                0x739C73FF, 0x29C629FF, 0xB5FFB5FF, 0x4AF74AFF, 0x085210FF, 0x6BDE7BFF, 0x219431FF, 0x184A21FF,
                0x217331FF, 0x29E75AFF, 0x183921FF, 0x18BD4AFF, 0x298C4AFF, 0x21AD52FF, 0x39C66BFF, 0x29FF7BFF,
                0xADD6BDFF, 0x29A55AFF, 0x31EF94FF, 0x217352FF, 0x42B58CFF, 0x218463FF, 0x84B5A5FF, 0x216352FF,
                0x31947BFF, 0x63E7C6FF, 0x31F7C6FF, 0x29D6B5FF, 0x8CF7E7FF, 0x39C6BDFF, 0x297B7BFF, 0x31A5B5FF,
                0x4AD6EFFF, 0x104252FF, 0xC6DEE7FF, 0x216B8CFF, 0x6B8C9CFF, 0x29526BFF, 0xADD6F7FF, 0x4AA5EFFF,
                0x102131FF, 0x637384FF, 0x8C9CADFF, 0x397BD6FF, 0x31426BFF, 0x315ACEFF, 0x102152FF, 0x080829FF,
                0x18187BFF, 0x2118A5FF, 0x3121D6FF, 0x100842FF, 0xB5A5EFFF, 0x7B39D6FF, 0xA58CC6FF, 0x0E001CFF,
                0x39105AFF, 0x8C6B9CFF, 0x8418B5FF, 0xC639E7FF, 0x631873FF, 0xEFC6F7FF, 0x5A3152FF, 0xEF73D6FF,
                0xC6189CFF, 0xEF29B5FF, 0x420831FF, 0xA54284FF, 0x941863FF, 0x6B1842FF, 0xF7B5D6FF, 0x210010FF,
                0xD64A8CFF, 0xE79CBDFF, 0xF7A5C6FF, 0xDE1863FF, 0x94526BFF, 0xCE7394FF, 0xF72163FF, 0xDE8CA5FF,
                0xC6184AFF, 0x6B424AFF, 0x841021FF, 0xEF6373FF, 0xAD1021FF, 0x5A0810FF, 0xFF1021FF, 0xE71821FF,
        };
        int[] haltonite = new int[]{
                0x00000000,
                0x000000FF, 0x141414FF, 0x282828FF, 0x291710FF, 0x1E222AFF, 0x3B3B3BFF, 0x434531FF, 0x4F4F4FFF,
                0x5C5C5CFF, 0x6A6A6AFF, 0x56626FFF, 0x787878FF, 0x878787FF, 0x999999FF, 0xAAAAAAFF, 0xBBBBBBFF,
                0xC2BBA9FF, 0xCCCCCCFF, 0xDDDDDDFF, 0xEEEEEEFF, 0xFFFFFFFF, 0xE31515FF, 0x5B0606FF, 0xF23C37FF,
                0xDA938FFF, 0xB41808FF, 0xFE1D02FF, 0xFFBBB2FF, 0x3F1C16FF, 0xF4A293FF, 0xC0422AFF, 0x5B2E24FF,
                0xB46B58FF, 0xF2825BFF, 0xC2836DFF, 0xA7593AFF, 0xE06635FF, 0xD35521FF, 0x793210FF, 0xA44210FF,
                0xCF794CFF, 0xFF9A60FF, 0xF8B891FF, 0x7E5030FF, 0xAE9784FF, 0x86694EFF, 0x502B06FF, 0xEA7B0BFF,
                0xEDD4B9FF, 0xDFAC73FF, 0x794811FF, 0xBB7213FF, 0x7B603CFF, 0xDFA24BFF, 0xE3971BFF, 0xFFC24FFF,
                0xF2CF80FF, 0x906D1DFF, 0xB0871FFF, 0xFDE5A7FF, 0xEDB71AFF, 0xA19150FF, 0xEDE389FF, 0xF4E54FFF,
                0x83804EFF, 0xBEBB4EFF, 0xE6E21DFF, 0xA4A222FF, 0xABAC7CFF, 0xF5FE22FF, 0xA5A94CFF, 0xF6FF95FF,
                0xBFD22EFF, 0xECFE65FF, 0xF2FAC2FF, 0x9BBD25FF, 0xB7C87DFF, 0xC1E367FF, 0x7A9633FF, 0xB8FA35FF,
                0x8FD111FF, 0x64852CFF, 0x223308FF, 0x496B1CFF, 0x88ED12FF, 0x42582CFF, 0x264509FF, 0x397E0EFF,
                0xB1FB85FF, 0xC5F8ABFF, 0x3DBB14FF, 0x68915EFF, 0xA0DE92FF, 0x47723EFF, 0x6AEF59FF, 0x71FE60FF,
                0x11560BFF, 0x78AE77FF, 0x1E9922FF, 0x1FA92AFF, 0x61C56DFF, 0x16D72EFF, 0x0AE930FF, 0x48A75CFF,
                0x3EDB6AFF, 0x24BC57FF, 0x71CB92FF, 0x4FF990FF, 0x35E986FF, 0x169355FF, 0x9BE8C3FF, 0x9EFFD1FF,
                0x68B69CFF, 0x10EBAFFF, 0x549787FF, 0x14D7ADFF, 0x1FAE9AFF, 0x117F76FF, 0x4DF7ECFF, 0xB1FEFAFF,
                0x124D4AFF, 0x69D4D3FF, 0x25E5F4FF, 0x75BFC7FF, 0x2DB2CEFF, 0x1B90B4FF, 0x1C5C7DFF, 0x469AC6FF,
                0x244E65FF, 0xAADAF7FF, 0x1E9CFBFF, 0x3D79ADFF, 0x8899AAFF, 0x83A3C3FF, 0x76B6F8FF, 0x5AA7FEFF,
                0x406697FF, 0x4282E6FF, 0x2C69D4FF, 0x1662FCFF, 0x184BB9FF, 0x1F439BFF, 0x081236FF, 0xB2C1FAFF,
                0x031050FF, 0x1127ABFF, 0x7C82C2FF, 0x090B23FF, 0x8E94E8FF, 0x3538F9FF, 0x4F50C5FF, 0x7B7CFCFF,
                0x2424EDFF, 0x1D16D5FF, 0x3B3962FF, 0x201693FF, 0x6D63C8FF, 0x3E3486FF, 0xB6B1D2FF, 0x2E1E6EFF,
                0x7E64E4FF, 0x7147FEFF, 0xB39CF5FF, 0x4413BFFF, 0x4F15DAFF, 0x260E5DFF, 0x5D3BAAFF, 0x6625E1FF,
                0x5A4382FF, 0x7A42DBFF, 0x480C8BFF, 0xAC6BF1FF, 0x8C6BA9FF, 0x680AA7FF, 0x8420C6FF, 0xAC29F6FF,
                0xB380C7FF, 0x650C83FF, 0x55096CFF, 0x875695FF, 0xCA4EECFF, 0xE994FDFF, 0x7E3E8CFF, 0xD086E0FF,
                0x9D36B1FF, 0xB53FC6FF, 0xD769E6FF, 0x7B1A88FF, 0xD308EDFF, 0x9604A4FF, 0x500153FF, 0xFBBAFAFF,
                0xA284A1FF, 0xB767B3FF, 0xFE43F2FF, 0xC221B4FF, 0xB00D9FFF, 0x32042DFF, 0xF925DFFF, 0xFC73E9FF,
                0xE90FCAFF, 0xD44ABEFF, 0xE25EC4FF, 0xF8ACE4FF, 0xA31479FF, 0xAB5692FF, 0xE31BA2FF, 0x9D3F7CFF,
                0x8C135FFF, 0x6B3858FF, 0x4B0932FF, 0xF372C1FF, 0xCC0E7EFF, 0x71174CFF, 0xF645A3FF, 0xC03E83FF,
                0xD55193FF, 0xF095C2FF, 0x893A5FFF, 0xAB134FFF, 0xE83175FF, 0xF93E83FF, 0xB46D86FF, 0xA05B73FF,
                0xE71A58FF, 0x22040DFF, 0xD27E96FF, 0xBC3E61FF, 0xD51144FF, 0xFE7B9AFF, 0xFE6885FF, 0xDF6A7FFF,
                0x8C525CFF, 0xA83F4BFF, 0x76121CFF, 0xD34B57FF, 0xC21A26FF, 0x87353AFF, 0x981C20FF, 0xEA5A5EFF,

                0x48384840, 0x50405040, 0x58485840, 0x60506040, 0x68586840, 0x70607040, 0x78687840,
                0x80708040, 0x88788840, 0x90809040, 0x98889840, 0xA070A040, 0xA860A840, 0xB050B040, 0xB840B840,
        };

        int[] wagon = new int[]{
                0x00000000, 0x000000FF, 0x111111FF, 0x222222FF, 0x333333FF, 0x444444FF, 0x555555FF, 0x666666FF,
                0x777777FF, 0x888888FF, 0x999999FF, 0xAAAAAAFF, 0xBBBBBBFF, 0xCCCCCCFF, 0xDDDDDDFF, 0xEEEEEEFF,
                0xFFFFFFFF, 0x862100FF, 0xAA2B00FF, 0xC73200FF, 0xE63800FF, 0xFF3E00FF, 0xFF5C00FF, 0xFF8031FF,
                0xFFA06CFF, 0x9F001CFF, 0xD10020FF, 0xF90027FF, 0xFF002DFF, 0xFF003AFF, 0xFE456BFF, 0xFF6981FF,
                0xFF8998FF, 0x4B0A2CFF, 0x6B0B3CFF, 0x860D4AFF, 0xA10D58FF, 0xBB0B6AFF, 0xDA0879FF, 0xF90088FF,
                0xFF4099FF, 0x640930FF, 0x860941FF, 0xA30A4FFF, 0xC1095DFF, 0xDB146BFF, 0xFB137BFF, 0xFF498BFF,
                0xFF709DFF, 0x800D3EFF, 0xA50D50FF, 0xC20C5EFF, 0xE10B6DFF, 0xFF077DFF, 0xFF508EFF, 0xFF75A0FF,
                0xFF94B2FF, 0x9E003DFF, 0xC9004AFF, 0xEA0059FF, 0xFF0062FF, 0xFF0070FF, 0xFE7191FF, 0xFD90A8FF,
                0xFEAFBCFF, 0x962F2EFF, 0xBC393BFF, 0xDF3D3DFF, 0xF94B4CFF, 0xFF5353FF, 0xFF716BFF, 0xFF9A8FFF,
                0xFFBAB4FF, 0x735811FF, 0x8D6C13FF, 0xA47D0AFF, 0xB88C14FF, 0xCD9E1EFF, 0xE4AE10FF, 0xFBC01DFF,
                0xFFD672FF, 0x5C4300FF, 0x795400FF, 0x8D6200FF, 0xA37100FF, 0xB2831AFF, 0xBD9548FF, 0xC2AA73FF,
                0xD0BC90FF, 0x5F2336FF, 0x7E2D47FF, 0x983656FF, 0xB23F65FF, 0xCD466EFF, 0xE6547EFF, 0xFF5C8EFF,
                0xFF669EFF, 0x2D2C3EFF, 0x3D3C55FF, 0x4D4868FF, 0x5C5779FF, 0x6E648EFF, 0x7D739FFF, 0x8B82B5FF,
                0x9992CCFF, 0x0E4341FF, 0x0E5A55FF, 0x146A64FF, 0x1B7C74FF, 0x0D9085FF, 0x14A296FF, 0x1BB5A7FF,
                0x00D9CCFF, 0x095744FF, 0x006E58FF, 0x158062FF, 0x1D9372FF, 0x0AA883FF, 0x13BB93FF, 0x1ACFA4FF,
                0x00F6ABFF, 0x256A0DFF, 0x31820FFF, 0x33981AFF, 0x3AAD12FF, 0x00D200FF, 0x00DD00FF, 0x62E64DFF,
                0x93F085FF, 0x4C7C0BFF, 0x4C990CFF, 0x59AE1AFF, 0x7EBD0DFF, 0xA5CB1AFF, 0xCFD521FF, 0xF7E10FFF,
                0xFFF39BFF, 0x692B0EFF, 0x89370FFF, 0xA24417FF, 0xBF4C12FF, 0xD85718FF, 0xF26420FF, 0xFC7C45FF,
                0xF99A72FF, 0x5E121EFF, 0x821323FF, 0x9C192AFF, 0xBA1A31FF, 0xDA1939FF, 0xF52246FF, 0xFF284DFF,
                0xFF2F55FF, 0x4D0825FF, 0x6D0934FF, 0x880B42FF, 0xA30A4FFF, 0xBF015CFF, 0xDB146BFF, 0xFA1079FF,
                0xFF488AFF, 0x391B4BFF, 0x502667FF, 0x632E7FFF, 0x753995FF, 0x8A41B0FF, 0x9D4CC7FF, 0xB354E4FF,
                0xC860FCFF, 0x472864FF, 0x5F3482FF, 0x724099FF, 0x844CB5FF, 0x9A55CCFF, 0xAE61EBFF, 0xC26DFFFF,
                0xD679FFFF, 0x47299BFF, 0x5D33C8FF, 0x6F3FE8FF, 0x8048FFFF, 0x8F4EFFFF, 0xA25BFFFF, 0xAD98FEFF,
                0xB9AFFFFF, 0x8A006EFF, 0xB20089FF, 0xCF009EFF, 0xF000B5FF, 0xFF00CDFF, 0xFF00E5FF, 0xFF81D3FF,
                0xFFA3DBFF, 0x165F93FF, 0x2774B6FF, 0x2B87D0FF, 0x2E9AEAFF, 0x39AAFFFF, 0x3CBEFFFF, 0x5DD0FFFF,
                0x90E2FFFF, 0x003AADFF, 0x004BDBFF, 0x0058FFFF, 0x0065FFFF, 0x0074FFFF, 0x5F9AFEFF, 0x7CABFFFF,
                0x95BFFFFF, 0x1A00A8FF, 0x2400E5FF, 0x2A22FFFF, 0x3346FFFF, 0x4362FFFF, 0x5578FFFF, 0x6A8CFFFF,
                0x80A0FFFF, 0x180882FF, 0x4D00FFFF, 0x6000FFFF, 0x3128FEFF, 0x3B48FFFF, 0x4B63FDFF, 0x5E78FDFF,
                0x738CFCFF, 0x186556FF, 0x177E6BFF, 0x05937CFF, 0x13A78EFF, 0x1CBBA0FF, 0x23CFB1FF, 0x29E3C3FF,
                0x0FFAD5FF, 0x167468FF, 0x138E7EFF, 0x1DA290FF, 0x02B8A3FF, 0x11CCB4FF, 0x00E2C6FF, 0x00F8DAFF,
                0x7EFFEBFF,

                0x48384840, 0x50405040, 0x58485840, 0x60506040, 0x68586840, 0x70607040, 0x78687840,
                0x80708040, 0x88788840, 0x90809040, 0x98889840, 0xA070A040, 0xA860A840, 0xB050B040, 0xB840B840,
        };

        int[] buzzer = new int[]{
                0x00000000, 0x000000FF, 0x111111FF, 0x222222FF, 0x333333FF, 0x444444FF, 0x555555FF, 0x666666FF,
                0x777777FF, 0x888888FF, 0x999999FF, 0xAAAAAAFF, 0xBBBBBBFF, 0xCCCCCCFF, 0xDDDDDDFF, 0xEEEEEEFF,
                0xFFFFFFFF, 0x4D0A29FF, 0x6D0C39FF, 0x880E47FF, 0xA40F54FF, 0xBF0B62FF, 0xDE0971FF, 0xFA1580FF,
                0xFF4A91FF, 0x88002AFF, 0xB60035FF, 0xDC0042FF, 0xFF004FFF, 0xFF0057FF, 0xFF0065FF, 0xFF4D86FF,
                0xFE7397FF, 0x752131FF, 0x972B42FF, 0xB52F4BFF, 0xD03759FF, 0xEE3F63FF, 0xFF4871FF, 0xFF4F7AFF,
                0xFF7291FF, 0x7A3F25FF, 0x9B4D2AFF, 0xB55A33FF, 0xCE673AFF, 0xE77341FF, 0xEC8E67FF, 0xEDA88BFF,
                0xECC1AFFF, 0x795814FF, 0x946C16FF, 0xAB7D0FFF, 0xBE8D18FF, 0xD69D09FF, 0xEBAE16FF, 0xFFB100FF,
                0xFFD344FF, 0xAE003AFF, 0xDF004BFF, 0xFF005AFF, 0xFF0068FF, 0xFF0076FF, 0xFF5D93FF, 0xFE80A5FF,
                0xFE9FB8FF, 0x860045FF, 0xB10057FF, 0xD50069FF, 0xF80079FF, 0xFF008EFF, 0xFF009DFF, 0xFE60A6FF,
                0xFE83B3FF, 0x4B144BFF, 0x661C67FF, 0x7B2280FF, 0x952695FF, 0xAD2EACFF, 0xC730C7FF, 0xE037DEFF,
                0xF93EFCFF, 0x381646FF, 0x511E62FF, 0x652576FF, 0x792C8FFF, 0x9035A6FF, 0xA63BC0FF, 0xBC42DDFF,
                0xD14EF5FF, 0x20005EFF, 0x31008CFF, 0x4100B9FF, 0x5100E4FF, 0x6300FFFF, 0x7500FFFF, 0x8500FFFF,
                0x7C5DFFFF, 0x2D2545FF, 0x3C3460FF, 0x4A3F78FF, 0x5B4B8EFF, 0x6959A5FF, 0x7965C0FF, 0x8B71D7FF,
                0x9A80F0FF, 0x006A5EFF, 0x168173FF, 0x009785FF, 0x0FAB97FF, 0x00C1A9FF, 0x00D5BBFF, 0x00E9CDFF,
                0x00FEE0FF, 0x116862FF, 0x0C8178FF, 0x17958AFF, 0x1FA99CFF, 0x00BFB4FF, 0x00D3C6FF, 0x00F6E6FF,
                0x00FBF0FF, 0x175767FF, 0x206E82FF, 0x227F98FF, 0x2992ABFF, 0x2BA5C3FF, 0x3AB7DBFF, 0x5AC7E8FF,
                0x89D5EFFF, 0x2E2D7EFF, 0x413C9FFF, 0x4A48C0FF, 0x5554E3FF, 0x6560FFFF, 0x706CFFFF, 0x8178FFFF,
                0x9BA3FFFF, 0x16344EFF, 0x254666FF, 0x29557BFF, 0x356491FF, 0x3A75A8FF, 0x4585BFFF, 0x5294D7FF,
                0x56A7EFFF, 0x1E1A4CFF, 0x2D266CFF, 0x3A2E89FF, 0x4837A8FF, 0x5640CAFF, 0x614CE7FF, 0x7155FFFF,
                0x8160FFFF, 0x35002EFF, 0x570048FF, 0x72005DFF, 0x910074FF, 0xB1008DFF, 0xCE00A6FF, 0xEF00C0FF,
                0xFF00DCFF, 0x3C0824FF, 0x5C0037FF, 0x750044FF, 0x8C0D52FF, 0xA70D65FF, 0xC30973FF, 0xE10082FF,
                0xFB1196FF, 0x550929FF, 0x750A38FF, 0x910C46FF, 0xAE0B54FF, 0xCA0361FF, 0xE61571FF, 0xFF2680FF,
                0xFF5791FF, 0x6C052FFF, 0x910741FF, 0xAD034EFF, 0xCA1158FF, 0xE91167FF, 0xFE2B75FF, 0xFE5A8BFF,
                0xFF7B9DFF, 0x79231FFF, 0x9C2C2AFF, 0xBA332BFF, 0xD53D39FF, 0xF44239FF, 0xFF4B41FF, 0xFF6657FF,
                0xFF8D7CFF, 0x744A00FF, 0x8E5D00FF, 0xA76B0DFF, 0xBC7C17FF, 0xD48C0BFF, 0xFF8400FF, 0xFFA400FF,
                0xFFC05DFF, 0x6C6D00FF, 0x7D8700FF, 0x879D11FF, 0xA7AB00FF, 0xC5B809FF, 0xDEC716FF, 0xFFD622FF,
                0xFEEC9EFF, 0x4C6E0CFF, 0x5A880DFF, 0x679C19FF, 0x77AF0FFF, 0x83C319FF, 0x93D600FF, 0x81F600FF,
                0xB2FD4CFF, 0x006A00FF, 0x008500FF, 0x009C00FF, 0x00AA34FF, 0x00B551FF, 0x2FC36EFF, 0x64D08AFF,
                0x8ADCADFF, 0x11493EFF, 0x105F51FF, 0x197261FF, 0x0A8571FF, 0x119780FF, 0x1AAB91FF, 0x00CCA3FF,
                0x00D6B3FF, 0x0B3930FF, 0x074E42FF, 0x105F51FF, 0x0A725BFF, 0x00926CFF, 0x00A07AFF, 0x00AC89FF,
                0x1ABA9EFF,

                0x48384840, 0x50405040, 0x58485840, 0x60506040, 0x68586840, 0x70607040, 0x78687840,
                0x80708040, 0x88788840, 0x90809040, 0x98889840, 0xA070A040, 0xA860A840, 0xB050B040, 0xB840B840,
        };

        int[] hyper = {
                0x00000000,
                0x000000FF, 0x0000FFFF, 0x00FF00FF, 0x00FFFFFF, 0xFF0000FF, 0xFF00FFFF, 0xFFFF00FF, 0xFFFFFFFF
        };;

        int[] mmmmanos = {
                0x00000000, 0x19092DFF, 0x213118FF, 0x314A29FF, 0x8C847BFF, 0x6E868EFF, 0x9CA59CFF, 0xAFC7CFFF,
                0xD6F7D6FF, 0xFBD7EBFF, 0xFDFBE3FF, 0xE73129FF, 0x7B2921FF, 0xE79C94FF, 0xBF4529FF, 0xE35A00FF,
                0xAD6329FF, 0xE78431FF, 0x4A2D11FF, 0xD39A5EFF, 0xFFAA4DFF, 0xF7CF9EFF, 0xA58C29FF, 0xFBE76AFF,
                0xBDB573FF, 0x6B7321FF, 0x8CAD29FF, 0xC7FF2DFF, 0x96DF1DFF, 0xBFEF94FF, 0x296318FF, 0x62FF39FF,
                0x39C621FF, 0x319421FF, 0x4AEF31FF, 0x39AD5AFF, 0x49FF8AFF, 0x319E7AFF, 0x296B5AFF, 0x49B39AFF,
                0x52F7DEFF, 0xA5DEDEFF, 0x39BDC6FF, 0x52CEEFFF, 0x42A5C6FF, 0x396B9CFF, 0x29426BFF, 0x394ABDFF,
                0x2910DEFF, 0x29189CFF, 0x21105AFF, 0x6329E7FF, 0x9C84CEFF, 0x8A49DBFF, 0xCEADE7FF, 0x9C29B5FF,
                0x6B1873FF, 0xD631DEFF, 0xE773D6FF, 0xA52973FF, 0xE7298CFF, 0xCF1562FF, 0x845A6BFF, 0xD66B7BFF,

                0x000000FF, 0x19092DFF, 0x213118FF, 0x314A29FF, 0x8C847BFF, 0x6E868EFF, 0x9CA59CFF, 0xAFC7CFFF,
                0xD6F7D6FF, 0xFBD7EBFF, 0xFDFBE3FF, 0xE73129FF, 0x7B2921FF, 0xE79C94FF, 0xBF4529FF, 0xE35A00FF,
                0xAD6329FF, 0xE78431FF, 0x4A2D1100, 0xD39A5EFF, 0xFFAA4DFF, 0xF7CF9EFF, 0xA58C29FF, 0xFBE76AFF,
                0xBDB573FF, 0x6B7321FF, 0x8CAD2900, 0xC7FF2DFF, 0x96DF1DFF, 0xBFEF94FF, 0x296318FF, 0x62FF39FF,
                0x39C62100, 0x319421FF, 0x4AEF31FF, 0x39AD5A00, 0x49FF8A00, 0x319E7AFF, 0x296B5AFF, 0x49B39A00,
                0x52F7DEFF, 0xA5DEDEFF, 0x39BDC6FF, 0x52CEEFFF, 0x42A5C6FF, 0x396B9CFF, 0x29426B00, 0x394ABDFF,
                0x2910DEFF, 0x29189C00, 0x21105AFF, 0x6329E7FF, 0x9C84CEFF, 0x8A49DB00, 0xCEADE7FF, 0x9C29B5FF,
                0x6B1873FF, 0xD631DE00, 0xE773D600, 0xA52973FF, 0xE7298CFF, 0xCF1562FF, 0x845A6B00, 0xD66B7BFF,

                0x000000FF, 0x19092DFF, 0x213118FF, 0x314A29FF, 0x8C847BFF, 0x6E868EFF, 0x9CA59CFF, 0xAFC7CFFF,
                0xD6F7D6FF, 0xFBD7EBFF, 0xFDFBE3FF, 0xE73129FF, 0x7B2921FF, 0xE79C94FF, 0xBF4529FF, 0xE35A00FF,
                0xAD6329FF, 0xE78431FF, 0x4A2D11FF, 0xD39A5EFF, 0xFFAA4DFF, 0xF7CF9EFF, 0xA58C29FF, 0xFBE76AFF,
                0xBDB573FF, 0x6B7321FF, 0x8CAD29FF, 0xC7FF2DFF, 0x96DF1DFF, 0xBFEF94FF, 0x296318FF, 0x62FF39FF,
                0x39C621FF, 0x319421FF, 0x4AEF31FF, 0x39AD5AFF, 0x49FF8AFF, 0x319E7AFF, 0x296B5AFF, 0x49B39AFF,
                0x52F7DEFF, 0xA5DEDEFF, 0x39BDC6FF, 0x52CEEFFF, 0x42A5C6FF, 0x396B9CFF, 0x29426BFF, 0x394ABDFF,
                0x2910DEFF, 0x29189CFF, 0x21105AFF, 0x6329E7FF, 0x9C84CEFF, 0x8A49DBFF, 0xCEADE7FF, 0x9C29B5FF,
                0x6B1873FF, 0xD631DEFF, 0xE773D6FF, 0xA52973FF, 0xE7298CFF, 0xCF1562FF, 0x845A6BFF, 0xD66B7BFF,

                0x000000FF, 0x19092DFF, 0x213118FF, 0x314A29FF, 0x8C847BFF, 0x6E868EFF, 0x9CA59CFF, 0xAFC7CFFF,
                0xD6F7D6FF, 0xFBD7EBFF, 0xFDFBE3FF, 0xE73129FF, 0x7B2921FF, 0xE79C94FF, 0xBF4529FF, 0xE35A00FF,
                0xAD6329FF, 0xE78431FF, 0x4A2D11FF, 0xD39A5EFF, 0xFFAA4DFF, 0xF7CF9EFF, 0xA58C29FF, 0xFBE76AFF,
                0xBDB573FF, 0x6B7321FF, 0x8CAD29FF, 0xC7FF2DFF, 0x96DF1DFF, 0xBFEF94FF, 0x296318FF, 0x62FF39FF,
                0x39C621FF, 0x319421FF, 0x4AEF31FF, 0x39AD5AFF, 0x49FF8AFF, 0x319E7AFF, 0x296B5AFF, 0x49B39AFF,
                0x52F7DEFF, 0xA5DEDEFF, 0x39BDC6FF, 0x52CEEFFF, 0x42A5C6FF, 0x396B9CFF, 0x29426BFF, 0x394ABDFF,
                0x2910DEFF, 0x29189CFF, 0x21105AFF, 0x6329E7FF, 0x9C84CEFF, 0x8A49DBFF, 0xCEADE7FF, 0x9C29B5FF,
                0x6B1873FF, 0xD631DEFF, 0xE773D6FF, 0xA52973FF, 0xE7298CFF, 0xCF1562FF, 0x845A6BFF, 0xD66B7BFF,
        };

        int[] dogey = {
                0x00000000, 0x000000FF, 0xFFFFFFFF, 0x888888FF, 0x444444FF, 0xCCCCCCFF, 0x222222FF, 0xAAAAAAFF,
                0x666666FF, 0xEEEEEEFF, 0x111111FF, 0x999999FF, 0x555555FF, 0xDDDDDDFF, 0x333333FF, 0xBBBBBBFF,
                0x777777FF, 0x5F3700FF, 0x6D7597FF, 0xF6A07BFF, 0x9800E8FF, 0xFF0000FF, 0xBCC9C9FF, 0x3C00A7FF,
                0x605244FF, 0x0086FFFF, 0x00FF44FF, 0x7C0014FF, 0x007C74FF, 0xDDE1F7FF, 0x1E0600FF, 0x2E3941FF,
                0x008425FF, 0xFF00FFFF, 0x131C00FF, 0x97723EFF, 0x5EB9FFFF, 0x370A25FF, 0xCC0031FF, 0x619089FF,
                0xFFB900FF, 0x080020FF, 0x2B5D79FF, 0x00CA00FF, 0x003B49FF, 0x61673DFF, 0xBE52FFFF, 0xFFDA8AFF,
                0x134330FF, 0xFF00B3FF, 0xD09E9CFF, 0x97FFFFFF, 0x181335FF, 0x831D00FF, 0x520000FF, 0x415255FF,
                0x639B25FF, 0xF6A2FFFF, 0x3300F0FF, 0x007651FF, 0xF7CDD5FF, 0x000F0EFF, 0x5A00FFFF, 0x001800FF,
                0x7C00ADFF, 0x8A6562FF, 0x46C4D6FF, 0xF5FF09FF, 0x310F00FF, 0x003AC1FF, 0x4B8F6DFF, 0xFF61F9FF,
                0x57512CFF, 0x822FFFFF, 0xDCCBBEFF, 0x003B00FF, 0x7C4677FF, 0x34F7FFFF, 0x451C64FF, 0xA35100FF,
                0x98A5BDFF, 0x4BFFDFFF, 0x5E2A35FF, 0x00938DFF, 0xF1A700FF, 0x001F3AFF, 0x394F35FF, 0xFF896EFF,
                0x9300FFFF, 0xBCD3F2FF, 0xB41D2FFF, 0x00C3D9FF, 0xE1E795FF, 0x170041FF, 0x651A00FF, 0x4EC37EFF,
                0xFFDAFFFF, 0x004973FF, 0x009400FF, 0xCAA3DDFF, 0x731A40FF, 0xFF0065FF, 0x8BC6BDFF, 0x2600A4FF,
                0x6C3E27FF, 0x0099FCFF, 0x00FF00FF, 0x431514FF, 0x006B7FFF, 0x8D9478FF, 0xD9CCFAFF, 0x212F42FF,
                0x453700FF, 0x6364A1FF, 0xFF4300FF, 0xD8F7FFFF, 0x370039FF, 0xAE0000FF, 0x6B7E82FF, 0x9CD13BFF,
                0x0000FFFF, 0x00B36EFF, 0xF0B6CFFF, 0x100005FF, 0x00332EFF, 0x7F8CDEFF, 0xFFBA7BFF, 0x093B0FFF,
                0xD600FFFF, 0xCE8D84FF, 0x51FFFFFF, 0x8E6533FF, 0x2FABFFFF, 0x2E4A4BFF, 0x928000FF, 0xB9A4FFFF,
                0x102232FF, 0x006D00FF, 0xB36EA7FF, 0xFEBAA1FF, 0xB100FFFF, 0xE67B00FF, 0x820036FF, 0x825761FF,
                0x25BCADFF, 0xFFE528FF, 0x0E1024FF, 0x830000FF, 0x0080D7FF, 0x434C0DFF, 0xE6B785FF, 0xF14D63FF,
                0x00FFFFFF, 0x4100D0FF, 0xB42100FF, 0x57A0D6FF, 0x00FF30FF, 0x1F001EFF, 0x397082FF, 0x52CA00FF,
                0x2200FFFF, 0x4C7E71FF, 0xFF45C4FF, 0x201C0CFF, 0x6B00FFFF, 0x9F7863FF, 0x00D6FFFF, 0x331935FF,
                0xE00000FF, 0x00ADE4FF, 0xC8D8B6FF, 0x4A2000FF, 0x3F5F8EFF, 0x00D06FFF, 0xFFBFEBFF, 0x756F00FF,
                0xFDECDFFF, 0xC42CA6FF, 0xFF6800FF, 0x2F004BFF, 0x516FDDFF, 0x00F3BDFF, 0x50001AFF, 0x006250FF,
                0x928355FF, 0xA0BEFFFF, 0x39631FFF, 0xE6D0CBFF, 0x2F3300FF, 0x6646BCFF, 0xB8E9FFFF, 0x55204AFF,
                0xFF0024FF, 0x91B3AEFF, 0xFDF6ADFF, 0x004896FF, 0x00AB00FF, 0xE20073FF, 0xA8898FFF, 0x58F7E5FF,
                0x282B56FF, 0x00B5FFFF, 0xC3F8BEFF, 0x250030FF, 0xA7B952FF, 0xFBEFFFFF, 0x001547FF, 0x005E2AFF,
                0xB35B90FF, 0xFF7B8BFF, 0x4E2EBCFF, 0xBBCEE0FF, 0x620059FF, 0x844833FF, 0x4DFF00FF, 0x3E3010FF,
                0x3900FFFF, 0x7AB1A2FF, 0xFFD6EAFF, 0x31000FFF, 0x9E6700FF, 0x849FFFFF, 0x514059FF, 0xF03032FF,
                0x3C0092FF, 0x913200FF, 0x63F0B1FF, 0x3A2425FF, 0x0D6A69FF, 0xBE9800FF, 0x003577FF, 0xF469EAFF,
                0xFFDFCEFF, 0x2B4900FF, 0xD4AD64FF, 0x7D293CFF, 0x00A79EFF, 0xCCC4A2FF, 0x3B5868FF, 0x163136FF,
                0x4D6C00FF, 0xA094BEFF, 0xFFD26EFF, 0x00072FFF, 0xFF009DFF, 0xFF264EFF, 0x8C7053FF, 0x390000FF,
                0xD1A6EEFF, 0x16584AFF, 0xFF007FFF, 0xE4BBC3FF, 0x362200FF, 0x51556AFF, 0xE36E34FF, 0x51EAFFFF,
        };

        int[] doger = {
                0x00000000, 0x000000FF, 0xFFFFFFFF, 0x888888FF, 0x444444FF, 0xCCCCCCFF, 0x222222FF, 0xAAAAAAFF,
                0x666666FF, 0xEEEEEEFF, 0x111111FF, 0x999999FF, 0x555555FF, 0xDDDDDDFF, 0x333333FF, 0xBBBBBBFF,
                0x777777FF, 0x001D16FF, 0x5F3700FF, 0x596ED1FF, 0xFF7200FF, 0x9800E8FF, 0xFF0000FF, 0x99D2D6FF,
                0x3C00A7FF, 0x704C23FF, 0x0083FFFF, 0x00FF44FF, 0x7C0014FF, 0x007B79FF, 0xA6A05FFF, 0xDBDBFFFF,
                0x200300FF, 0x173B51FF, 0x009600FF, 0xFF00FFFF, 0xFFE6DFFF, 0x101D00FF, 0xC75A00FF, 0x66B7FFFF,
                0x4F002DFF, 0xCB0036FF, 0x1F9A8FFF, 0xFFB900FF, 0x080020FF, 0x0062ACFF, 0x00CA00FF, 0xF2C5F6FF,
                0x003B49FF, 0x5B6E00FF, 0xC64BFFFF, 0xFFDA8AFF, 0x004E24FF, 0xFF00B3FF, 0xF58A8FFF, 0x94FFFFFF,
                0x27007AFF, 0x871600FF, 0x99CBA9FF, 0x4F0000FF, 0x2B5562FF, 0x30A900FF, 0xF3A5FFFF, 0x3300F0FF,
                0x007651FF, 0xD0759AFF, 0xFFB9D3FF, 0x3B3110FF, 0x5D00FFFF, 0xCBEFFEFF, 0x7C00ADFF, 0xB84946FF,
                0x00DAFFFF, 0xF5FF09FF, 0x2F1100FF, 0x003CBDFF, 0x00AC41FF, 0xFF60FFFF, 0x654F00FF, 0x862AFFFF,
                0xF3C3A5FF, 0x003A00FF, 0x9B1298FF, 0x34F7FFFF, 0x6100BDFF, 0xA64F00FF, 0x82A4E9FF, 0x40FFD9FF,
                0x330018FF, 0xA40025FF, 0x009488FF, 0xF1A700FF, 0x001F3AFF, 0x1B571AFF, 0xFF896EFF, 0x9400FFFF,
                0x9D8A74FF, 0x91D6FFFF, 0x481833FF, 0x00C3D4FF, 0xFFE900FF, 0x170041FF, 0x651A00FF, 0x496D8DFF,
                0x00E500FF, 0xFFDAFFFF, 0x004A73FF, 0xA70044FF, 0xFF0065FF, 0x39D6BEFF, 0x2600A4FF, 0xA90000FF,
                0x0099FCFF, 0x00FF00FF, 0x6C0000FF, 0x92973EFF, 0xD9C2FFFF, 0x008324FF, 0x5E50E9FF, 0xFF3D00FF,
                0x35003CFF, 0x468692FF, 0x87DD00FF, 0x0000FFFF, 0x00B568FF, 0xFF89DDFF, 0x00332EFF, 0x6D5EFFFF,
                0xFFBA7BFF, 0xD600FFFF, 0xFC725EFF, 0x5EFFFFFF, 0x402E5CFF, 0x2CAAFFFF, 0xDEFFECFF, 0x094F50FF,
                0x928000FF, 0xB9A4FFFF, 0x00214EFF, 0x006D00FF, 0xE432CCFF, 0xFFA278FF, 0xB100FFFF, 0xE67B00FF,
                0x810039FF, 0xAB385AFF, 0x00D3B6FF, 0xFFE646FF, 0x0080D7FF, 0x85C479FF, 0x454E00FF, 0xFF9000FF,
                0x7C3562FF, 0xFF0028FF, 0x00FFFFFF, 0x4100D0FF, 0xB42100FF, 0x00FF30FF, 0x1F001EFF, 0x462C25FF,
                0x007CAFFF, 0x52CA00FF, 0x00986AFF, 0xFF3EC4FF, 0xBF692EFF, 0x52005AFF, 0xE00000FF, 0x00ADE4FF,
                0xBEE272FF, 0x4A2000FF, 0x1959C1FF, 0x00D175FF, 0x756F00FF, 0xFFE9BDFF, 0x234831FF, 0xFF00E6FF,
                0x4A402EFF, 0x4100FFFF, 0x00F3BDFF, 0x006250FF, 0xC17300FF, 0xA0BEFFFF, 0xF7C9C4FF, 0xFF5A00FF,
                0x860067FF, 0x5BBFBBFF, 0x004992FF, 0x00AB00FF, 0xDAA8D9FF, 0x43551EFF, 0xE00077FF, 0xD67087FF,
                0x241487FF, 0x00B5FFFF, 0x57FF48FF, 0x5B7476FF, 0x98C600FF, 0xFF00C9FF, 0x7B00FFFF, 0xA6D1F9FF,
                0x4DFF00FF, 0x2ABF9EFF, 0xA26500FF, 0x849FFFFF, 0x652B74FF, 0x3C0092FF, 0x8E3500FF, 0x658FBDFF,
                0x00FF70FF, 0x4D151CFF, 0xBC9900FF, 0x003673FF, 0x43764EFF, 0x254A00FF, 0xC80020FF, 0x00A89EFF,
                0xD9C55DFF, 0xAD83ECFF, 0xFFD35DFF, 0x000432FF, 0xFF009DFF, 0xFF2955FF, 0xA76523FF, 0x6D7F5CFF,
                0xFF0084FF, 0xFF8EBFFF, 0x3B4CADFF, 0x630090FF, 0x0059FFFF, 0x00EA4DFF, 0xB200B9FF, 0xDC5E42FF,
                0x370B58FF, 0xA1EBD1FF, 0x29716CFF, 0xDC9500FF, 0xD493DAFF, 0x6A4443FF, 0x00AEC1FF, 0xEAD600FF,
                0x005BD7FF, 0x1CB662FF, 0x168000FF, 0xF118FFFF, 0x004E3CFF, 0xFF4395FF, 0x248CB6FF, 0x00667FFF,
                0x869C00FF, 0x001E83FF, 0x2B6C4EFF, 0xD49866FF, 0x641960FF, 0x274393FF, 0x794BFFFF, 0xB7ECF7FF,
        };

        int[] dogel = {
                0x00000000, 0x000000FF, 0xFFFFFFFF, 0x888888FF, 0x444444FF, 0xCCCCCCFF, 0x222222FF, 0xAAAAAAFF,
                0x666666FF, 0xEEEEEEFF, 0x111111FF, 0x999999FF, 0x555555FF, 0xDDDDDDFF, 0x333333FF, 0xBBBBBBFF,
                0x777777FF, 0x5F3700FF, 0x6B759BFF, 0xFC9D74FF, 0x9800E8FF, 0xFF0000FF, 0x3E00A2FF, 0x61513FFF,
                0x0083FFFF, 0x00FF50FF, 0x7C0014FF, 0x007C74FF, 0xDBE1FEFF, 0x1E0600FF, 0x283A45FF, 0x009600FF,
                0xFF00FFFF, 0x131C00FF, 0x9A7130FF, 0x5EB9FFFF, 0x390625FF, 0xCC0031FF, 0x5B9189FF, 0xFFB900FF,
                0x080020FF, 0x245E79FF, 0x00C700FF, 0x003A4CFF, 0x5E6837FF, 0xC64BFFFF, 0xFFDA8AFF, 0x134330FF,
                0xFF00B7FF, 0xD49C9CFF, 0xA4FFFFFF, 0x1A1038FF, 0x831D00FF, 0x520000FF, 0x3F5259FF, 0x669B17FF,
                0xF1A4FFFF, 0x3300F0FF, 0x007555FF, 0xA98C97FF, 0xFCCBD5FF, 0x5A00FFFF, 0x7C00ADFF, 0x90635DFF,
                0x39C6D6FF, 0xF0FF3CFF, 0x310F00FF, 0x003AC1FF, 0x3E9168FF, 0xFF61F9FF, 0x555327FF, 0x862AFFFF,
                0xDCCBBEFF, 0x003A00FF, 0x80407FFF, 0x18F9FFFF, 0x46166BFF, 0xA35100FF, 0x94A4C8FF, 0x4BFFDFFF,
                0x612835FF, 0x00938DFF, 0xEDA900FF, 0x002037FF, 0x345135FF, 0xFF896EFF, 0x9300FFFF, 0xBAD3F8FF,
                0x00C3D4FF, 0xE6E686FF, 0x651A00FF, 0x3CC678FF, 0xFFDAFFFF, 0x004973FF, 0xCCA1E8FF, 0x76163FFF,
                0xFF0060FF, 0x84C8BDFF, 0x2600A4FF, 0x713C21FF, 0x0099FCFF, 0x00FF00FF, 0x451214FF, 0x006B7FFF,
                0x91946CFF, 0xD9C2FFFF, 0x008324FF, 0x483500FF, 0x6561AAFF, 0xFF3D00FF, 0xD8F7FFFF, 0x370039FF,
                0xAB0000FF, 0x697E87FF, 0x9BD21FFF, 0x0000FFFF, 0x00B36EFF, 0xF5B3CFFF, 0x00332EFF, 0x7B8AE9FF,
                0xFFBA7BFF, 0xD700FFFF, 0xD8887EFF, 0x51FFFFFF, 0x2FABFFFF, 0x928000FF, 0xBEA1FFFF, 0x006D00FF,
                0xBC66ACFF, 0xB100FFFF, 0xE67B00FF, 0x820036FF, 0x00D3B6FF, 0xFFE528FF, 0x7E0000FF, 0x007EE1FF,
                0x454E00FF, 0xEAB677FF, 0xF9445DFF, 0x00FFFFFF, 0x4100D0FF, 0xB42100FF, 0x4CA1DCFF, 0x1F001EFF,
                0x2E7187FF, 0x57C900FF, 0x2200FFFF, 0x487F6CFF, 0xFF45C4FF, 0xA67557FF, 0x00D6FFFF, 0x341739FF,
                0xE00000FF, 0x00ADE4FF, 0xCDD8A9FF, 0x4A2000FF, 0x3D5F93FF, 0x00D175FF, 0xFFBFEBFF, 0x756F00FF,
                0xFDECDFFF, 0xC91FABFF, 0xFF6900FF, 0x2F004EFF, 0x4E6DE7FF, 0x00F3BDFF, 0x50001AFF, 0x968348FF,
                0xA0BEFFFF, 0x33641FFF, 0x323100FF, 0x6740CAFF, 0xB8E9FFFF, 0x5A1B4AFF, 0xFF0024FF, 0x89B5B4FF,
                0x004896FF, 0x00AB00FF, 0xE00077FF, 0x33FBECFF, 0x26295DFF, 0x00B5FFFF, 0xC0F9B8FF, 0xA4BA4AFF,
                0x00124DFF, 0x005E2FFF, 0xBC5394FF, 0xFF7B8BFF, 0x5126C5FF, 0xBBCEE0FF, 0x620059FF, 0x8B432DFF,
                0x4DFF00FF, 0x73B2A2FF, 0xFFD6EAFF, 0x31000FFF, 0x9E6700FF, 0x849FFFFF, 0x002400FF, 0x533E5DFF,
                0xF82129FF, 0x913200FF, 0x51F4ABFF, 0x3C2325FF, 0x0D6A69FF, 0xBC9900FF, 0x003577FF, 0xFFDFCEFF,
                0x1F4B00FF, 0xD9AC55FF, 0x00A899FF, 0xC9C59BFF, 0x34596CFF, 0x4B6D00FF, 0xA391C3FF, 0xFFD165FF,
                0xFF009DFF, 0xFF2955FF, 0x00624CFF, 0xFF007FFF, 0x4E5573FF, 0xE86A2BFF, 0x43ECFFFF, 0x630090FF,
                0x59AEB8FF, 0xE8F800FF, 0x1A6FC1FF, 0x00EA4DFF, 0x001F1EFF, 0x7E00FFFF, 0xFF8200FF, 0x112514FF,
                0xAF00BEFF, 0xB17768FF, 0x64DEFFFF, 0x4D6A66FF, 0xDC9500FF, 0xBDA4C0FF, 0xD45700FF, 0xA0C3EBFF,
                0x530032FF, 0x409B9EFF, 0xEAD600FF, 0x005ADBFF, 0x61AA79FF, 0x4B7427FF, 0x18006DFF, 0x004E3CFF,
                0xB64574FF, 0xFF439AFF, 0x140B4EFF, 0x5C869CFF, 0x819E00FF, 0xB4A291FF, 0x532F4EFF, 0x1F997DFF,
        };

        int[] dogette =
                {
                        0x00000000, 0x000000FF, 0xFFFFFFFF, 0x888888FF, 0x444444FF, 0xCCCCCCFF, 0x222222FF, 0xAAAAAAFF,
                        0x666666FF, 0xEEEEEEFF, 0x005B4AFF, 0xAF00FFFF, 0xE8B282FF, 0x3D007FFF, 0x74411EFF, 0x00B1A1FF,
                        0x6D0027FF, 0x326D00FF, 0x4FA0CEFF, 0xFFB9D3FF, 0xA04F00FF, 0xB339A3FF, 0xFF9700FF, 0xA7BFFDFF,
                        0x7500FFFF, 0xFF4D00FF, 0x58E9ECFF, 0xFF00FFFF, 0x0033FFFF, 0xF87C8EFF, 0x8FFF7DFF, 0x009400FF,
                        0x6CAAFFFF, 0x009BE5FF, 0x8981D8FF, 0xD00000FF, 0x833FD0FF, 0xAFC068FF, 0x004BB2FF, 0x9FDF2EFF,
                        0xFFD400FF, 0x00FF6EFF, 0x00E7FFFF, 0xAB00C7FF, 0xA97E3CFF, 0x0D1E65FF, 0x004100FF, 0x4356C6FF,
                        0xC59F00FF, 0xFDFF5EFF, 0xBB2850FF, 0x78C000FF, 0xD1FDAFFF, 0x2DB5FFFF, 0xFF76EEFF, 0x264D7CFF,
                        0xFF0044FF, 0x00FF00FF, 0x44D995FF, 0x4BFF70FF, 0x6E4399FF, 0xE26153FF, 0x6900ADFF, 0x4F9393FF,
                }
                ;
        //// also good
//        {
//            0x00000000, 0x000000FF, 0xFFFFFFFF, 0x888888FF, 0x444444FF, 0xCCCCCCFF, 0x222222FF, 0xAAAAAAFF,
//                    0x666666FF, 0xEEEEEEFF, 0x005B4AFF, 0xAF00FFFF, 0xE8B282FF, 0x3D007FFF, 0x74411EFF, 0x00B1A1FF,
//                    0xD9DB00FF, 0x6D0027FF, 0x326D00FF, 0x4FA0CEFF, 0xFFB9D3FF, 0xA04F00FF, 0x00C7FFFF, 0xB339A3FF,
//                    0xFF9700FF, 0xCB0000FF, 0xA7BFFDFF, 0x7500FFFF, 0xFF4D00FF, 0x58E9ECFF, 0xFF00FFFF, 0x0033FFFF,
//                    0xF87C8EFF, 0x8FFF7DFF, 0x009400FF, 0x6CAAFFFF, 0xFF7ADDFF, 0x8981D8FF, 0x00D069FF, 0x833FD0FF,
//                    0xAFC068FF, 0x004BB2FF, 0xFF0031FF, 0x9FDF2EFF, 0xAB00C7FF, 0xA97E3CFF, 0x0D1E65FF, 0x00CC00FF,
//                    0x004100FF, 0x4356C6FF, 0xC59F00FF, 0x007FCFFF, 0xFDFF5EFF, 0xBB2850FF, 0x78C000FF, 0x007683FF,
//                    0xFFD029FF, 0xD1FDAFFF, 0x4800CEFF, 0x264D7CFF, 0x44D995FF, 0x4BFF70FF, 0xFF1ABEFF, 0x6E4399FF,
//        };


//                {
//                        0x00000000, 0x000000FF, 0xFFFFFFFF, 0x888888FF, 0x444444FF, 0xCCCCCCFF, 0x222222FF, 0xAAAAAAFF,
//                        0x666666FF, 0xEEEEEEFF, 0x005B4AFF, 0xAC00FFFF, 0xE8B282FF, 0x3D0083FF, 0x74411EFF, 0x00B1A1FF,
//                        0xD9DB00FF, 0x6D0027FF, 0x326D00FF, 0x4FA0CEFF, 0xFFB9D3FF, 0xA04F00FF, 0x00C7FFFF, 0xB339A3FF,
//                        0xFF9700FF, 0xCB0000FF, 0xA7BFFDFF, 0x7500FFFF, 0xFF4D00FF, 0x4BEBEDFF, 0xFF00FFFF, 0x0033FFFF,
//                        0xF87C8EFF, 0x8BFF85FF, 0x009400FF, 0x6CAAFFFF, 0xFF7ADDFF, 0x8780DDFF, 0x00D069FF, 0x863AD4FF,
//                        0xAAC268FF, 0x004BB2FF, 0xFF0031FF, 0xA2DF1CFF, 0xAE00C2FF, 0xAB7E34FF, 0x0D1E65FF, 0x00CC00FF,
//                        0x004100FF, 0x4255CBFF, 0xC59F00FF, 0x007FCFFF, 0xFDFF5EFF, 0xBB2850FF, 0x78C000FF, 0x007683FF,
//                        0xFFD029FF, 0xD4FDA8FF, 0x4800CEFF, 0x264D7CFF, 0x44D995FF, 0x4BFF70FF, 0xFF1ABEFF, 0x6D429EFF,
//                }
//                ;
//                {
//                        0x00000000, 0x000000FF, 0xFFFFFFFF, 0x888888FF, 0x444444FF, 0xCCCCCCFF, 0x222222FF, 0xAAAAAAFF,
//                        0x666666FF, 0xEEEEEEFF, 0x5F3700FF, 0xFC9D74FF, 0x9800E8FF, 0xFF0000FF, 0x3E00A2FF, 0x0083FFFF,
//                        0x00FF44FF, 0x7D000FFF, 0x007B79FF, 0x008425FF, 0xFF00FFFF, 0x9C7127FF, 0x5EB9FFFF, 0xCC0031FF,
//                        0x4D9589FF, 0xFFB900FF, 0x00C700FF, 0x003B45FF, 0xC14CFFFF, 0xFFD889FF, 0xFF00B7FF, 0x97FFFFFF,
//                        0x669B17FF, 0xF6A2FFFF, 0x3300F0FF, 0x5A00FFFF, 0x7C00ADFF, 0x29C7D7FF, 0xF5FF09FF, 0x003DBDFF,
//                        0xFF61F3FF, 0x893883FF, 0x34F7FFFF, 0x46166BFF, 0x2DC878FF, 0xFF0060FF, 0x76CCBDFF, 0x00FF00FF,
//                        0x605FB9FF, 0xFF4300FF, 0x9BD21FFF, 0x7F88EEFF, 0x004200FF, 0x470000FF, 0xB5A7FFFF, 0xC85BB5FF,
//                        0xE67B00FF, 0xFC405DFF, 0xB42100FF, 0x52CA00FF, 0x00D6FFFF, 0xCC17ABFF, 0x4B6BF1FF, 0x00F3BDFF,
//                };
//                {
//                0x00000000, 0x000000FF, 0xFFFFFFFF, 0x888888FF, 0x444444FF, 0xCCCCCCFF, 0x222222FF, 0xAAAAAAFF,
//                0x666666FF, 0xEEEEEEFF, 0x5F3700FF, 0xFF7200FF, 0x9800E8FF, 0xFF0000FF, 0x3C00A7FF, 0x0087FFFF,
//                0x00FF37FF, 0x7C0014FF, 0x007B79FF, 0x009500FF, 0xFF00FFFF, 0x9C7127FF, 0x5EB9FFFF, 0xCC0031FF,
//                0x4D9589FF, 0xFFB900FF, 0x003A4CFF, 0xC64BFFFF, 0xFFD889FF, 0xFF00B3FF, 0xE39596FF, 0x9CFFFFFF,
//                0x45A600FF, 0xF6A2FFFF, 0x3300F0FF, 0x5A00FFFF, 0x7C00ADFF, 0x00DAFFFF, 0xF5FF09FF, 0x003CBDFF,
//                0xFF61F9FF, 0x883888FF, 0x34F7FFFF, 0x48116FFF, 0x22C972FF, 0xFF0060FF, 0x76CCBDFF, 0x00FF00FF,
//                0x5F5EBDFF, 0x78E000FF, 0x7D87F3FF, 0x004200FF, 0x470000FF, 0xB5A7FFFF, 0xC85BB5FF, 0x00D3B6FF,
//                0xFF3B5DFF, 0xB42100FF, 0xFF45C4FF, 0x756F00FF, 0x4A6AF6FF, 0x6B33DDFF, 0xFFF644FF, 0xB8FDABFF,
//        };
//                {
//                0x00000000, 0x000000FF, 0xFFFFFFFF, 0x888888FF, 0x444444FF, 0xCCCCCCFF, 0x222222FF, 0xAAAAAAFF,
//                0x666666FF, 0xEEEEEEFF, 0x5F3700FF, 0xFC9D74FF, 0x9800E8FF, 0xFF0000FF, 0x3E00A2FF, 0x0087FFFF,
//                0x00FF44FF, 0x7C0014FF, 0x007C74FF, 0x009600FF, 0xFF00FFFF, 0x9A7130FF, 0x5EB9FFFF, 0xCC0031FF,
//                0x549389FF, 0xFFB900FF, 0x00CA00FF, 0x003A4CFF, 0xC64BFFFF, 0xFFDA8AFF, 0xFF00B3FF, 0xD99A9CFF,
//                0xA4FFFFFF, 0x30A900FF, 0xF1A4FFFF, 0x3300F0FF, 0x5A00FFFF, 0x7C00ADFF, 0x29C7D7FF, 0xF0FF3CFF,
//                0x003CBDFF, 0xFF61F9FF, 0x862AFFFF, 0x003A00FF, 0x863B83FF, 0x18F9FFFF, 0x46166BFF, 0xA35100FF,
//                0x4BFFDFFF, 0x34C872FF, 0xFF0060FF, 0x7DCABDFF, 0x00FF00FF, 0x6260B4FF, 0xFF3D00FF, 0xAB0000FF,
//                0x9BD21FFF, 0x0000FFFF, 0x00B36EFF, 0x7F88EEFF, 0x460000FF, 0x928000FF, 0xBEA1FFFF, 0xC261B0FF,
//        };

//                {
//                0x00000000, 0x000000FF, 0xFFFFFFFF, 0x888888FF, 0x444444FF, 0xCCCCCCFF, 0x222222FF, 0xAAAAAAFF,
//                0x666666FF, 0xEEEEEEFF, 0x5F3700FF, 0xFC9D74FF, 0x9800E8FF, 0xFF0000FF, 0x3E00A2FF, 0x0083FFFF,
//                0x00FF50FF, 0x7C0014FF, 0x007C74FF, 0x009600FF, 0xFF00FFFF, 0x9A7130FF, 0x5EB9FFFF, 0xCC0031FF,
//                0x5B9189FF, 0xFFB900FF, 0x245E79FF, 0x00C700FF, 0x003A4CFF, 0x5E6837FF, 0xC64BFFFF, 0xFFDA8AFF,
//                0xFF00B7FF, 0xD49C9CFF, 0xA4FFFFFF, 0x520000FF, 0x669B17FF, 0xF1A4FFFF, 0x3300F0FF, 0xFCCBD5FF,
//                0x5A00FFFF, 0x7C00ADFF, 0x90635DFF, 0x39C6D6FF, 0xF0FF3CFF, 0x003AC1FF, 0x3E9168FF, 0xFF61F9FF,
//                0x862AFFFF, 0x003A00FF, 0x80407FFF, 0x18F9FFFF, 0x46166BFF, 0xA35100FF, 0x4BFFDFFF, 0x612835FF,
//                0xBAD3F8FF, 0x00C3D4FF, 0x170041FF, 0x3CC678FF, 0x004973FF, 0xCCA1E8FF, 0xFF0060FF, 0x84C8BDFF,
//        };

        int[] huckle =
                {
                        0x00000000, 0x000000FF, 0xFFFFFFFF, 0x888888FF, 0x444444FF, 0xCCCCCCFF, 0x222222FF, 0xAAAAAAFF,
                        0x666666FF, 0xEEEEEEFF, 0xC020ACFF, 0x35955EFF, 0xFAA7CFFF, 0x8835D9FF, 0x3E51D9FF, 0x272FE2FF,
                        0xB481D4FF, 0x009512FF, 0x806CCFFF, 0x723BA7FF, 0x8D2969FF, 0xED3BEEFF, 0x5DF67BFF, 0xCDB080FF,
                        0x3E518BFF, 0xA0911FFF, 0x61FCE3FF, 0x172E78FF, 0x99F166FF, 0x766E19FF, 0x4AB7F1FF, 0x47EFADFF,
                        0xC5574BFF, 0x9CF0D4FF, 0x84E2A3FF, 0x829651FF, 0x5CC162FF, 0x560C1DFF, 0xE05097FF, 0xD1D94DFF,
                        0xFEEFA8FF, 0xD78B22FF, 0x93BFEBFF, 0xFB906DFF, 0x0032ABFF, 0xA03133FF, 0x97C824FF, 0xEF3466FF,
                        0x359AAEFF, 0x54BC99FF, 0x5AF536FF, 0x050B50FF, 0x367D22FF, 0xFB75F5FF, 0xF0C41BFF, 0x5C1B80FF,
                        0x19DE54FF, 0xCDFD90FF, 0x74A2BFFF, 0x1F6CFFFF, 0x00ECFFFF, 0xC9A7F9FF, 0xFF0000FF, 0xA65979FF,
                }
//                {
//                0x00000000, 0x000000FF, 0xFFFFFFFF, 0x888888FF, 0x444444FF, 0xCCCCCCFF, 0x222222FF, 0xAAAAAAFF,
//                0x666666FF, 0xEEEEEEFF, 0x59B2C2FF, 0x7E2722FF, 0x50AA64FF, 0xC66FEDFF, 0x835EF6FF, 0x7B1CCAFF,
//                0x8D91DBFF, 0x598318FF, 0x4F32AEFF, 0xDAAC65FF, 0xAFB274FF, 0x8EC7FEFF, 0xDD7D43FF, 0x121E98FF,
//                0xE03C36FF, 0x72F9D5FF, 0x59EC91FF, 0xA86761FF, 0x00CC3CFF, 0x177961FF, 0x547CEBFF, 0x89337BFF,
//                0x5678ABFF, 0x6962BEFF, 0x1FE3C9FF, 0xEA3FCEFF, 0xF9FAAEFF, 0xEFDC9FFF, 0x819642FF, 0x3E00BDFF,
//                0xFF80FEFF, 0xA960BDFF, 0xD2E86AFF, 0x1E52C0FF, 0x186094FF, 0x691052FF, 0x00FF00FF, 0x1C135EFF,
//                0x2C9B97FF, 0xF0CE35FF, 0x32A8F3FF, 0xD64C6FFF, 0x00FF8EFF, 0xBAFCE3FF, 0xA9F0A5FF, 0xEF92C3FF,
//                0xB7BA3BFF, 0xFF00E6FF, 0x4439E5FF, 0x268800FF, 0xFF00A8FF, 0x57E13EFF, 0xB54113FF, 0x2800FFFF,
//        }
                ;

        int[] heckle =
                {
                        0x00000000, 0x000000FF, 0xFFFFFFFF, 0x888888FF, 0x444444FF, 0xCCCCCCFF, 0x222222FF, 0xAAAAAAFF,
                        0x666666FF, 0xEEEEEEFF, 0x96FFA7FF, 0x614CE7FF, 0xA8607EFF, 0x451F76FF, 0x557FFBFF, 0xEE9D2AFF,
                        0x1E557FFF, 0x04080FFF, 0xAD2A0FFF, 0xF570EFFF, 0xDC6151FF, 0x532324FF, 0x58863EFF, 0x9B24A9FF,
                        0x0C25ACFF, 0x101617FF, 0x52D2BEFF, 0x6E218DFF, 0xB374C9FF, 0xDA2842FF, 0xD211ADFF, 0x68A02AFF,
                        0x20AEA7FF, 0xA7E23FFF, 0x3B7FACFF, 0x7F333CFF, 0x86B637FF, 0xF238A6FF, 0x609FF0FF, 0x171374FF,
                        0x372FD0FF, 0xE6A2E5FF, 0x525A37FF, 0x123F35FF, 0xE67D95FF, 0x28F3BCFF, 0xA55522FF, 0x9D51D7FF,
                        0x420A47FF, 0x130A4DFF, 0xFDFF7BFF, 0xB6904BFF, 0xFCBB57FF, 0x1CE245FF, 0xA9781BFF, 0xD326F7FF,
                        0x247632FF, 0x700D4CFF, 0x2065B1FF, 0x12550DFF, 0xFEDC8CFF, 0x71477EFF, 0xFF29F3FF, 0x7409DCFF,
                }

//                {
//                        0x00000000, 0x000000FF, 0xFFFFFFFF, 0x888888FF, 0x444444FF, 0xCCCCCCFF, 0x222222FF, 0xAAAAAAFF,
//                        0x666666FF, 0xEEEEEEFF, 0xB339A3FF, 0x721523FF, 0x8A78F7FF, 0xA9C449FF, 0xFC12DEFF, 0x090A10FF,
//                        0x4457C1FF, 0xF18AB2FF, 0x293CCBFF, 0x530E60FF, 0x498447FF, 0xF78C21FF, 0x4C5C3CFF, 0xF05546FF,
//                        0x833565FF, 0x3B21A9FF, 0xFDAA7CFF, 0x78F090FF, 0x6FB734FF, 0xB46257FF, 0x2C324CFF, 0xA94532FF,
//                        0x1D0A25FF, 0xB68CF7FF, 0xCDF43DFF, 0x4F73CDFF, 0x47A227FF, 0x271A59FF, 0x9010D3FF, 0x4EDBC5FF,
//                        0xE5388AFF, 0x2A4111FF, 0x45A9CFFF, 0xCD75A4FF, 0xB346F5FF, 0xB08D36FF, 0x1DEF2BFF, 0xE4CD20FF,
//                        0x760884FF, 0x71FBF2FF, 0x500A23FF, 0x061293FF, 0x1E5887FF, 0x9ABBFDFF, 0x8F2313FF, 0xF2FF91FF,
//                        0xFA56FBFF, 0x081905FF, 0xFFA5F0FF, 0xFFD588FF, 0x051150FF, 0xDD0D4BFF, 0x7D48F5FF, 0x13790FFF,
//                }
                ;
        int[] hackle =
                {
                        0x00000000, 0x000000FF, 0xFFFFFFFF, 0x888888FF, 0x444444FF, 0xCCCCCCFF, 0x96FFA7FF, 0x614CE7FF,
                        0x2B232FFF, 0x451F76FF, 0x8F626CFF, 0xEE9D2AFF, 0x04080FFF, 0xAD2A0FFF, 0xA798F5FF, 0x1D1123FF,
                        0x74BA8FFF, 0xED3A7DFF, 0xBA5AEBFF, 0x961676FF, 0x547819FF, 0x295B91FF, 0x3CA733FF, 0x2888FDFF,
                        0x1F1AEFFF, 0x6CE35EFF, 0xF97082FF, 0xB915BCFF, 0x650F1CFF, 0xF998FFFF, 0x05400BFF, 0xFF5AFBFF,
                }
                ;

        int[] haeckel =
                {
                        0x00000000, 0x000000FF, 0xFFFFFFFF, 0x888888FF, 0x444444FF, 0xCCCCCCFF, 0x222222FF, 0xAAAAAAFF,
                        0x666666FF, 0xEEEEEEFF, 0x111111FF, 0x999999FF, 0x555555FF, 0xDDDDDDFF, 0x333333FF, 0xBBBBBBFF,
                        0x777777FF, 0x96FFA7FF, 0x614CE7FF, 0xA8607EFF, 0x451F76FF, 0x181917FF, 0xBBB3F2FF, 0x557FFBFF,
                        0x8F626CFF, 0xEE9D2AFF, 0x1E557FFF, 0x04080FFF, 0xAF7B92FF, 0xBEDD8EFF, 0xAD2A0FFF, 0xA798F5FF,
                        0x460922FF, 0x3FFCA9FF, 0x7423E5FF, 0xF570EFFF, 0x70A26AFF, 0x27177EFF, 0xFC7C26FF, 0xDC6151FF,
                        0x532324FF, 0x74BA8FFF, 0x58863EFF, 0x3D4DA3FF, 0x9B24A9FF, 0x88673AFF, 0x7BAFF8FF, 0xD44B6EFF,
                        0x0C25ACFF, 0x76321EFF, 0x6775ABFF, 0x52D2BEFF, 0x6E218DFF, 0xB374C9FF, 0x1F1644FF, 0xB77A3EFF,
                        0x4760B3FF, 0xF5F57AFF, 0xDA2842FF, 0x3E502CFF, 0xA261CCFF, 0x282555FF, 0x177578FF, 0xDF8987FF,
                        0x384517FF, 0xD211ADFF, 0x770D59FF, 0x378DCCFF, 0x563964FF, 0x11302CFF, 0x99344CFF, 0xDDBE79FF,
                        0x68A02AFF, 0xFD8BC4FF, 0x2E1127FF, 0xAA0FD0FF, 0xCC9531FF, 0x98D56AFF, 0x685B31FF, 0x8792DAFF,
                        0x87FFFFFF, 0xBF5F40FF, 0xBA5AEBFF, 0xADBC73FF, 0x961676FF, 0x20AEA7FF, 0x1B424AFF, 0xB94C3BFF,
                        0x5C11B2FF, 0x335F40FF, 0x547819FF, 0x2198FAFF, 0xEFDD7AFF, 0xBB2850FF, 0xD3499EFF, 0xE36385FF,
                        0xA7E23FFF, 0x8447A6FF, 0x0F0C30FF, 0xD9197BFF, 0x610F4DFF, 0xE8A5B4FF, 0xEC55D4FF, 0x4E9648FF,
                        0x25F7EFFF, 0x86B637FF, 0x2F99A1FF, 0x7FFF37FF, 0x9A4B29FF, 0x9147D0FF, 0x274399FF, 0x93792AFF,
                        0xFF4BFFFF, 0x0B081EFF, 0x7BD0E8FF, 0xB52280FF, 0x811031FF, 0x71CB1EFF, 0x372FD0FF, 0x842F59FF,
                        0x3052D0FF, 0x2B0715FF, 0xF7BFE5FF, 0x814039FF, 0x4FF06DFF, 0x5113F8FF, 0x29B4EAFF, 0x411940FF,
                        0x0856F9FF, 0x635584FF, 0xB324F0FF, 0x3C2515FF, 0x543336FF, 0xF4D318FF, 0xF8397CFF, 0x020304FF,
                        0x2FE8C7FF, 0x7C1FA6FF, 0xBD85C8FF, 0x280E66FF, 0x28DE82FF, 0x20446DFF, 0x4F2A7EFF, 0x6163E8FF,
                        0x1F5C0AFF, 0x5F473DFF, 0x8E5DA4FF, 0x348377FF, 0x9B0D13FF, 0x9C497BFF, 0xEF3F35FF, 0xEA77B6FF,
                        0x40681CFF, 0xD5CB38FF, 0xFC22CFFF, 0x091736FF, 0xA2ECD2FF, 0x534677FF, 0xF96C74FF, 0x3F3256FF,
                        0x8F74ABFF, 0x7A4F59FF, 0xF8A9E3FF, 0x6E8969FF, 0xD6AD88FF, 0x1C3581FF, 0xCB7B6CFF, 0x3CC5CFFF,
                        0x473416FF, 0x1B4121FF, 0xB03DAAFF, 0x5D7089FF, 0x2F1407FF, 0x1F7DEAFF, 0x108E1AFF, 0xC670F4FF,
                        0xF96716FF, 0xC8F7C6FF, 0xC99DDEFF, 0x8CE2FBFF, 0xBF9E78FF, 0x153659FF, 0x2A72C5FF, 0xC634F5FF,
                        0x741612FF, 0x918D2FFF, 0xE4EC18FF, 0x8A58FBFF, 0x112B09FF, 0x21C57CFF, 0x0BB81DFF, 0xFDB8A0FF,
                        0x9AA559FF, 0x6F3EADFF, 0x440C65FF, 0x9C7661FF, 0x9CD6B2FF, 0x29618CFF, 0x0B1AF4FF, 0x7E82FCFF,
                        0x629ABAFF, 0x9026F7FF, 0x4403B5FF, 0x0A0FA1FF, 0xA79163FF, 0x5237A0FF, 0x6A4D11FF, 0x150307FF,
                        0xBDB31BFF, 0x873B79FF, 0xFAFBC5FF, 0xE4B419FF, 0x00360BFF, 0x51E332FF, 0xBE44C6FF, 0xCF171DFF,
                        0x1A39F1FF, 0x621FCAFF, 0x4D38FFFF, 0x2686A5FF, 0xFD8E73FF, 0x0C7F56FF, 0x186D58FF, 0xBB416FFF,
                        0x0F2642FF, 0x37059FFF, 0x18B676FF, 0xF60F67FF, 0x1B2BC4FF, 0x82A5D1FF, 0x1DA675FF, 0x715D95FF,
                        0x081061FF, 0x135556FF, 0xE813C6FF, 0xFCCCADFF, 0xEF90FBFF, 0x7272D6FF, 0x580915FF, 0x370A44FF,
                        0x3CC41FFF, 0x7A84CAFF, 0xF6C86EFF, 0xE036F8FF, 0xFD529FFF, 0xF1FF1DFF, 0x052307FF, 0xCF8124FF,
                        0x4CC6FFFF, 0x1C66FFFF, 0xFEA654FF, 0x05791CFF, 0x07A423FF, 0x23FC2AFF, 0xA6F171FF, 0x776410FF,
                }
                ;
        int[] hardRGB = {0x00000000, 0x000000FF, 0xFF0000FF, 0x00FF00FF, 0x0000FFFF};
        int[] hardCMYK = {0x00000000, 0x000000FF, 0x00FFFFFF, 0xFF00FFFF, 0xFFFF00FF};
        int[] muncy = {
                0x00000000,0x000000FF,0x2B292BFF,0x585458FF,0x8A8489FF,0xBDB7BFFF,0xE7E1E9FF,0xFFFFFFFF,
                0xFD7992FF,0xF48FA0FF,0xE66980FF,0xF8C3CEFF,0xE2A3AEFF,0xC5808AFF,0xEFD1DCFF,0xCBADB7FF,
                0xEFDDE5FF,0xC7B6BDFF,0xD51C3CFF,0xBF344BFF,0x87122DFF,0x5C0625FF,0xB14955FF,0x742434FF,
                0x481127FF,0xB4888DFF,0x985D62FF,0x53383EFF,0x332127FF,0x928186FF,0x5D4E53FF,0xFD7E5DFF,
                0xF59080FF,0xEF6366FF,0xF8C4B6FF,0xE2A698FF,0xC9807EFF,0xF1D3D1FF,0xCBACACFF,0xCBAFA7FF,
                0xE83B1BFF,0xDB5D3BFF,0xAF3318FF,0xCD6952FF,0xA2402BFF,0xB97565FF,0x8B1C0EFF,0x610F12FF,
                0xAC7A73FF,0x7D423BFF,0x461D1EFF,0x9E7F7AFF,0x6C4D4BFF,0x43292AFF,0xF7760BFF,0xEA8127FF,
                0xC26012FF,0xFBAF82FF,0xDE8D5CFF,0xB26633FF,0x8A4416FF,0x571A07FF,0xAD7C63FF,0x724A38FF,
                0x442112FF,0x997F75FF,0x674F48FF,0x3E2C28FF,0x928281FF,0x605251FF,0xFFBE50FF,0xF0A121FF,
                0xD08511FF,0xFCC27CFF,0xE7A75DFF,0xC38639FF,0xEEC6A6FF,0x9E671DFF,0x673F0BFF,0xC49A74FF,
                0x886648FF,0x50341AFF,0xB49B8DFF,0x7E695DFF,0x4D3D33FF,0xF1BF15FF,0xF7CE50FF,0xD9AE2FFF,
                0xB88F16FF,0xF4D284FF,0xD2AF63FF,0xB08F42FF,0xEFD7B2FF,0xC8B18BFF,0xA99066FF,0xEEDFDAFF,
                0xC6B9B1FF,0x997736FF,0x705420FF,0x3F2C10FF,0xEBDD21FF,0xE9DC55FF,0xC4B827FF,0xA29812FF,
                0xE9DD8AFF,0xC0B55EFF,0x9E953CFF,0xE6DCABFF,0xBEB584FF,0x8B7D2EFF,0x64591AFF,0x352E0AFF,
                0x8E856FFF,0x5D553FFF,0x35301CFF,0x8F877FFF,0x58514AFF,0xA7DC26FF,0xC3DF69FF,0x82A12BFF,
                0x486C0EFF,0xCEDB9FFF,0x8B9A5FFF,0xD7D7C1FF,0x979A85FF,0x2C5506FF,0x495B22FF,0x20340BFF,
                0x545947FF,0x2F3326FF,0x3FD740FF,0x87D989FF,0x39964AFF,0x176A1EFF,0x054208FF,0xC5EDC4FF,
                0x9CC69CFF,0x669069FF,0x2F5D3AFF,0x10361AFF,0x23EAA5FF,0x49D0A3FF,0x158A66FF,0xA6E2CAFF,
                0x6FAC95FF,0x337762FF,0x164E3DFF,0x0C2E24FF,0xC7D9D6FF,0x94A6A3FF,0x61716EFF,0x394746FF,
                0xE0E2E5FF,0xBABEC1FF,0x848888FF,0x545858FF,0x13FCD5FF,0x35D7CEFF,0x0D8F82FF,0x98E1E0FF,
                0x5FABABFF,0x297A7BFF,0x154B4DFF,0x0A2D2EFF,0x2DBCE2FF,0x1385AFFF,0x94D6EFFF,0x65A8C3FF,
                0x2A7691FF,0x134A60FF,0x0B2C3BFF,0x1B5CD7FF,0x419DEDFF,0x276CBDFF,0x113074FF,0x99C6F9FF,
                0x73A4DCFF,0x34689EFF,0x173459FF,0xC2D2ECFF,0x91A2BBFF,0x54687FFF,0x323F4EFF,0x1E2531FF,
                0xE1E1F1FF,0xB7B8C6FF,0x838793FF,0x50545FFF,0x4436D1FF,0x8088E2FF,0x5359B5FF,0x2A286FFF,
                0xB7C0F8FF,0x8991CBFF,0x4D4E87FF,0x222248FF,0xC5C9F0FF,0x8E92B7FF,0x494D71FF,0x7931D3FF,
                0x987FDCFF,0x61419CFF,0x3C1668FF,0xC9BAF8FF,0x9B8CCAFF,0x5C4985FF,0x34254DFF,0xD0C6EFFF,
                0x9A90B5FF,0x584E72FF,0xB935D5FF,0xCE8CE3FF,0x9352A8FF,0x652277FF,0x460A55FF,0xE4B9F3FF,
                0xBC93CCFF,0x875E96FF,0x563762FF,0x371B41FF,0xE0CBEBFF,0xAD97B3FF,0x7B667EFF,0x513F51FF,
                0x2F2231FF,0xEBDFEFFF,0xC3B7C6FF,0x8F8490FF,0x5C525EFF,0xD429B9FF,0xA74994FF,0x761A6AFF,
                0x4F094AFF,0xBD80AEFF,0x965888FF,0x5F3458FF,0x3F183CFF,0xAD89A5FF,0x86627EFF,0xFCA1E7FF,
                0xF483CDFF,0xDF6AACFF,0xF5B2DBFF,0xDE98BFFF,0xC67D9DFF,0xEBC8DFFF,0xC7A3B9FF,0xDD2388FF,
                0xB83773FF,0x881055FF,0x54063CFF,0xAB4B74FF,0x6E294CFF,0x431432FF,0xB2879BFF,0x945C73FF,
        };
        int[] turner = {
                0x00000000, 0x000000FF, 0x282828FF, 0x585858FF, 0x868686FF, 0xA2A2A2FF, 0xCBCBCBFF, 0xFFFFFFFF,
                0xCF4929FF, 0xEF8A6EFF, 0xFFAA6EFF, 0xC36A21FF, 0xF3820DFF, 0x6E512DFF, 0xFFAA0DFF, 0x9E7E41FF,
                0xFFD37AFF, 0xDBBF6AFF, 0xFFDF62FF, 0xFFF376FF, 0x8EAF21FF, 0x6E8A31FF, 0xA6D755FF, 0x8AC75EFF,
                0x8CEF92FF, 0x229E35FF, 0x147E25FF, 0x0F661DFF, 0x42CB62FF, 0x0A3919FF, 0x78FAE6FF, 0x008782FF,
                0x00AAA5FF, 0x53A1ADFF, 0x3B768FFF, 0x8CDAFFFF, 0x50B9EBFF, 0x21526BFF, 0x163755FF, 0x3E83D1FF,
                0x354AB2FF, 0x1D1A59FF, 0x322D89FF, 0xA68ABFFF, 0x51057FFF, 0x7E5596FF, 0x66397EFF, 0xC75AFFFF,
                0xDFBFEFFF, 0x8605C3FF, 0xAF1DE7FF, 0xC792DBFF, 0x7E4D7EFF, 0xA26A92FF, 0xFFA5D5FF, 0x5A2541FF,
                0xFF6EAFFF, 0xB22E69FF, 0xE54286FF, 0xFFCCDBFF, 0x721C2FFF, 0xA52639FF, 0xFF6675FF, 0xDD3745FF
        };
        int[] betts = {
                0x00000000,
                0x000000FF, 0x282828FF, 0x585858FF, 0x868686FF, 0xA2A2A2FF, 0xCBCBCBFF, 0xFFFFFFFF, 0xA6D755FF,
                0x8ABF5EFF, 0x7AA221FF, 0x6E8A31FF, 0x0A4111FF, 0x0F661DFF, 0x147E25FF, 0x229E35FF, 0x42C372FF,
                0x8CE7A6FF, 0x78FAE6FF, 0x00C7A5FF, 0x009282FF, 0x163135FF, 0x21526BFF, 0x3B768FFF, 0x53A1ADFF,
                0x8CDAFFFF, 0x50AAF7FF, 0x3E83EBFF, 0x354AD7FF, 0x1D2DAAFF, 0x152135FF, 0x66397EFF, 0x7E5596FF,
                0xA68ABFFF, 0xDFBFEFFF, 0xC772FFFF, 0x9245E7FF, 0x6E05C3FF, 0x350082FF, 0x721C2FFF, 0xB22E69FF,
                0xE54286FF, 0xFF6EAFFF, 0xFF9AC7FF, 0xFFD7F3FF, 0xE3B3C3FF, 0xCB96A2FF, 0xAA768AFF, 0xCF4929FF,
                0xF3820DFF, 0xFFAA0DFF, 0xFFD3A6FF, 0xFFBB8AFF, 0xE7A67AFF, 0xBB7251FF, 0x82491DFF, 0x513115FF,
                0xB7515AFF, 0x6E5A51FF, 0x8A7A5AFF, 0xB79E5EFF, 0xDFC721FF, 0xFFDF00FF, 0xFFF3B3FF,
        };
        int[] betsy255 = new int[] {
                0x00000000, 0x000000FF, 0x282828FF, 0x585858FF, 0x868686FF, 0xA2A2A2FF, 0xCBCBCBFF, 0xFFFFFFFF,
                0xA6D755FF, 0x8ABF5EFF, 0x7AA221FF, 0x6E8A31FF, 0x0A4111FF, 0x0F661DFF, 0x147E25FF, 0x229E35FF,
                0x42C372FF, 0x8CE7A6FF, 0x78FAE6FF, 0x00C7A5FF, 0x009282FF, 0x163135FF, 0x21526BFF, 0x3B768FFF,
                0x53A1ADFF, 0x8CDAFFFF, 0x50AAF7FF, 0x3E83EBFF, 0x354AD7FF, 0x1D2DAAFF, 0x152135FF, 0x66397EFF,
                0x7E5596FF, 0xA68ABFFF, 0xDFBFEFFF, 0xC772FFFF, 0x9245E7FF, 0x6E05C3FF, 0x350082FF, 0x721C2FFF,
                0xB22E69FF, 0xE54286FF, 0xFF6EAFFF, 0xFF9AC7FF, 0xFFD7F3FF, 0xE3B3C3FF, 0xCB96A2FF, 0xAA768AFF,
                0xCF4929FF, 0xF3820DFF, 0xFFAA0DFF, 0xFFD3A6FF, 0xFFBB8AFF, 0xE7A67AFF, 0xBB7251FF, 0x82491DFF,
                0x513115FF, 0xB7515AFF, 0x6E5A51FF, 0x8A7A5AFF, 0xB79E5EFF, 0xDFC721FF, 0xFFDF00FF, 0xFFF3B3FF,
                0xC99A14FF, 0xFEC64CFF, 0xC29D48FF, 0xBA7825FF, 0xFFAA4DFF, 0xD39A5EFF, 0xEEA45CFF, 0xD1AB8CFF,
                0xAD6329FF, 0xD78350FF, 0xB15301FF, 0xE35A00FF, 0xCF5E2CFF, 0x672F16FF, 0xAA5635FF, 0xC73908FF,
                0xA23111FF, 0x9C5A4DFF, 0xFB6440FF, 0xA47F71FF, 0x8B1005FF, 0xF58D7CFF, 0xC61300FF, 0x7B2921FF,
                0xED6858FF, 0x66090EFF, 0x933529FF, 0xE73129FF, 0xB71719FF, 0xE79C94FF, 0xBF3C3DFF, 0xF80334FF,
                0xC86160FF, 0xD08684FF, 0xEB4250FF, 0xA81A31FF, 0xD52144FF, 0xF46774FF, 0xEA064CFF, 0x580D26FF,
                0xD66B7BFF, 0xB01A4DFF, 0x2C0613FF, 0xDD4668FF, 0xF22B70FF, 0xCF1562FF, 0x8C385DFF, 0x845A6BFF,
                0xE7298CFF, 0xB6036DFF, 0x60324AFF, 0xD76FA4FF, 0x751752FF, 0xD40D98FF, 0x49103EFF, 0xBF2891FF,
                0xAA4289FF, 0xF353C8FF, 0x945D81FF, 0x93217DFF, 0xDC32BCFF, 0xDF94C8FF, 0xF917E0FF, 0xC74DB4FF,
                0xE773D6FF, 0xFC78ECFF, 0xAF06A1FF, 0x9A2099FF, 0xE557E0FF, 0xD631DEFF, 0xB82BC5FF, 0xEA1AF8FF,
                0x9B46A1FF, 0x6B1873FF, 0x50105AFF, 0x9C29B5FF, 0xBE14E5FF, 0xC050E8FF, 0xD897FCFF, 0x513562FF,
                0xA36BC5FF, 0xCEADE7FF, 0x7D28CAFF, 0x5F1E9EFF, 0x9C6EF9FF, 0xAC90E9FF, 0xBBB2D9FF, 0x6843C2FF,
                0x7F64CEFF, 0x762BFEFF, 0x8E86BDFF, 0x6329E7FF, 0x4A3896FF, 0x5F0AF2FF, 0x5A5A86FF, 0x21105AFF,
                0x626BFEFF, 0x29189CFF, 0xB3B3B3FF, 0x474747FF, 0xE9E9E9FF, 0x6B6B6BFF, 0x2C1ABFFF, 0x394ABDFF,
                0x2910DEFF, 0xC4D7FCFF, 0x4461D2FF, 0x88AEF9FF, 0x2643FBFF, 0x1E3283FF, 0x0838CFFF, 0x627FAAFF,
                0x115DF3FF, 0x012757FF, 0x29426BFF, 0x2757A7FF, 0x185ABFFF, 0x207FE3FF, 0x396B9CFF, 0x3D78B3FF,
                0x6BA4CEFF, 0x0B9ADBFF, 0x81C5D9FF, 0x42A5C6FF, 0xAFC7CFFF, 0x6E868EFF, 0x52CEEFFF, 0x39BDC6FF,
                0x23E1EFFF, 0xAFF2F5FF, 0x082423FF, 0x83EBE1FF, 0x21938FFF, 0x7AC6BEFF, 0x104947FF, 0x49B39AFF,
                0x296B5AFF, 0x319E7AFF, 0x41FFC6FF, 0x65E1B6FF, 0x39DAA3FF, 0x038963FF, 0x537166FF, 0x31B57FFF,
                0x24F59BFF, 0x49FF8AFF, 0x06EB6FFF, 0x39AD5AFF, 0x6BB87AFF, 0x378D43FF, 0x83FF8DFF, 0xD6F7D6FF,
                0x809D81FF, 0x4C724AFF, 0x4FD456FF, 0x66F562FF, 0x07FF1BFF, 0x4AEF31FF, 0x46AF32FF, 0x39C621FF,
                0x7BDA6AFF, 0x29A407FF, 0x97BF8DFF, 0x62FF39FF, 0x45892AFF, 0x639356FF, 0x314A29FF, 0x16210BFF,
                0x213118FF, 0x64CD0AFF, 0x7BEE16FF, 0x72B546FF, 0x99F841FF, 0xBFEF94FF, 0x96DF1DFF, 0x9FD005FF,
                0xC7FF2DFF, 0x8CAD29FF, 0xA6B925FF, 0x6B7321FF, 0xBCC685FF, 0xDAE45CFF, 0x969735FF, 0xCBC26CFF,
                0xBDB573FF, 0x52490EFF, 0xFBE76AFF, 0xA58C29FF, 0xDAD0B0FF, 0x8E7211FF, 0xEFCA64FF, 0x867545FF,
        };

        int[] batter255 = new int[] {
                0x00000000, 0x010101FF, 0x282828FF, 0x585858FF, 0x868686FF, 0xA2A2A2FF, 0xCBCBCBFF, 0xFFFFFFFF,
                0xA6D755FF, 0x8ABF5EFF, 0x7AA221FF, 0x6E8A31FF, 0x0A4111FF, 0x0F661DFF, 0x147E25FF, 0x229E35FF,
                0x42C372FF, 0x8CE7A6FF, 0x78FAE6FF, 0x00C7A5FF, 0x009282FF, 0x163135FF, 0x21526BFF, 0x3B768FFF,
                0x53A1ADFF, 0x8CDAFFFF, 0x50AAF7FF, 0x3E83EBFF, 0x354AD7FF, 0x1D2DAAFF, 0x152135FF, 0x66397EFF,
                0x7E5596FF, 0xA68ABFFF, 0xDFBFEFFF, 0xC772FFFF, 0x9245E7FF, 0x6E05C3FF, 0x350082FF, 0x721C2FFF,
                0xB22E69FF, 0xE54286FF, 0xFF6EAFFF, 0xFF9AC7FF, 0xFFD7F3FF, 0xE3B3C3FF, 0xCB96A2FF, 0xAA768AFF,
                0xCF4929FF, 0xF3820DFF, 0xFFAA0DFF, 0xFFD3A6FF, 0xFFBB8AFF, 0xE7A67AFF, 0xBB7251FF, 0x82491DFF,
                0x513115FF, 0xB7515AFF, 0x6E5A51FF, 0x8A7A5AFF, 0xB79E5EFF, 0xDFC721FF, 0xFFDF00FF, 0xFFF3B3FF,
                0xD79B0FFF, 0x8F7357FF, 0xCBAA89FF, 0xF5E1D2FF, 0x3B2D1FFF, 0xBF7F3FFF, 0xE3C7ABFF, 0xB45A00FF,
                0xDA6E0AFF, 0xF5B99BFF, 0xA04B05FF, 0x7E6E60FF, 0xE19B7DFF, 0xD08A74FF, 0xA0695FFF, 0xF55A32FF,
                0x621800FF, 0xFF3C0AFF, 0x401811FF, 0x73413CFF, 0xDA2010FF, 0xA5140AFF, 0xFF0000FF, 0x551414FF,
                0xFF6262FF, 0xFF8181FF, 0x8E5555FF, 0x573B3BFF, 0xE3ABABFF, 0xBD1039FF, 0x911437FF, 0x98344DFF,
                0xFFC0CBFF, 0xF8D2DAFF, 0x4B2837FF, 0xE61E78FF, 0x551937FF, 0x280A1EFF, 0x321623FF, 0xC87DA0FF,
                0xC35A91FF, 0xD7A0BEFF, 0xFF50BFFF, 0xA01982FF, 0xC78FB9FF, 0xEBACE1FF, 0xF500F5FF, 0x7F007FFF,
                0x641464FF, 0xBF3FBFFF, 0xFF52FFFF, 0xAB57ABFF, 0xFD81FFFF, 0x3C233CFF, 0x724072FF, 0x8F578FFF,
                0xAB73ABFF, 0xDA20E0FF, 0x463246FF, 0xBD10C5FF, 0xF8C6FCFF, 0xE3C7E3FF, 0xE673FFFF, 0xBCAFC0FF,
                0x320A46FF, 0x8C14BEFF, 0xBD29FFFF, 0x5A187BFF, 0x410062FF, 0xD7A5FFFF, 0x8F57C7FF, 0x8732D2FF,
                0xB991FFFF, 0x7F00FFFF, 0x5010B0FF, 0x736EAAFF, 0xE3E3FFFF, 0x786EF0FF, 0xABABE3FF, 0xBEB9FAFF,
                0x6241F6FF, 0x8F8FC7FF, 0x3B3B57FF, 0x494973FF, 0x57578FFF, 0x7676CAFF, 0x8181FFFF, 0xD0DAF8FF,
                0x373737FF, 0x131313FF, 0xDBDBDBFF, 0x494949FF, 0xB6B6B6FF, 0xEDEDEDFF, 0x929292FF, 0x6E6E6EFF,
                0x3C3CF5FF, 0x4A5AFFFF, 0x0F0F50FF, 0x101CDAFF, 0x90B0FFFF, 0x0000FFFF, 0x00007FFF, 0xA8B9DCFF,
                0x0052F6FF, 0x0F377DFF, 0x0C2148FF, 0x4B7DC8FF, 0x162C52FF, 0x004A9CFF, 0xBED2F0FF, 0xABC7E3FF,
                0x2378DCFF, 0x186ABDFF, 0x0F192DFF, 0x326496FF, 0x578FC7FF, 0x699DC3FF, 0x8FABC7FF, 0x109CDEFF,
                0x5AC5FFFF, 0x00BFFFFF, 0x91EBFFFF, 0x55E6FFFF, 0xE1F8FAFF, 0x7E9494FF, 0x6E8287FF, 0xC7F1F1FF,
                0xABE3E3FF, 0xBFFFFFFF, 0x8FC7C7FF, 0x234146FF, 0x3B7373FF, 0x3FBFBFFF, 0x055A5CFF, 0x00FFFFFF,
                0x007F7FFF, 0x08DED5FF, 0x2DEBA8FF, 0x1E2D23FF, 0xB4EECAFF, 0xABE3C5FF, 0x3CFEA5FF, 0x0F6946FF,
                0x1C8C4EFF, 0x235037FF, 0x00DE6AFF, 0x3B7349FF, 0x05B450FF, 0x507D5FFF, 0x87B48EFF, 0x506450FF,
                0x4BF05AFF, 0x8FC78FFF, 0x3B573BFF, 0xAFFFAFFF, 0x73AB73FF, 0x578F57FF, 0x3FBF3FFF, 0x00C514FF,
                0x0AD70AFF, 0x00FF00FF, 0x7DFF73FF, 0x14E60AFF, 0x3C6E14FF, 0x73C805FF, 0xC7E3ABFF, 0x9BF046FF,
                0x587D3EFF, 0x465032FF, 0x738F57FF, 0xABC78FFF, 0xC8FF41FF, 0x283405FF, 0xFFFF00FF, 0x626200FF,
                0xB1B10AFF, 0x53500AFF, 0xBFBF3FFF, 0x191E0FFF, 0xA2A255FF, 0x414123FF, 0x73733BFF, 0x8F8F57FF,
                0xB5B572FF, 0xC7C78FFF, 0xDADAABFF, 0xEDEDC7FF, 0xA6A090FF, 0xFFEA4AFF, 0xE6D55AFF, 0xAC9400FF,
        };

        int[] salton255 = new int[] {
                0x00000000, 0x010101FF, 0x282828FF, 0x585858FF, 0x868686FF, 0xA2A2A2FF, 0xCBCBCBFF, 0xFFFFFFFF,
                0xA6D755FF, 0x8ABF5EFF, 0x7AA221FF, 0x6E8A31FF, 0x0A4111FF, 0x0F661DFF, 0x147E25FF, 0x229E35FF,
                0x42C372FF, 0x8CE7A6FF, 0x78FAE6FF, 0x00C7A5FF, 0x009282FF, 0x163135FF, 0x21526BFF, 0x3B768FFF,
                0x53A1ADFF, 0x8CDAFFFF, 0x50AAF7FF, 0x3E83EBFF, 0x354AD7FF, 0x1D2DAAFF, 0x152135FF, 0x66397EFF,
                0x7E5596FF, 0xA68ABFFF, 0xDFBFEFFF, 0xC772FFFF, 0x9245E7FF, 0x6E05C3FF, 0x350082FF, 0x721C2FFF,
                0xB22E69FF, 0xE54286FF, 0xFF6EAFFF, 0xFF9AC7FF, 0xFFD7F3FF, 0xE3B3C3FF, 0xCB96A2FF, 0xAA768AFF,
                0xCF4929FF, 0xF3820DFF, 0xFFAA0DFF, 0xFFD3A6FF, 0xFFBB8AFF, 0xE7A67AFF, 0xBB7251FF, 0x82491DFF,
                0x513115FF, 0xB7515AFF, 0x6E5A51FF, 0x8A7A5AFF, 0xB79E5EFF, 0xDFC721FF, 0xFFDF00FF, 0xFFF3B3FF,
                0xFFC24FFF, 0xC2BBA9FF, 0xB0871FFF, 0xF2CF80FF, 0x906D1DFF, 0xDFA24BFF, 0x86694EFF, 0xE3971BFF,
                0xBB7213FF, 0x975813FF, 0x7E5030FF, 0xAE9784FF, 0xCF794CFF, 0xFF9A60FF, 0xA7593AFF, 0xA44210FF,
                0xFF6315FF, 0x793210FF, 0xC2836DFF, 0xE06635FF, 0xF2825BFF, 0xFC6C42FF, 0x3F1C16FF, 0xC0422AFF,
                0xF4A293FF, 0x5B2E24FF, 0xB41808FF, 0xFE1D02FF, 0x5B0606FF, 0xE31515FF, 0xF23C37FF, 0xC21A26FF,
                0x981C20FF, 0xEA5A5EFF, 0x291710FF, 0xD34B57FF, 0x22040DFF, 0xFE3257FF, 0x87353AFF, 0xD51144FF,
                0xA83F4BFF, 0xDF6A7FFF, 0xFE6885FF, 0x8C525CFF, 0xE71A58FF, 0xAB134FFF, 0xFE7B9AFF, 0xD27E96FF,
                0xF93E83FF, 0xA05B73FF, 0x893A5FFF, 0x5F3342FF, 0xCC0E7EFF, 0xD55193FF, 0xC03E83FF, 0xF645A3FF,
                0x71174CFF, 0x8C135FFF, 0x4B0932FF, 0xE31BA2FF, 0xA31479FF, 0x9D3F7CFF, 0x6B3858FF, 0xD08FB9FF,
                0xAB5692FF, 0xF8ACE4FF, 0xE25EC4FF, 0x32042DFF, 0xE90FCAFF, 0xB00D9FFF, 0xF925DFFF, 0xD44ABEFF,
                0xC221B4FF, 0xFC73E9FF, 0xFE43F2FF, 0x500153FF, 0xB767B3FF, 0xA284A1FF, 0x9604A4FF, 0xB53FC6FF,
                0xD308EDFF, 0xD769E6FF, 0x7B1A88FF, 0xE994FDFF, 0xD086E0FF, 0x9D36B1FF, 0x7E3E8CFF, 0xCA4EECFF,
                0x55096CFF, 0x650C83FF, 0xA008E0FF, 0xAC29F6FF, 0x8D4EBCFF, 0x9D56D2FF, 0x8420C6FF, 0xA46BD5FF,
                0x8C6BA9FF, 0xAC6BF1FF, 0x480C8BFF, 0xB39CF5FF, 0x7A07FFFF, 0x5D3BAAFF, 0x6625E1FF, 0x7E64E4FF,
                0x7147FEFF, 0xB6B1D2FF, 0x260E5DFF, 0x6D63C8FF, 0x6A6A9DFF, 0x4413BFFF, 0x3E3486FF, 0x3B3962FF,
                0x4F15DAFF, 0x7B7CFCFF, 0x8E94E8FF, 0x7C82C2FF, 0x7B7B7BFF, 0x201693FF, 0x090B23FF, 0xB2C1FAFF,
                0x3538F9FF, 0x2424EDFF, 0x1D16D5FF, 0x031050FF, 0x184BB9FF, 0x1F439BFF, 0x1662FCFF, 0x2C69D4FF,
                0x406697FF, 0x76B6F8FF, 0x8899AAFF, 0x6782A7FF, 0x83A3C3FF, 0x1E9CFBFF, 0x1C5C7DFF, 0x56626FFF,
                0x58CAFEFF, 0x1B90B4FF, 0x2DB2CEFF, 0x75BFC7FF, 0x25E5F4FF, 0xB1FEFAFF, 0x69D4D3FF, 0x124D4AFF,
                0x117F76FF, 0x1FAE9AFF, 0x549787FF, 0x68B69CFF, 0x9EFFD1FF, 0x10EBAFFF, 0x9BE8C3FF, 0x6AFEB5FF,
                0x71CB92FF, 0x169355FF, 0x4FF990FF, 0x35E986FF, 0x3EDB6AFF, 0x4E7A53FF, 0x48A75CFF, 0x0AE930FF,
                0x1FA92AFF, 0x16D72EFF, 0x71FE60FF, 0x6AEF59FF, 0x78AE77FF, 0x47723EFF, 0x3DBB14FF, 0x68915EFF,
                0xC5F8ABFF, 0xB1FB85FF, 0x88ED12FF, 0x42582CFF, 0x8FD111FF, 0x223308FF, 0x496B1CFF, 0xB8FA35FF,
                0xB7C87DFF, 0xC1E367FF, 0x9BBD25FF, 0xECFE65FF, 0xA5A94CFF, 0xF6FF95FF, 0xF5FE22FF, 0xA4A222FF,
                0xBEBB4EFF, 0x434531FF, 0x909478FF, 0xEDE389FF, 0xF4E54FFF, 0xA19150FF, 0x957F24FF, 0xFDE5A7FF,
        };

        int[] batty255 = new int[]{
                0x00000000, 0x000000FF, 0x121212FF, 0x242424FF, 0x363636FF, 0x484848FF, 0x5B5B5BFF, 0x6D6D6DFF,
                0x7F7F7FFF, 0x919191FF, 0xA3A3A3FF, 0xB6B6B6FF, 0xC8C8C8FF, 0xDADADAFF, 0xECECECFF, 0xFFFFFFFF,
                0xA6D755FF, 0x071315FF, 0xC6C0D1FF, 0x1C0B06FF, 0x8ABF5EFF, 0x101E24FF, 0xBF9ECFFF, 0x281710FF,
                0x7AA221FF, 0x0B323AFF, 0x919099FF, 0x511709FF, 0x6E8A31FF, 0x18414DFF, 0x887598FF, 0x632617FF,
                0x0A4111FF, 0x1991D3FF, 0x373432FF, 0xCE690FFF, 0x0F661DFF, 0x166998FF, 0x545255FF, 0x994A06FF,
                0x147E25FF, 0x0F547CFF, 0x6A6664FF, 0x793D09FF, 0x229E35FF, 0x143B54FF, 0x86808AFF, 0x532C0DFF,
                0x42C372FF, 0x0D2135FF, 0xB49EADFF, 0x2C1C0AFF, 0x8CE7A6FF, 0x090C10FF, 0xE5C2DCFF, 0x0E0B08FF,
                0x78FAE6FF, 0x040310FF, 0xE3DEDCFF, 0x060603FF, 0x00C7A5FF, 0x0E0261FF, 0xACA7A5FF, 0x261D09FF,
                0x009282FF, 0x2F09B2FF, 0x807B7AFF, 0x483A0AFF, 0x163135FF, 0xA27AE7FF, 0x352826FF, 0x8A9D41FF,
                0x21526BFF, 0xA619CAFF, 0x4E4A49FF, 0x337F1AFF, 0x3B768FFF, 0x682285FF, 0x82675BFF, 0x335320FF,
                0x53A1ADFF, 0x341A5AFF, 0xB2877EFF, 0x282F16FF, 0x8CDAFFFF, 0x140018FF, 0xD2CDCBFF, 0x070E00FF,
                0x50AAF7FF, 0x3B0A32FF, 0xA7A199FF, 0x0D2816FF, 0x3E83EBFF, 0x5D1745FF, 0x8B8376FF, 0x183F2DFF,
                0x354AD7FF, 0x972B56FF, 0x635C51FF, 0x2C6456FF, 0x1D2DAAFF, 0xCB3D79FF, 0x463F36FF, 0x3B8776FF,
                0x152135FF, 0xDF84B4FF, 0x252018FF, 0x65B998FF, 0x66397EFF, 0x95523EFF, 0x465536FF, 0x416D7CFF,
                0x7E5596FF, 0x674338FF, 0x55723DFF, 0x3E5158FF, 0xA68ABFFF, 0x39221BFF, 0x8DA25BFF, 0x1D2B2EFF,
                0xDFBFEFFF, 0x150806FF, 0xC0D5ACFF, 0x070E10FF, 0xC772FFFF, 0x421400FF, 0xA19D9BFF, 0x0A2931FF,
                0x9245E7FF, 0x7A2010FF, 0x727768FF, 0x174A56FF, 0x6E05C3FF, 0xC21B08FF, 0x54504FFF, 0x18707FFF,
                0x350082FF, 0xFF4058FF, 0x322F2EFF, 0x13A2A7FF, 0x721C2FFF, 0x8A7930FF, 0x384041FF, 0x6669E3FF,
                0xB22E69FF, 0x644B1FFF, 0x5B6963FF, 0x1E45B1FF, 0xE54286FF, 0x403319FF, 0x748B83FF, 0x122490FF,
                0xFF6EAFFF, 0x291E01FF, 0xA4A6A3FF, 0x0B1C48FF, 0xFF9AC7FF, 0x191203FF, 0xBCBEBBFF, 0x04112AFF,
                0xFFD7F3FF, 0x060401FF, 0xD7ECD6FF, 0x030505FF, 0xE3B3C3FF, 0x13100CFF, 0x83D7C2FF, 0x080F24FF,
                0xCB96A2FF, 0x231E16FF, 0x61BBA6FF, 0x151E37FF, 0xAA768AFF, 0x39332AFF, 0x419C7CFF, 0x2B3444FF,
                0xCF4929FF, 0x384517FF, 0x697C80FF, 0x541E83FF, 0xF3820DFF, 0x092912FF, 0x9EA3A4FF, 0x390838FF,
                0xFFAA0DFF, 0x001813FF, 0xB8BDBFFF, 0x250217FF, 0xFFD3A6FF, 0x000806FF, 0xD8DDDFFF, 0x0C0209FF,
                0xFFBB8AFF, 0x061007FF, 0xC7CCCEFF, 0x160415FF, 0xE7A67AFF, 0x101A10FF, 0x9CBAD5FF, 0x230E20FF,
                0xBB7251FF, 0x2B3A23FF, 0x5D8FA4FF, 0x43274FFF, 0x82491DFF, 0x226E33FF, 0x4F5B5FFF, 0x922A90FF,
                0x513115FF, 0x36975FFF, 0x2F3B43FF, 0xD03DB4FF, 0xB7515AFF, 0x45442AFF, 0x557D7DFF, 0x3F3580FF,
                0x6E5A51FF, 0x4F594AFF, 0x236983FF, 0x604D68FF, 0x8A7A5AFF, 0x2E403AFF, 0x5679CFFF, 0x50313DFF,
                0xB79E5EFF, 0x152725FF, 0x949EC9FF, 0x361820FF, 0xDFC721FF, 0x071111FF, 0xC7C5C8FF, 0x1E030BFF,
                0xFFDF00FF, 0x020708FF, 0xE2DDDAFF, 0x0D0005FF, 0xFFF3B3FF, 0x000102FF, 0xF4F1F5FF, 0x030000FF,
                0xEDEFA0FF, 0x020304FF, 0xE6E8F9FF, 0x050202FF, 0xD0E290FF, 0x070909FF, 0xDED2EDFF, 0x0C0705FF,
                0xBFDB76FF, 0x080D0DFF, 0xD4C9E2FF, 0x140805FF, 0xB4D968FF, 0x090F12FF, 0xCEC3DDFF, 0x170A07FF,
        };

        int[] yam255 = {
                0x00000000, 0x000000FF, 0x050403FF, 0x0F0D0CFF, 0x1A1817FF, 0x292625FF, 0x393534FF, 0x4A4645FF,
                0x5C5957FF, 0x726E6CFF, 0x878381FF, 0x9D9997FF, 0xB6B2B0FF, 0xCFCAC8FF, 0xE9E4E2FF, 0xFBFFFFFF,
                0x341714FF, 0x633D38FF, 0x9B6D67FF, 0xDBA69EFF, 0x342014FF, 0x63493AFF, 0x9B7C6BFF, 0xDAB7A3FF,
                0x322215FF, 0x624D3CFF, 0x98806CFF, 0xD8BCA6FF, 0x312818FF, 0x605541FF, 0x978B73FF, 0xD8CAB0FF,
                0x32351CFF, 0x616647FF, 0x999E7BFF, 0xD8DEB7FF, 0x273419FF, 0x546444FF, 0x8A9D77FF, 0xC9DEB4FF,
                0x15361DFF, 0x406546FF, 0x739E7AFF, 0xAEDEB5FF, 0x143535FF, 0x3F6565FF, 0x749F9EFF, 0xB1E0DFFF,
                0x0B1934FF, 0x2F4265FF, 0x5D759EFF, 0x94B0DFFF, 0x201435FF, 0x493C66FF, 0x7B6C9EFF, 0xB6A6DFFF,
                0x291537FF, 0x563D67FF, 0x8B6E9FFF, 0xC8A8E0FF, 0x321835FF, 0x614164FF, 0x9A739DFF, 0xD9AEDDFF,
                0x71271DFF, 0xA65042FF, 0xDD7D6DFF, 0x6F361DFF, 0xA36144FF, 0xDD9272FF, 0x713C21FF, 0xA56749FF,
                0xE09A78FF, 0x73401DFF, 0xA76D46FF, 0xDF9E73FF, 0x704720FF, 0xA37449FF, 0xDCA878FF, 0x6F5025FF,
                0xA27E4FFF, 0xDBB480FF, 0x6F5924FF, 0xA48A51FF, 0xDEC282FF, 0x6F6C29FF, 0xA2A057FF, 0xDBD98AFF,
                0x63722BFF, 0x96A85AFF, 0xCFE48EFF, 0x59762BFF, 0x8AAA59FF, 0xC0E58CFF, 0x4B7427FF, 0x79A855FF,
                0xAEE387FF, 0x31752CFF, 0x5FAA59FF, 0x93E48BFF, 0x1F724CFF, 0x52A77CFF, 0x87E2B1FF, 0x25756AFF,
                0x56A89BFF, 0x8AE3D3FF, 0x1D6877FF, 0x4D9AABFF, 0x81D3E5FF, 0x1E4B75FF, 0x4779A9FF, 0x76ADE2FF,
                0x1B1F74FF, 0x3949A9FF, 0x6077E2FF, 0x351D72FF, 0x5B47A7FF, 0x8A77E2FF, 0x451F76FF, 0x6F4AABFF,
                0x9F78E4FF, 0x4F2071FF, 0x7D4BA7FF, 0xB17BE0FF, 0x5A2173FF, 0x8B4CA7FF, 0xC27DE2FF, 0x672174FF,
                0x9B4EAAFF, 0xD37EE4FF, 0x731F58FF, 0xA84985FF, 0xE177B9FF, 0x731F2FFF, 0xA84956FF, 0xE17582FF,
                0xB8291FFF, 0xE54D3EFF, 0xBA3B1EFF, 0xE65D3EFF, 0xB54D24FF, 0xE27246FF, 0xB85922FF, 0xE67E46FF,
                0xB85E25FF, 0xE58349FF, 0xBA652AFF, 0xE4884BFF, 0xB86329FF, 0xE6894CFF, 0xB46D23FF, 0xE3964BFF,
                0xB67A2CFF, 0xE2A151FF, 0xBC832AFF, 0xE7AA4FFF, 0xB29231FF, 0xE0BE5AFF, 0xB9A72CFF, 0xE5D357FF,
                0xB9C034FF, 0xE2EB5DFF, 0xA8C03BFF, 0xD0EB63FF, 0x96BC35FF, 0xC0EA5FFF, 0x8AC035FF, 0xB1EB5DFF,
                0x72C131FF, 0x98EC59FF, 0x51BF36FF, 0x78EC5EFF, 0x1BBD3AFF, 0x4FEA60FF, 0x1ABD82FF, 0x51EBAAFF,
                0x17BEA8FF, 0x4FEAD2FF, 0x29BEC2FF, 0x58E9ECFF, 0x1C9EC2FF, 0x4CC9EEFF, 0x1681C1FF, 0x41A7EDFF,
                0x0C41BEFF, 0x2B65EBFF, 0x3124BDFF, 0x484BEAFF, 0x4D20BFFF, 0x6946EBFF, 0x6725BCFF, 0x894AE9FF,
                0x7224BBFF, 0x964AE8FF, 0x7F26BEFF, 0xA64DECFF, 0x8B26BEFF, 0xB34DECFF, 0x9827BAFF, 0xC34EE7FF,
                0xA626BCFF, 0xD24FE9FF, 0xB42DBBFF, 0xE155E8FF, 0xBB2885FF, 0xE64BA9FF, 0xB92855FF, 0xE64C75FF,
                0xFD2918FF, 0xFA4411FF, 0xFD580BFF, 0xFC6A1AFF, 0xF8721EFF, 0xFD740EFF, 0xF9770FFF, 0xFA7E17FF,
                0xFA831BFF, 0xFD8F14FF, 0xFB9A1EFF, 0xFDA514FF, 0xF7B321FF, 0xF8C41FFF, 0xFDDC27FF, 0xFBF42CFF,
                0xEDFF21FF, 0xE1FF31FF, 0xD0FF2BFF, 0xBEFF23FF, 0xA6FF1EFF, 0x8BFF16FF, 0x6EFF23FF, 0x28FF2EFF,
                0x00FF74FF, 0x00FFB0FF, 0x00FFD8FF, 0x00FCF2FF, 0x00EBFFFF, 0x00CEFFFF, 0x00ADFFFF, 0x007EFFFF,
                0x2200FFFF, 0x4300FFFF, 0x5F00FFFF, 0x7900FFFF, 0x8F05FFFF, 0x9B13FEFF, 0xA600FFFF, 0xB510FFFF,
                0xBD15FFFF, 0xCA11FFFF, 0xE10AFFFF, 0xED16FCFF, 0xFD15DFFF, 0xFD1BA4FF, 0xFF1271FF, 0xFE173BFF,
        };

        int[] yama255 = {
                0x00000000, 0x000000FF, 0x050403FF, 0x0F0D0CFF, 0x1A1817FF, 0x292625FF, 0x393534FF, 0x4A4645FF,
                0x5C5957FF, 0x726E6CFF, 0x878381FF, 0x9D9997FF, 0xB6B2B0FF, 0xCFCAC8FF, 0xE9E4E2FF, 0xFBFFFFFF,
                0x2B1C1BFF, 0x574241FF, 0x8C7472FF, 0xC9ADAAFF, 0x2B2320FF, 0x574D48FF, 0x8D817BFF, 0xCABCB6FF,
                0x292521FF, 0x56504AFF, 0x8A847DFF, 0xC7C0B8FF, 0x2D2824FF, 0x5B554FFF, 0x918B84FF, 0xD1CAC2FF,
                0x313429FF, 0x606456FF, 0x989D8CFF, 0xD7DCCAFF, 0x2A3226FF, 0x576252FF, 0x8D9987FF, 0xCDDAC6FF,
                0x203324FF, 0x4B6150FF, 0x7F9984FF, 0xBCD9C1FF, 0x243235FF, 0x4F6164FF, 0x85999DFF, 0xC3DADFFF,
                0x141A28FF, 0x394255FF, 0x6A758AFF, 0xA3AFC8FF, 0x1B1A2AFF, 0x434156FF, 0x74728BFF, 0xAEADC9FF,
                0x221C2EFF, 0x4C455CFF, 0x7E7691FF, 0xBAB1D0FF, 0x2C1D2EFF, 0x5A475CFF, 0x907A93FF, 0xCFB5D2FF,
                0x5D362DFF, 0x8C5E53FF, 0xC08C7FFF, 0x5D3F32FF, 0x8E6A5BFF, 0xC49C8BFF, 0x5E4536FF, 0x8F7160FF,
                0xC6A491FF, 0x624839FF, 0x927463FF, 0xC8A692FF, 0x624D3CFF, 0x927A67FF, 0xC8AD98FF, 0x645341FF,
                0x94826CFF, 0xCCB7A0FF, 0x635C41FF, 0x968E6FFF, 0xCEC5A3FF, 0x6E6B48FF, 0xA19D76FF, 0xDAD6ABFF,
                0x676F49FF, 0x9AA479FF, 0xD4DFB0FF, 0x627149FF, 0x93A478FF, 0xCBDEADFF, 0x546F46FF, 0x84A374FF,
                0xBADCA8FF, 0x466F43FF, 0x75A271FF, 0xA9DCA5FF, 0x406B55FF, 0x6F9F86FF, 0xA4D9BCFF, 0x4A6E69FF,
                0x78A09AFF, 0xADD9D2FF, 0x41636EFF, 0x6D949FFF, 0xA1CCD9FF, 0x324B64FF, 0x5C7795FF, 0x8BABCBFF,
                0x20285AFF, 0x424F8AFF, 0x6C7CBFFF, 0x30295BFF, 0x56518CFF, 0x8681C4FF, 0x3E2D5FFF, 0x675590FF,
                0x9783C6FF, 0x482D5EFF, 0x755690FF, 0xA886C7FF, 0x513060FF, 0x7F5990FF, 0xB58AC9FF, 0x5A3361FF,
                0x8B5E93FF, 0xC18ECAFF, 0x623251FF, 0x925A7DFF, 0xC889B0FF, 0x5D3239FF, 0x8D5A61FF, 0xC2878FFF,
                0x9E453AFF, 0xC76558FF, 0x9C5241FF, 0xC4735FFF, 0x9C5D46FF, 0xC78168FF, 0x9E6747FF, 0xC98C69FF,
                0xA16949FF, 0xCC8F6BFF, 0xA3704DFF, 0xCA936EFF, 0xA16F4CFF, 0xCC956FFF, 0x9D7750FF, 0xCAA075FF,
                0xA28157FF, 0xCCA87BFF, 0xA68A5EFF, 0xCFB182FF, 0xA6945EFF, 0xD3C085FF, 0xAEA766FF, 0xDAD38DFF,
                0xB2BE6FFF, 0xDCE995FF, 0xA9BC6BFF, 0xD2E791FF, 0x9BB86CFF, 0xC5E594FF, 0x97B966FF, 0xBFE38BFF,
                0x88B963FF, 0xAEE387FF, 0x72B564FF, 0x99E18AFF, 0x56B35FFF, 0x7DDF84FF, 0x62B28CFF, 0x8ADFB6FF,
                0x68B3A6FF, 0x8FDED0FF, 0x6DB5B5FF, 0x93DFDFFF, 0x5D98ACFF, 0x82C1D6FF, 0x487FA3FF, 0x6AA5CCFF,
                0x254A9AFF, 0x416CC3FF, 0x323896FF, 0x4D59BFFF, 0x493998FF, 0x6659C0FF, 0x603B9EFF, 0x825CC7FF,
                0x683D9DFF, 0x8B5EC7FF, 0x72419FFF, 0x9763CAFF, 0x7E419FFF, 0xA664CAFF, 0x8844A0FF, 0xB067CBFF,
                0x9544A6FF, 0xBF68D1FF, 0xA349A4FF, 0xCE6DCFFF, 0xA5457DFF, 0xCD65A0FF, 0xA0455BFF, 0xC9657CFF,
                0xDB5344FF, 0xDA6243FF, 0xDE704BFF, 0xDB7F52FF, 0xDA8455FF, 0xDD8657FF, 0xD98957FF, 0xDE8D5BFF,
                0xDD925DFF, 0xDF9D5EFF, 0xE1A563FF, 0xE3AE69FF, 0xE4B968FF, 0xE6C872FF, 0xEFDD7AFF, 0xF1F481FF,
                0xEEFE7FFF, 0xE6FD7CFF, 0xD2FD81FF, 0xC9F874FF, 0xBAF971FF, 0xA8F86EFF, 0x8FF570FF, 0x70F46BFF,
                0x64F390FF, 0x77F1BBFF, 0x7DF1D6FF, 0x7DF0EAFF, 0x7AE0F0FF, 0x67C7E4FF, 0x56AADFFF, 0x4281D9FF,
                0x2037D1FF, 0x4137D4FF, 0x593AD3FF, 0x713DD9FF, 0x853FD8FF, 0x8E43D8FF, 0x9941DCFF, 0xA445DFFF,
                0xAC47DEFF, 0xBA47DEFF, 0xCC4AE3FF, 0xD74CE4FF, 0xE44FCDFF, 0xE24D9CFF, 0xDE4E79FF, 0xDC4E55FF,
        };

        int[] yamb255 = {
                0x00000000, 0x000000FF, 0x050403FF, 0x0F0D0CFF, 0x1A1817FF, 0x292625FF, 0x393534FF, 0x4A4645FF,
                0x5C5957FF, 0x726E6CFF, 0x878381FF, 0x9D9997FF, 0xB6B2B0FF, 0xCFCAC8FF, 0xE9E4E2FF, 0xFBFFFFFF,
                0x271C1AFF, 0x524340FF, 0x887572FF, 0xC4AFABFF, 0x29211DFF, 0x554B46FF, 0x8C807AFF, 0xCBBDB7FF,
                0x27231EFF, 0x534E48FF, 0x8A847DFF, 0xC9C2BAFF, 0x262621FF, 0x54544CFF, 0x8B8C83FF, 0xCCCCC2FF,
                0x2E3226FF, 0x5D6153FF, 0x959A8AFF, 0xD5DBC9FF, 0x2A3226FF, 0x576252FF, 0x8D9987FF, 0xCDDAC6FF,
                0x1F2D24FF, 0x4B5D51FF, 0x809587FF, 0xBFD7C7FF, 0x243235FF, 0x4F6164FF, 0x85999DFF, 0xC3DADFFF,
                0x131A27FF, 0x394255FF, 0x6A758AFF, 0xA4B1CAFF, 0x1A1828FF, 0x424055FF, 0x75738DFF, 0xB1AFCCFF,
                0x211B29FF, 0x4C4456FF, 0x80768CFF, 0xBEB3CCFF, 0x261C2BFF, 0x54465AFF, 0x8B7A92FF, 0xCBB9D4FF,
                0x5D362DFF, 0x8C5E53FF, 0xC08C7FFF, 0x5B3D31FF, 0x8E6A5BFF, 0xC59D8CFF, 0x573E30FF, 0x8C6E5EFF,
                0xC8A692FF, 0x584434FF, 0x8B7360FF, 0xC4A994FF, 0x5E4A39FF, 0x917965FF, 0xC8AD98FF, 0x645341FF,
                0x94826CFF, 0xCCB7A0FF, 0x5D5842FF, 0x908A71FF, 0xCAC4A8FF, 0x686649FF, 0x9D9B7AFF, 0xD8D6B2FF,
                0x5D6748FF, 0x939F7AFF, 0xD0DDB5FF, 0x5F6D46FF, 0x91A276FF, 0xCADCACFF, 0x546F46FF, 0x84A374FF,
                0xBADCA8FF, 0x416440FF, 0x729A70FF, 0xACD9AAFF, 0x406B55FF, 0x6F9F86FF, 0xA4D9BCFF, 0x4A6E69FF,
                0x78A09AFF, 0xADD9D2FF, 0x41636EFF, 0x6D949FFF, 0xA1CCD9FF, 0x324B64FF, 0x5C7795FF, 0x8BABCBFF,
                0x1F2759FF, 0x424F8AFF, 0x6D7DC0FF, 0x2F2851FF, 0x595283FF, 0x8D85BEFF, 0x3E2D5AFF, 0x69568CFF,
                0x9A85C2FF, 0x482D5EFF, 0x755690FF, 0xA886C7FF, 0x4C2F59FF, 0x7D5B8CFF, 0xB38EC5FF, 0x533158FF,
                0x885F8DFF, 0xC394C9FF, 0x5F3451FF, 0x8F5C7EFF, 0xC48BB0FF, 0x5C3138FF, 0x8C5960FF, 0xC2878FFF,
                0x92423BFF, 0xC3695FFF, 0x9C5241FF, 0xC4735FFF, 0x9C5D46FF, 0xC78168FF, 0x925F44FF, 0xC68B6EFF,
                0x916346FF, 0xC69171FF, 0x936448FF, 0xC79373FF, 0x91684AFF, 0xC59775FF, 0x9D7750FF, 0xCAA075FF,
                0xA28157FF, 0xCCA87BFF, 0x977E59FF, 0xCBB087FF, 0x9B8C5CFF, 0xCFBF8BFF, 0xAEA766FF, 0xDAD38DFF,
                0xA1AA6BFF, 0xD7E29DFF, 0x9AAB6AFF, 0xCEE19BFF, 0x9CB269FF, 0xCBE394FF, 0x95B96DFF, 0xBCE492FF,
                0x81B566FF, 0xAAE28DFF, 0x69A55EFF, 0x99DB8DFF, 0x56A359FF, 0x86D988FF, 0x62B28CFF, 0x8ADFB6FF,
                0x5FA89CFF, 0x8DDBCEFF, 0x64AAABFF, 0x92DDDEFF, 0x5D98ACFF, 0x82C1D6FF, 0x4D7BA0FF, 0x72A5CDFF,
                0x24468BFF, 0x4972BFFF, 0x323896FF, 0x4D59BFFF, 0x43398BFF, 0x6861BDFF, 0x5A3B96FF, 0x8060C4FF,
                0x673C9CFF, 0x8C5FC8FF, 0x72419FFF, 0x9763CAFF, 0x77409CFF, 0xA266CAFF, 0x7E4094FF, 0xB06CC9FF,
                0x884394FF, 0xBB6FC9FF, 0x954898FF, 0xC873CAFF, 0x984572FF, 0xC86C9DFF, 0xA0455BFF, 0xC9657CFF,
                0xD55442FF, 0xDA6243FF, 0xDA724BFF, 0xD07D55FF, 0xCC7F55FF, 0xCF8257FF, 0xCC8559FF, 0xCF885BFF,
                0xD49262FF, 0xDD9E65FF, 0xE1A563FF, 0xDAAE6EFF, 0xD4AF6DFF, 0xDDC374FF, 0xEFDD7AFF, 0xE6EB81FF,
                0xDFEC80FF, 0xD5F182FF, 0xD2F37AFF, 0xC7F87CFF, 0xBAF971FF, 0xA2F673FF, 0x8CEA70FF, 0x6FE46FFF,
                0x65EC92FF, 0x7AEDBEFF, 0x7CE5CCFF, 0x7DF0EAFF, 0x7CD5E0FF, 0x6FC5E4FF, 0x5DA5D5FF, 0x4481D3FF,
                0x223DC3FF, 0x4137D4FF, 0x5640CAFF, 0x6F43C9FF, 0x8142D2FF, 0x8E43D8FF, 0x9941DCFF, 0xA445D8FF,
                0xAA4BD3FF, 0xAE4FD1FF, 0xBE51D4FF, 0xC752D3FF, 0xE44FCDFF, 0xD05196FF, 0xDE4E79FF, 0xCD5057FF,
        };
        int[] yamoc255 = {
                0x00000000, 0x000000FF, 0x050403FF, 0x0F0D0CFF, 0x1A1817FF, 0x292625FF, 0x393534FF, 0x4A4645FF,
                0x5C5957FF, 0x726E6CFF, 0x878381FF, 0x9D9997FF, 0xB6B2B0FF, 0xCFCAC8FF, 0xE9E4E2FF, 0xFBFFFFFF,
                0x281D1EFF, 0x524445FF, 0x867577FF, 0xC2AFB0FF, 0x272523FF, 0x524E4DFF, 0x878381FF, 0xC3BEBCFF,
                0x282524FF, 0x54504FFF, 0x888482FF, 0xC5C1BEFF, 0x2A2A24FF, 0x57574FFF, 0x8D8D84FF, 0xCCCCC2FF,
                0x2F342DFF, 0x5E655BFF, 0x959D92FF, 0xD4DDD0FF, 0x2C312AFF, 0x5A6057FF, 0x90988DFF, 0xD0D8CCFF,
                0x233128FF, 0x4E6054FF, 0x82978AFF, 0xBFD7C7FF, 0x293131FF, 0x555F5FFF, 0x8C9898FF, 0xCCD8D8FF,
                0x151B25FF, 0x3B4351FF, 0x6B7586FF, 0xA5AFC3FF, 0x1C1A27FF, 0x454252FF, 0x767286FF, 0xB1ADC4FF,
                0x231C2BFF, 0x4D4557FF, 0x80768CFF, 0xBCB1CAFF, 0x28202CFF, 0x544A58FF, 0x897E8FFF, 0xC7BACDFF,
                0x583832FF, 0x876159FF, 0xBA8E85FF, 0x594137FF, 0x886C61FF, 0xBD9E91FF, 0x5A473BFF, 0x897365FF,
                0xC0A797FF, 0x5D4A3EFF, 0x8D7669FF, 0xC1A898FF, 0x5C4E41FF, 0x8C7C6CFF, 0xC2AF9EFF, 0x5E5546FF,
                0x8E8472FF, 0xC5BAA6FF, 0x605C4BFF, 0x928E7AFF, 0xC9C5AFFF, 0x6A6B53FF, 0x9D9E82FF, 0xD6D7B8FF,
                0x676E54FF, 0x9BA285FF, 0xD4DDBCFF, 0x636F54FF, 0x94A384FF, 0xCCDCBAFF, 0x556E50FF, 0x84A17FFF,
                0xBBDAB5FF, 0x4C6C4DFF, 0x7B9F7CFF, 0xB1D8B1FF, 0x49685AFF, 0x799C8BFF, 0xAED5C2FF, 0x4F6C69FF,
                0x7D9E9AFF, 0xB3D7D2FF, 0x486269FF, 0x75929AFF, 0xAACAD2FF, 0x364B5BFF, 0x60788BFF, 0x90ABC0FF,
                0x1F2B4FFF, 0x42527DFF, 0x6C7FB0FF, 0x302C51FF, 0x56547FFF, 0x8684B5FF, 0x3C3058FF, 0x665887FF,
                0x9586BCFF, 0x443157FF, 0x705B87FF, 0xA28ABDFF, 0x4C345CFF, 0x795D8CFF, 0xAD8FC4FF, 0x55375DFF,
                0x85628FFF, 0xBA93C5FF, 0x5C3651FF, 0x8B5E7EFF, 0xC08DB0FF, 0x583639FF, 0x865E61FF, 0xB98B8FFF,
                0x914D45FF, 0xB96D64FF, 0x92584CFF, 0xB9796BFF, 0x926151FF, 0xBB8674FF, 0x976A52FF, 0xC18F75FF,
                0x966E55FF, 0xBF9478FF, 0x9B7359FF, 0xC2967AFF, 0x9A7258FF, 0xC4987BFF, 0x96795BFF, 0xC1A282FF,
                0x9F8263FF, 0xC8A988FF, 0xA28B6AFF, 0xCBB28EFF, 0xA2956AFF, 0xCEC092FF, 0xADA679FF, 0xD8D2A1FF,
                0xB1BD83FF, 0xDAE8A9FF, 0xA7BB7FFF, 0xD0E5A5FF, 0xA1B479FF, 0xCCE1A2FF, 0x96B87AFF, 0xBDE29FFF,
                0x8CB676FF, 0xB3E09CFF, 0x7AB270FF, 0xA1DE97FF, 0x66AF6BFF, 0x8DDA91FF, 0x6DAF92FF, 0x95DBBBFF,
                0x76AFA6FF, 0x9DDAD0FF, 0x7BB1B5FF, 0xA1DBDFFF, 0x6696A6FF, 0x8BBFD0FF, 0x597D99FF, 0x7CA2C1FF,
                0x304B8DFF, 0x4D6CB4FF, 0x353C89FF, 0x515CB1FF, 0x483E8CFF, 0x655DB2FF, 0x5C4191FF, 0x7D62B9FF,
                0x644390FF, 0x8664B8FF, 0x6E4792FF, 0x9369BBFF, 0x764997FF, 0x9C6CC1FF, 0x834A97FF, 0xAB6DC1FF,
                0x8E4D99FF, 0xB770C2FF, 0x9A51A0FF, 0xC475CBFF, 0x995079FF, 0xBF6F9CFF, 0x964D5CFF, 0xBE6D7DFF,
                0xCF5D4BFF, 0xCC6B51FF, 0xCF7959FF, 0xD08560FF, 0xCF8A62FF, 0xD28C65FF, 0xCE8E65FF, 0xD29268FF,
                0xD0976BFF, 0xD5A172FF, 0xD6A877FF, 0xDBB177FF, 0xDDBA7DFF, 0xDFC987FF, 0xE8DE90FF, 0xEFF298FF,
                0xECFC96FF, 0xE4FC94FF, 0xD9F990FF, 0xCDF58BFF, 0xBEF689FF, 0xADF585FF, 0x98F27FFF, 0x83EF7AFF,
                0x79EE9DFF, 0x8DECC1FF, 0x8EEDD6FF, 0x95EBE9FF, 0x8CDDEAFF, 0x7AC4DEFF, 0x6AA7D4FF, 0x4983CAFF,
                0x233FBFFF, 0x3F41C2FF, 0x5742C5FF, 0x6D47C6FF, 0x8049CAFF, 0x8A4CCAFF, 0x914DCFFF, 0x9C51D1FF,
                0xA553D0FF, 0xB353D0FF, 0xC058DAFF, 0xCB5BDBFF, 0xD85DC3FF, 0xD45A9DFF, 0xD45779FF, 0xD0585BFF,
        };

        int[] yamod255 = {
                0x00000000, 0x000000FF, 0x050403FF, 0x0F0D0CFF, 0x1A1817FF, 0x292625FF, 0x393534FF, 0x4A4645FF,
                0x5C5957FF, 0x726E6CFF, 0x878381FF, 0x9D9997FF, 0xB6B2B0FF, 0xCFCAC8FF, 0xE9E4E2FF, 0xFBFFFFFF,
                0x281D1EFF, 0x524445FF, 0x867577FF, 0xC2AFB0FF, 0x272523FF, 0x524E4DFF, 0x878381FF, 0xC3BEBCFF,
                0x282524FF, 0x54504FFF, 0x888482FF, 0xC5C1BEFF, 0x2A2A24FF, 0x57574FFF, 0x8D8D84FF, 0xCCCCC2FF,
                0x2F342DFF, 0x5E655BFF, 0x959D92FF, 0xD4DDD0FF, 0x2A342BFF, 0x576358FF, 0x8D9B8EFF, 0xCBDACCFF,
                0x202E25FF, 0x435449FF, 0x6D8174FF, 0x9EB4A5FF, 0x293131FF, 0x555F5FFF, 0x8C9898FF, 0xCCD8D8FF,
                0x151B25FF, 0x3B4351FF, 0x6B7586FF, 0xA5AFC3FF, 0x1C1A27FF, 0x454252FF, 0x767286FF, 0xB1ADC4FF,
                0x231C2BFF, 0x4D4557FF, 0x80768CFF, 0xBCB1CAFF, 0x28202CFF, 0x544A58FF, 0x897E8FFF, 0xC7BACDFF,
                0x583832FF, 0x876159FF, 0xBA8E85FF, 0x594137FF, 0x886C61FF, 0xBD9E91FF, 0x5A473BFF, 0x897365FF,
                0xC0A797FF, 0x5D4A3EFF, 0x8D7669FF, 0xC1A898FF, 0x5C4E41FF, 0x8C7C6CFF, 0xC2AF9EFF, 0x5E5546FF,
                0x8E8472FF, 0xC5BAA6FF, 0x605C4BFF, 0x928E7AFF, 0xC9C5AFFF, 0x6A6B53FF, 0x9D9E82FF, 0xD6D7B8FF,
                0x667357FF, 0x97A586FF, 0xCFDFBCFF, 0x5B6D51FF, 0x8CA281FF, 0xC3DBB7FF, 0x536C4EFF, 0x829F7DFF,
                0xB8D8B2FF, 0x446A4AFF, 0x729D78FF, 0xA6D6ADFF, 0x476658FF, 0x6A8C7BFF, 0x90B5A3FF, 0x44605DFF,
                0x62807CFF, 0x82A39FFF, 0x486269FF, 0x75929AFF, 0xAACAD2FF, 0x364B5BFF, 0x60788BFF, 0x90ABC0FF,
                0x1F2B4FFF, 0x42527DFF, 0x6C7FB0FF, 0x302C51FF, 0x56547FFF, 0x8684B5FF, 0x3C3058FF, 0x665887FF,
                0x9586BCFF, 0x443157FF, 0x705B87FF, 0xA28ABDFF, 0x4C345CFF, 0x795D8CFF, 0xAD8FC4FF, 0x55375DFF,
                0x85628FFF, 0xBA93C5FF, 0x5C3651FF, 0x8B5E7EFF, 0xC08DB0FF, 0x583639FF, 0x865E61FF, 0xB98B8FFF,
                0x914D45FF, 0xB96D64FF, 0x92584CFF, 0xB9796BFF, 0x926151FF, 0xBB8674FF, 0x976A52FF, 0xC18F75FF,
                0x966E55FF, 0xBF9478FF, 0x9B7359FF, 0xC2967AFF, 0x9A7258FF, 0xC4987BFF, 0x96795BFF, 0xC1A282FF,
                0x9F8263FF, 0xC8A988FF, 0xA28B6AFF, 0xCBB28EFF, 0xA2956AFF, 0xCEC092FF, 0xADA679FF, 0xD8D2A1FF,
                0xB1BD83FF, 0xDAE8A9FF, 0xA6BA7EFF, 0xD0E5A5FF, 0x9AB578FF, 0xC4E2A0FF, 0x93B577FF, 0xBADF9DFF,
                0x81B271FF, 0xAADF99FF, 0x72B36FFF, 0x97DD94FF, 0x5DA86BFF, 0x72C07FFF, 0x669D83FF, 0x6FA88CFF,
                0x6AA299FF, 0x7FB9AFFF, 0x7BB1B5FF, 0xA1DBDFFF, 0x6696A6FF, 0x8BBFD0FF, 0x597D99FF, 0x7CA2C1FF,
                0x304B8DFF, 0x4D6CB4FF, 0x353C89FF, 0x515CB1FF, 0x483E8CFF, 0x655DB2FF, 0x5C4191FF, 0x7D62B9FF,
                0x644390FF, 0x8664B8FF, 0x6E4792FF, 0x9369BBFF, 0x764997FF, 0x9C6CC1FF, 0x834A97FF, 0xAB6DC1FF,
                0x8E4D99FF, 0xB770C2FF, 0x9A51A0FF, 0xC475CBFF, 0x995079FF, 0xBF6F9CFF, 0x964D5CFF, 0xBE6D7DFF,
                0xCF5D4BFF, 0xCC6B51FF, 0xCF7959FF, 0xD08560FF, 0xCF8A62FF, 0xD28C65FF, 0xCE8E65FF, 0xD29268FF,
                0xD0976BFF, 0xD5A172FF, 0xD6A877FF, 0xDBB177FF, 0xDDBA7DFF, 0xDFC987FF, 0xE8DE90FF, 0xEFF298FF,
                0xECFC96FF, 0xE2FA92FF, 0xD2FA8FFF, 0xC6F68AFF, 0xB5F586FF, 0xA2F381FF, 0x87F47EFF, 0x76F182FF,
                0x6FDD95FF, 0x6ECEABFF, 0x72CFB9FF, 0x86D9D8FF, 0x8CDDEAFF, 0x7AC4DEFF, 0x6AA7D4FF, 0x4983CAFF,
                0x233FBFFF, 0x3F41C2FF, 0x5742C5FF, 0x6D47C6FF, 0x8049CAFF, 0x8A4CCAFF, 0x914DCFFF, 0x9C51D1FF,
                0xA553D0FF, 0xB353D0FF, 0xC058DAFF, 0xCB5BDBFF, 0xD85DC3FF, 0xD45A9DFF, 0xD45779FF, 0xD0585BFF,
        };

        int[] yamoe255 = {
                0x00000000, 0x000000FF, 0x050403FF, 0x0F0D0CFF, 0x1A1817FF, 0x292625FF, 0x393534FF, 0x4A4645FF,
                0x5C5957FF, 0x726E6CFF, 0x878381FF, 0x9D9997FF, 0xB6B2B0FF, 0xCFCAC8FF, 0xE9E4E2FF, 0xFBFFFFFF,
                0x2B1C1BFF, 0x574241FF, 0x8C7472FF, 0xC9ADAAFF, 0x2D231CFF, 0x594D44FF, 0x8F8176FF, 0xCCBCB0FF,
                0x2D241DFF, 0x5B4F46FF, 0x908277FF, 0xCFBEB2FF, 0x2E2820FF, 0x5C554BFF, 0x938B7EFF, 0xD3CABCFF,
                0x323425FF, 0x626451FF, 0x9A9D87FF, 0xD9DCC4FF, 0x293523FF, 0x56644FFF, 0x8C9C83FF, 0xCADCC0FF,
                0x1D2F21FF, 0x405645FF, 0x6A836FFF, 0x9BB6A0FF, 0x1F3335FF, 0x4A6264FF, 0x809B9EFF, 0xBDDCDFFF,
                0x0F1B2BFF, 0x334459FF, 0x637690FF, 0x9BB1CEFF, 0x1D182CFF, 0x45405AFF, 0x777090FF, 0xB2AACFFF,
                0x251B2EFF, 0x4F435BFF, 0x837491FF, 0xBFAFD0FF, 0x2C1D2EFF, 0x5A475CFF, 0x907A93FF, 0xCFB5D2FF,
                0x662F28FF, 0x98584EFF, 0xCE8579FF, 0x663B28FF, 0x986650FF, 0xD0977EFF, 0x68412CFF, 0x9A6C54FF,
                0xD3A085FF, 0x68452FFF, 0x9A7258FF, 0xD0A386FF, 0x6A4A2DFF, 0x9C7756FF, 0xD3AA85FF, 0x6C5131FF,
                0x9E7F5BFF, 0xD7B58DFF, 0x6A5A36FF, 0x9E8B63FF, 0xD7C296FF, 0x6E6C3DFF, 0xA19F6AFF, 0xDAD89EFF,
                0x67753BFF, 0x98A868FF, 0xD0E29CFF, 0x59703BFF, 0x8BA56AFF, 0xC2DF9EFF, 0x4C6F39FF, 0x7BA366FF,
                0xB0DD99FF, 0x366F35FF, 0x64A362FF, 0x97DD94FF, 0x346C4FFF, 0x569271FF, 0x7CBC98FF, 0x2B665DFF,
                0x49877DFF, 0x69AAA0FF, 0x326672FF, 0x5E97A5FF, 0x92CFDFFF, 0x294B6CFF, 0x52789FFF, 0x81ACD7FF,
                0x1D2565FF, 0x3E4D97FF, 0x667ACEFF, 0x312663FF, 0x584E95FF, 0x877ECEFF, 0x422866FF, 0x6C5199FF,
                0x9D7ED0FF, 0x492A66FF, 0x765399FF, 0xA983D1FF, 0x552B67FF, 0x845499FF, 0xBA85D3FF, 0x5E2E69FF,
                0x90599CFF, 0xC789D4FF, 0x692B54FF, 0x9B5382FF, 0xD382B5FF, 0x672B34FF, 0x99535CFF, 0xCF8088FF,
                0xB0342EFF, 0xDB554BFF, 0xB1432EFF, 0xDC654CFF, 0xB0512CFF, 0xDD754EFF, 0xB25D33FF, 0xDE8155FF,
                0xB3612EFF, 0xDF8650FF, 0xB56832FF, 0xDE8B53FF, 0xB36731FF, 0xE08C54FF, 0xB06F35FF, 0xDF975AFF,
                0xB47B35FF, 0xE0A259FF, 0xB4863CFF, 0xDEAD5FFF, 0xB0923AFF, 0xDEBE62FF, 0xB4A740FF, 0xE1D468FF,
                0xB4C048FF, 0xDDEC6FFF, 0xA7BD4CFF, 0xD0EA73FF, 0x95BA47FF, 0xBFE86FFF, 0x82BE46FF, 0xA8E96BFF,
                0x6EBA40FF, 0x96E868FF, 0x50BD47FF, 0x76E86BFF, 0x30B24CFF, 0x47CA5FFF, 0x23A979FF, 0x30B482FF,
                0x2BAD9AFF, 0x44C4B1FF, 0x38BDC1FF, 0x63E7ECFF, 0x319DBCFF, 0x5AC7E8FF, 0x2D80B7FF, 0x51A7E2FF,
                0x1D44B0FF, 0x3967DCFF, 0x322CAFFF, 0x4B50DBFF, 0x4B2BB2FF, 0x684DDDFF, 0x662CB3FF, 0x8850DFFF,
                0x6D2FB3FF, 0x9052DFFF, 0x7A31B5FF, 0xA155E2FF, 0x8631B5FF, 0xAE56E2FF, 0x9431B1FF, 0xBE56DEFF,
                0x9F35B3FF, 0xCA5AE0FF, 0xAE36B6FF, 0xDB5CE3FF, 0xB33581FF, 0xDD56A4FF, 0xB33156FF, 0xDF5376FF,
                0xFD2918FF, 0xFA4411FF, 0xFD580BFF, 0xFC6A1AFF, 0xF8721EFF, 0xFD740EFF, 0xF9770FFF, 0xFA7E17FF,
                0xFA831BFF, 0xFD8F14FF, 0xFB9A1EFF, 0xFDA514FF, 0xF7B321FF, 0xF8C41FFF, 0xFDDC27FF, 0xFBF42CFF,
                0xEDFF21FF, 0xDAFF2FFF, 0xC9FF29FF, 0xAFFF21FF, 0x94FF19FF, 0x7AFF27FF, 0x49FF21FF, 0x00FF3CFF,
                0x00EE6EFF, 0x00DF9BFF, 0x00DFBBFF, 0x00EAE0FF, 0x00EBFFFF, 0x00CEFFFF, 0x00ADFFFF, 0x007EFFFF,
                0x2200FFFF, 0x4300FFFF, 0x5F00FFFF, 0x7900FFFF, 0x8F05FFFF, 0x9B13FEFF, 0xA600FFFF, 0xB510FFFF,
                0xBD15FFFF, 0xCA11FFFF, 0xE10AFFFF, 0xED16FCFF, 0xFD15DFFF, 0xFD1BA4FF, 0xFF1271FF, 0xFE173BFF,
        };

        int[] yamof255 = {
                0x00000000, 0x000000FF, 0x050403FF, 0x0F0D0CFF, 0x1A1817FF, 0x292625FF, 0x393534FF, 0x4A4645FF,
                0x5C5957FF, 0x726E6CFF, 0x878381FF, 0x9D9997FF, 0xB6B2B0FF, 0xCFCAC8FF, 0xE9E4E2FF, 0xFBFFFFFF,
                0x361513FF, 0x663B38FF, 0x9F6B67FF, 0xDFA49EFF, 0x361E14FF, 0x66473AFF, 0x9F7A6BFF, 0xDFB5A3FF,
                0x352115FF, 0x654B3CFF, 0x9D7E6CFF, 0xDDBAA6FF, 0x322813FF, 0x61553CFF, 0x998B6EFF, 0xDACAA9FF,
                0x303617FF, 0x5F6742FF, 0x96A076FF, 0xD5E0B1FF, 0x273716FF, 0x536740FF, 0x88A072FF, 0xC5E0ADFF,
                0x0D3315FF, 0x325B37FF, 0x5B8960FF, 0x8ABD8FFF, 0x113539FF, 0x3D6569FF, 0x729EA3FF, 0xAEE0E6FF,
                0x09183BFF, 0x2C416DFF, 0x5974A8FF, 0x90B0EAFF, 0x1F1338FF, 0x483B6AFF, 0x796CA3FF, 0xB4A5E4FF,
                0x2B133AFF, 0x583B6BFF, 0x8D6CA4FF, 0xCBA6E5FF, 0x361438FF, 0x673D68FF, 0xA06FA2FF, 0xE1AAE2FF,
                0x752317FF, 0xAA4D3DFF, 0xE37A66FF, 0x733316FF, 0xA85E3EFF, 0xE38F6BFF, 0x723B1AFF, 0xA66743FF,
                0xE29A72FF, 0x73401DFF, 0xA76D46FF, 0xDF9E73FF, 0x754519FF, 0xA97243FF, 0xE2A571FF, 0x744E1EFF,
                0xA87C49FF, 0xE2B179FF, 0x71581CFF, 0xA68A4AFF, 0xE0C17BFF, 0x716C21FF, 0xA49F50FF, 0xDED983FF,
                0x697626FF, 0x99A954FF, 0xD1E487FF, 0x53731FFF, 0x84A950FF, 0xBAE483FF, 0x3C7425FF, 0x6AA953FF,
                0x9FE485FF, 0x1F7321FF, 0x50A84FFF, 0x84E381FF, 0x0B714AFF, 0x3A986DFF, 0x61C393FF, 0x006962FF,
                0x2C8B83FF, 0x4FAFA6FF, 0x1D6877FF, 0x4D9AABFF, 0x81D3E5FF, 0x114C79FF, 0x3E7AAEFF, 0x6DAEE8FF,
                0x1A1B7CFF, 0x3646B2FF, 0x5D75ECFF, 0x341B75FF, 0x5A46ABFF, 0x8976E8FF, 0x471B79FF, 0x7246AFFF,
                0xA275E9FF, 0x511C75FF, 0x8048ABFF, 0xB478E5FF, 0x5C1D76FF, 0x8D48ABFF, 0xC57AE7FF, 0x681D78FF,
                0x9D4BAEFF, 0xD67BE9FF, 0x741B5BFF, 0xAA468AFF, 0xE474BEFF, 0x751C2FFF, 0xAB4656FF, 0xE47382FF,
                0xBB241FFF, 0xE8493EFF, 0xBA3B1EFF, 0xE65D3EFF, 0xB84A24FF, 0xE66F46FF, 0xB85922FF, 0xE67E46FF,
                0xBB5B25FF, 0xE98048FF, 0xBF6120FF, 0xEA8543FF, 0xBA631FFF, 0xE78844FF, 0xB76B23FF, 0xE7944BFF,
                0xBB7722FF, 0xE89F49FF, 0xBC832AFF, 0xE7AA4FFF, 0xB49126FF, 0xE2BD51FF, 0xB9A72CFF, 0xE5D357FF,
                0xB9C034FF, 0xE2EB5DFF, 0xA3C02FFF, 0xCDEC5AFF, 0x8FBD33FF, 0xB8EB5EFF, 0x7BC133FF, 0xA1EC5BFF,
                0x5EBF2CFF, 0x87ED57FF, 0x3AC135FF, 0x63EC5BFF, 0x00B63CFF, 0x2ACE51FF, 0x00AC74FF, 0x0CB77DFF,
                0x00B09BFF, 0x27C7B1FF, 0x29BEC2FF, 0x58E9ECFF, 0x1C9EC2FF, 0x4CC9EEFF, 0x1681C1FF, 0x41A7EDFF,
                0x0A3FC2FF, 0x2964F0FF, 0x3121C1FF, 0x4749EFFF, 0x4D20BFFF, 0x6946EBFF, 0x6A1EC0FF, 0x8C46EEFF,
                0x7122C0FF, 0x9549EDFF, 0x811FC2FF, 0xA849F0FF, 0x8E21BEFF, 0xB74AECFF, 0x9725BFFF, 0xC14DEDFF,
                0xA81FC0FF, 0xD54AEEFF, 0xB626BFFF, 0xE450EDFF, 0xBE2285FF, 0xE947A8FF, 0xBE2250FF, 0xEB4870FF,
                0xFD2918FF, 0xFA4411FF, 0xFD580BFF, 0xFC6A1AFF, 0xF8721EFF, 0xFD740EFF, 0xF9770FFF, 0xFA7E17FF,
                0xFA831BFF, 0xFD8F14FF, 0xFB9A1EFF, 0xFDA514FF, 0xF7B321FF, 0xF8C41FFF, 0xFDDC27FF, 0xFBF42CFF,
                0xEDFF21FF, 0xDAFF2FFF, 0xC9FF29FF, 0xAFFF21FF, 0x94FF19FF, 0x7AFF27FF, 0x49FF21FF, 0x00FF3CFF,
                0x00EE6EFF, 0x00DF9BFF, 0x00DFBBFF, 0x00EAE0FF, 0x00EBFFFF, 0x00CEFFFF, 0x00ADFFFF, 0x007EFFFF,
                0x2200FFFF, 0x4300FFFF, 0x5F00FFFF, 0x7900FFFF, 0x8F05FFFF, 0x9B13FEFF, 0xA600FFFF, 0xB510FFFF,
                0xBD15FFFF, 0xCA11FFFF, 0xE10AFFFF, 0xED16FCFF, 0xFD15DFFF, 0xFD1BA4FF, 0xFF1271FF, 0xFE173BFF,
        };

        int[] yamog255 = {
                0x00000000, 0x000000FF, 0x050403FF, 0x0F0D0CFF, 0x1A1817FF, 0x292625FF, 0x393534FF, 0x4A4645FF,
                0x5C5957FF, 0x726E6CFF, 0x878381FF, 0x9D9997FF, 0xB6B2B0FF, 0xCFCAC8FF, 0xE9E4E2FF, 0xFBFFFFFF,
                0x480000FF, 0x7F2823FF, 0xBF5950FF, 0xFF9184FF, 0x3E1900FF, 0x71422AFF, 0xAD7559FF, 0xEEB090FF,
                0x491000FF, 0x813D00FF, 0xBE703AFF, 0xFFAB70FF, 0x422000FF, 0x774E00FF, 0xB38331FF, 0xF8C26BFF,
                0x333700FF, 0x626900FF, 0x99A340FF, 0xD8E47AFF, 0x1D3B00FF, 0x476C17FF, 0x7BA74DFF, 0xB7E985FF,
                0x003800FF, 0x076121FF, 0x3D9149FF, 0x6DC777FF, 0x003C42FF, 0x007074FF, 0x00ACB0FF, 0x5FF0F4FF,
                0x000E51FF, 0x1B3D8AFF, 0x4672CAFF, 0x7BAEFFFF, 0x26004BFF, 0x4F2F82FF, 0x8160BFFF, 0xBD9AFFFF,
                0x310049FF, 0x60307FFF, 0x9661BCFF, 0xD69BFFFF, 0x3D0044FF, 0x713078FF, 0xAE62B4FF, 0xF19CF8FF,
                0x7F1500FF, 0xB74330FF, 0xF27059FF, 0x7F2800FF, 0xB75429FF, 0xF48657FF, 0x723B1AFF, 0xA66743FF,
                0xE29A72FF, 0x68452FFF, 0x9A7258FF, 0xD0A386FF, 0x813E00FF, 0xB76B23FF, 0xF39E54FF, 0x7F4900FF,
                0xB5771FFF, 0xF1AD54FF, 0x7A5600FF, 0xB0881DFF, 0xEBBF55FF, 0x776B00FF, 0xAB9F22FF, 0xE5D95BFF,
                0x687700FF, 0x99AB33FF, 0xD0E669FF, 0x507500FF, 0x81AB38FF, 0xB6E76CFF, 0x387600FF, 0x66AB3CFF,
                0x9AE770FF, 0x007709FF, 0x3DAC40FF, 0x72E873FF, 0x007540FF, 0x009E62FF, 0x42C988FF, 0x006F63FF,
                0x009284FF, 0x00B7A7FF, 0x006D8BFF, 0x00A0C1FF, 0x42DAFEFF, 0x004B8FFF, 0x197AC7FF, 0x4FAFFFFF,
                0x1A1584FF, 0x3444BBFF, 0x5A73F7FF, 0x361081FF, 0x5B40B9FF, 0x8972F7FF, 0x4B0F81FF, 0x7740B8FF,
                0xA86FF3FF, 0x540D80FF, 0x8440B9FF, 0xB871F5FF, 0x60117EFF, 0x9142B4FF, 0xCA73F1FF, 0x6D137CFF,
                0xA244B3FF, 0xDC75EEFF, 0x7B065FFF, 0xB23C8EFF, 0xED6BC3FF, 0x80002AFF, 0xB93850FF, 0xF5667CFF,
                0xC01C16FF, 0xED4437FF, 0xC13212FF, 0xEE5636FF, 0xBE460BFF, 0xED6A36FF, 0xAC603AFF, 0xD9845CFF,
                0xAD6435FF, 0xD98957FF, 0xC45E12FF, 0xF0813AFF, 0xC15F00FF, 0xEF8532FF, 0xBE6700FF, 0xEF9039FF,
                0xBF7600FF, 0xEC9D36FF, 0xC28100FF, 0xEDA832FF, 0xB89000FF, 0xE7BC3EFF, 0xB9A700FF, 0xE5D443FF,
                0xB8C113FF, 0xE2EC49FF, 0xA8BF00FF, 0xD2EC45FF, 0x8EBE16FF, 0xB8EC4BFF, 0x7AC214FF, 0xA0ED47FF,
                0x5AC01EFF, 0x82EE4EFF, 0x33C22AFF, 0x5DEE53FF, 0x00B733FF, 0x1ECF49FF, 0x00AF74FF, 0x00BA7DFF,
                0x00B39BFF, 0x00CBB1FF, 0x00C2C8FF, 0x1FEEF3FF, 0x00A0CDFF, 0x24CBFAFF, 0x0081CBFF, 0x2DA8F8FF,
                0x083DC7FF, 0x2762F5FF, 0x311DC5FF, 0x4747F4FF, 0x4D1DC4FF, 0x6844F0FF, 0x691BC5FF, 0x8B44F3FF,
                0x741EC0FF, 0x9846EDFF, 0x811FC2FF, 0xA849F0FF, 0x8D1FC3FF, 0xB649F1FF, 0x9A20BFFF, 0xC54AECFF,
                0xA81FC0FF, 0xD54AEEFF, 0xB920BFFF, 0xE74CECFF, 0xC11C84FF, 0xED43A8FF, 0xC01C50FF, 0xEE4370FF,
                0xFD2918FF, 0xFA4411FF, 0xFD580BFF, 0xDF7C52FF, 0xE0814EFF, 0xF6792EFF, 0xCE8E65FF, 0xFA7E17FF,
                0xFA831BFF, 0xFD8F14FF, 0xFB9A1EFF, 0xFDA514FF, 0xF7B321FF, 0xF8C41FFF, 0xFDDC27FF, 0xFBF42CFF,
                0xEDFF21FF, 0xDAFF2FFF, 0xC9FF29FF, 0xAFFF21FF, 0x94FF19FF, 0x7AFF27FF, 0x49FF21FF, 0x00FF3CFF,
                0x00EE6EFF, 0x00DF9BFF, 0x00DFBBFF, 0x00EAE0FF, 0x00EBFFFF, 0x00CEFFFF, 0x00ADFFFF, 0x007EFFFF,
                0x2200FFFF, 0x4300FFFF, 0x5F00FFFF, 0x7900FFFF, 0x8F05FFFF, 0x9B13FEFF, 0xA600FFFF, 0xB510FFFF,
                0xBD15FFFF, 0xCA11FFFF, 0xE10AFFFF, 0xED16FCFF, 0xFD15DFFF, 0xFD1BA4FF, 0xFF1271FF, 0xFE173BFF,
        };

        int[] clayton255 = new int[] {
                0x00000000, 0x000000FF, 0x282828FF, 0x585858FF, 0x868686FF, 0xA2A2A2FF, 0xCBCBCBFF, 0xFFFFFFFF,
                0xA6D755FF, 0x8ABF5EFF, 0x7AA221FF, 0x6E8A31FF, 0x0A4111FF, 0x0F661DFF, 0x147E25FF, 0x229E35FF,
                0x42C372FF, 0x8CE7A6FF, 0x78FAE6FF, 0x00C7A5FF, 0x009282FF, 0x163135FF, 0x21526BFF, 0x3B768FFF,
                0x53A1ADFF, 0x8CDAFFFF, 0x50AAF7FF, 0x3E83EBFF, 0x354AD7FF, 0x1D2DAAFF, 0x152135FF, 0x66397EFF,
                0x7E5596FF, 0xA68ABFFF, 0xDFBFEFFF, 0xC772FFFF, 0x9245E7FF, 0x6E05C3FF, 0x350082FF, 0x721C2FFF,
                0xB22E69FF, 0xE54286FF, 0xFF6EAFFF, 0xFF9AC7FF, 0xFFD7F3FF, 0xE3B3C3FF, 0xCB96A2FF, 0xAA768AFF,
                0xCF4929FF, 0xF3820DFF, 0xFFAA0DFF, 0xFFD3A6FF, 0xFFBB8AFF, 0xE7A67AFF, 0xBB7251FF, 0x82491DFF,
                0x513115FF, 0xB7515AFF, 0x6E5A51FF, 0x8A7A5AFF, 0xB79E5EFF, 0xDFC721FF, 0xFFDF00FF, 0xFFF3B3FF,
                0xD79B0FFF, 0x8F7357FF, 0xCBAA89FF, 0xF5E1D2FF, 0x3B2D1FFF, 0xBF7F3FFF, 0xE3C7ABFF, 0xB45A00FF,
                0xDA6E0AFF, 0xF5B99BFF, 0xA04B05FF, 0x7E6E60FF, 0xE19B7DFF, 0xD08A74FF, 0xA0695FFF, 0xF55A32FF,
                0x621800FF, 0xFF3C0AFF, 0x401811FF, 0x73413CFF, 0xDA2010FF, 0xA5140AFF, 0xFF0000FF, 0x551414FF,
                0xFF6262FF, 0xFF8181FF, 0x8E5555FF, 0x573B3BFF, 0xE3ABABFF, 0xBD1039FF, 0x911437FF, 0x98344DFF,
                0xFFC0CBFF, 0xF8D2DAFF, 0x4B2837FF, 0xE61E78FF, 0x551937FF, 0x280A1EFF, 0x321623FF, 0xC87DA0FF,
                0xC35A91FF, 0xD7A0BEFF, 0xFF50BFFF, 0xA01982FF, 0xC78FB9FF, 0xEBACE1FF, 0xF500F5FF, 0x7F007FFF,
                0x641464FF, 0xBF3FBFFF, 0xFF52FFFF, 0xAB57ABFF, 0xFD81FFFF, 0x3C233CFF, 0x724072FF, 0x8F578FFF,
                0xAB73ABFF, 0xDA20E0FF, 0x463246FF, 0xBD10C5FF, 0xF8C6FCFF, 0xE3C7E3FF, 0xE673FFFF, 0xBCAFC0FF,
                0x320A46FF, 0x8C14BEFF, 0xBD29FFFF, 0x5A187BFF, 0x410062FF, 0xD7A5FFFF, 0x8F57C7FF, 0x8732D2FF,
                0xB991FFFF, 0x7F00FFFF, 0x5010B0FF, 0x736EAAFF, 0xE3E3FFFF, 0x786EF0FF, 0xABABE3FF, 0xBEB9FAFF,
                0x6241F6FF, 0x8F8FC7FF, 0x3B3B57FF, 0x494973FF, 0x57578FFF, 0x7676CAFF, 0x8181FFFF, 0xD0DAF8FF,
                0x373737FF, 0x131313FF, 0xDBDBDBFF, 0x494949FF, 0xB6B6B6FF, 0xEDEDEDFF, 0x929292FF, 0x6E6E6EFF,
                0x3C3CF5FF, 0x4A5AFFFF, 0x0F0F50FF, 0x101CDAFF, 0x90B0FFFF, 0x0000FFFF, 0x00007FFF, 0xA8B9DCFF,
                0x0052F6FF, 0x0F377DFF, 0x0C2148FF, 0x4B7DC8FF, 0x162C52FF, 0x004A9CFF, 0xBED2F0FF, 0xABC7E3FF,
                0x2378DCFF, 0x186ABDFF, 0x0F192DFF, 0x326496FF, 0x578FC7FF, 0x699DC3FF, 0x8FABC7FF, 0x109CDEFF,
                0x5AC5FFFF, 0x00BFFFFF, 0x91EBFFFF, 0x55E6FFFF, 0xE1F8FAFF, 0x7E9494FF, 0x6E8287FF, 0xC7F1F1FF,
                0xABE3E3FF, 0xBFFFFFFF, 0x8FC7C7FF, 0x234146FF, 0x3B7373FF, 0x3FBFBFFF, 0x055A5CFF, 0x00FFFFFF,
                0x007F7FFF, 0x08DED5FF, 0x2DEBA8FF, 0x1E2D23FF, 0xB4EECAFF, 0xABE3C5FF, 0x3CFEA5FF, 0x0F6946FF,
                0x1C8C4EFF, 0x235037FF, 0x00DE6AFF, 0x3B7349FF, 0x05B450FF, 0x507D5FFF, 0x87B48EFF, 0x506450FF,
                0x4BF05AFF, 0x8FC78FFF, 0x3B573BFF, 0xAFFFAFFF, 0x73AB73FF, 0x578F57FF, 0x3FBF3FFF, 0x00C514FF,
                0x0AD70AFF, 0x00FF00FF, 0x7DFF73FF, 0x14E60AFF, 0x3C6E14FF, 0x73C805FF, 0xC7E3ABFF, 0x9BF046FF,
                0x587D3EFF, 0x465032FF, 0x738F57FF, 0xABC78FFF, 0xC8FF41FF, 0x283405FF, 0xFFFF00FF, 0x626200FF,
                0xB1B10AFF, 0x53500AFF, 0xBFBF3FFF, 0x191E0FFF, 0xA2A255FF, 0x414123FF, 0x73733BFF, 0x8F8F57FF,
                0xB5B572FF, 0xC7C78FFF, 0xDADAABFF, 0xEDEDC7FF, 0xA6A090FF, 0xFFEA4AFF, 0xE6D55AFF, 0xAC9400FF,
        };

        int[] tetra255 = new int[] {
                0x00000000, 0x000000FF, 0x282828FF, 0x585858FF, 0x868686FF, 0xA2A2A2FF, 0xCBCBCBFF, 0xFFFFFFFF,
                0xA6D755FF, 0x8ABF5EFF, 0x7AA221FF, 0x6E8A31FF, 0x0A4111FF, 0x0F661DFF, 0x147E25FF, 0x229E35FF,
                0x42C372FF, 0x8CE7A6FF, 0x78FAE6FF, 0x00C7A5FF, 0x009282FF, 0x163135FF, 0x21526BFF, 0x3B768FFF,
                0x53A1ADFF, 0x8CDAFFFF, 0x50AAF7FF, 0x3E83EBFF, 0x354AD7FF, 0x1D2DAAFF, 0x152135FF, 0x66397EFF,
                0x7E5596FF, 0xA68ABFFF, 0xDFBFEFFF, 0xC772FFFF, 0x9245E7FF, 0x6E05C3FF, 0x350082FF, 0x721C2FFF,
                0xB22E69FF, 0xE54286FF, 0xFF6EAFFF, 0xFF9AC7FF, 0xFFD7F3FF, 0xE3B3C3FF, 0xCB96A2FF, 0xAA768AFF,
                0xCF4929FF, 0xF3820DFF, 0xFFAA0DFF, 0xFFD3A6FF, 0xFFBB8AFF, 0xE7A67AFF, 0xBB7251FF, 0x82491DFF,
                0x513115FF, 0xB7515AFF, 0x6E5A51FF, 0x8A7A5AFF, 0xB79E5EFF, 0xDFC721FF, 0xFFDF00FF, 0xFFF3B3FF,
                0x050403FF, 0x0F0D0CFF, 0x1A1817FF, 0x1D182CFF, 0x251B2EFF, 0x2B1C1BFF, 0x2C1D2EFF, 0x2D231CFF,
                0x2D241DFF, 0x1D2F21FF, 0x2E2820FF, 0x323425FF, 0x393534FF, 0x334459FF, 0x4A4645FF, 0x45405AFF,
                0x574241FF, 0x4F435BFF, 0x5A475CFF, 0x405645FF, 0x594D44FF, 0x5B4F46FF, 0x5C554BFF, 0x56644FFF,
                0x4A6264FF, 0x726E6CFF, 0x637690FF, 0x777090FF, 0x8C7472FF, 0x837491FF, 0x6A836FFF, 0x8F8176FF,
                0x908277FF, 0x938B7EFF, 0x8C9C83FF, 0x809B9EFF, 0x9A9D87FF, 0x9BB6A0FF, 0x9BB1CEFF, 0xB2AACFFF,
                0xB6B2B0FF, 0xC9ADAAFF, 0xCCBCB0FF, 0xD3CABCFF, 0xBDDCDFFF, 0xCADCC0FF, 0xD9DCC4FF, 0x9E8B63FF,
                0x6A5A36FF, 0xF7B321FF, 0xDEAD5FFF, 0xB4863CFF, 0xD7B58DFF, 0xB47B35FF, 0xE0A259FF, 0xFB9A1EFF,
                0x9E7F5BFF, 0x6A4A2DFF, 0xFD8F14FF, 0xDF975AFF, 0xB56832FF, 0xDE8B53FF, 0xD3A085FF, 0xD0A386FF,
                0xB3612EFF, 0xFA7E17FF, 0xE08C54FF, 0x9A7258FF, 0x68412CFF, 0x68452FFF, 0xB36731FF, 0xFD740EFF,
                0xF9770FFF, 0xDE8155FF, 0xDF8650FF, 0xF8721EFF, 0x9A6C54FF, 0xFC6A1AFF, 0xB25D33FF, 0xB0512CFF,
                0x663B28FF, 0xDD754EFF, 0xFD580BFF, 0x986650FF, 0x98584EFF, 0xFA4411FF, 0xB1432EFF, 0xDC654CFF,
                0xFD2918FF, 0xB0342EFF, 0xCE8579FF, 0xFE173BFF, 0xCF8088FF, 0xFF1271FF, 0xFD1BA4FF, 0xDD56A4FF,
                0xB33581FF, 0x692B54FF, 0x9B5382FF, 0xFD15DFFF, 0xAE36B6FF, 0xDB5CE3FF, 0xED16FCFF, 0xE10AFFFF,
                0x90599CFF, 0x9F35B3FF, 0xC789D4FF, 0xBE56DEFF, 0xCA11FFFF, 0x9431B1FF, 0x552B67FF, 0xBA85D3FF,
                0xBD15FFFF, 0xB510FFFF, 0x8631B5FF, 0xAE56E2FF, 0x492A66FF, 0xA155E2FF, 0xA600FFFF, 0x7A31B5FF,
                0x9B13FEFF, 0x765399FF, 0x9052DFFF, 0x422866FF, 0x6D2FB3FF, 0x8F05FFFF, 0x9D7ED0FF, 0x6C5199FF,
                0x7900FFFF, 0x584E95FF, 0x684DDDFF, 0x877ECEFF, 0x4B2BB2FF, 0x5F00FFFF, 0x4300FFFF, 0x3E4D97FF,
                0x1D2565FF, 0x667ACEFF, 0x2200FFFF, 0x3967DCFF, 0x1D44B0FF, 0x81ACD7FF, 0x00ADFFFF, 0x2D80B7FF,
                0x5AC7E8FF, 0x326672FF, 0x319DBCFF, 0x00CEFFFF, 0x00EBFFFF, 0x38BDC1FF, 0x00EAE0FF, 0x69AAA0FF,
                0x2BAD9AFF, 0x2B665DFF, 0x00DFBBFF, 0x00DF9BFF, 0x23A979FF, 0x30B482FF, 0x7CBC98FF, 0x569271FF,
                0x346C4FFF, 0x00EE6EFF, 0x00FF3CFF, 0x64A362FF, 0x76E86BFF, 0x50BD47FF, 0x49FF21FF, 0x7AFF27FF,
                0x7BA366FF, 0xB0DD99FF, 0x94FF19FF, 0xA8E96BFF, 0x82BE46FF, 0xAFFF21FF, 0x59703BFF, 0x8BA56AFF,
                0xBFE86FFF, 0xC2DF9EFF, 0xC9FF29FF, 0x98A868FF, 0xA7BD4CFF, 0xD0EA73FF, 0xDAFF2FFF, 0xB4C048FF,
                0xDDEC6FFF, 0xEDFF21FF, 0x6E6C3DFF, 0xFBF42CFF, 0xE1D468FF, 0xB4A740FF, 0xDEBE62FF, 0xB0923AFF,
        };

        palette =
                yamog255;
//                Coloring.HALTONIC255;
//                new int[]
//                { // halturvy
//                        0x00000000, 0x010101FF, 0xFEFEFEFF, 0x777777FF, 0x555555FF, 0xAAAAAAFF, 0x333333FF, 0xE0E0E0FF,
//                        0xC8C8C8FF, 0x563C18FF, 0x5076DDFF, 0x79303DFF, 0xAA8ECEFF, 0x1B295FFF, 0xD6F77EFF, 0x20C93AFF,
//                        0x9F6BD9FF, 0x5A6862FF, 0x6CA557FF, 0x2F0921FF, 0xC42784FF, 0x68208FFF, 0xFC8962FF, 0x3A1F29FF,
//                        0xF86FB2FF, 0x70E2B5FF, 0x4B1849FF, 0xA96A38FF, 0x91574BFF, 0xFA95E9FF, 0x1B8577FF, 0xF7441FFF,
//                        0xC5D04DFF, 0x0B151EFF, 0x9B867DFF, 0x171C3EFF, 0xAA27D8FF, 0x106839FF, 0x105346FF, 0xA2A84EFF,
//                        0x89CC48FF, 0x6E59B2FF, 0x1E53C7FF, 0x372FD0FF, 0x90B9F9FF, 0x6F3E97FF, 0x25BAD1FF, 0xDF3447FF,
//                        0x5339FFFF, 0x259ADDFF, 0xFB6A52FF, 0x591F16FF, 0x353C83FF, 0x48881AFF, 0xEC37B4FF, 0xF873F9FF,
//                        0xD01412FF, 0x6823DEFF, 0xEED17AFF, 0x9D3649FF, 0xA544FFFF, 0xF3AE55FF, 0xD2608EFF, 0x74FF6CFF,
//                        0x661A4FFF, 0x8B4719FF, 0x3A13A6FF, 0xDC24FFFF, 0x1EADA5FF, 0x080804FF, 0x7353F4FF, 0x66671AFF,
//                        0x599159FF, 0x152D1EFF, 0x8D1E78FF, 0x131F14FF, 0x27D6AAFF, 0xB85488FF, 0x31F9EAFF, 0x007D28FF,
//                        0xD310D1FF, 0x174353FF, 0xC36EFEFF, 0x8E32AFFF, 0xC395EFFF, 0xCC7F3FFF, 0x9A1F17FF, 0x3573AAFF,
//                        0x2A4212FF, 0x37EB57FF, 0xE4A4A6FF, 0x382771FF, 0x1B050AFF, 0x820B16FF, 0x508AB4FF, 0xF32D76FF,
//                        0x0A0B45FF, 0xA5C4A0FF, 0xEEB3FFFF, 0x47540AFF, 0xD1A828FF, 0xB84E1CFF, 0xF853ECFF, 0xA1F2BBFF,
//                        0xAB197DFF, 0xD7FBDAFF, 0x1C547DFF, 0x6C87FFFF, 0xCA8187FF, 0x52D5EDFF, 0x824E7AFF, 0x300B5EFF,
//                        0x0B6876FF, 0x19C28DFF, 0x925EBEFF, 0x00A648FF, 0x001074FF, 0x2660EBFF, 0x9C852CFF, 0x090121FF,
//                        0x51436FFF, 0x5EA7F8FF, 0x822EF3FF, 0x828AC5FF, 0x92A093FF, 0xFAFF23FF, 0x130FA2FF, 0x95759DFF,
//                        0x856B2EFF, 0x112FB8FF, 0x0C30FEFF, 0x26B71DFF, 0x820CB6FF, 0x00DD34FF, 0x8B5F84FF, 0xCE6BC2FF,
//                        0xD4E22FFF, 0x4A3952FF, 0x9CE0FCFF, 0xFA51A3FF, 0x500ABDFF, 0x6E4416FF, 0x495D99FF, 0xB7445AFF,
//                        0xF08112FF, 0x5A0B89FF, 0x7F0F67FF, 0x0E08F6FF, 0xCE6957FF, 0x301D06FF, 0x003914FF, 0x3E0533FF,
//                        0xC14CC0FF, 0x783F62FF, 0x300A81FF, 0xBE1B54FF, 0xF8E19DFF, 0xDC259AFF, 0x9A48A5FF, 0xFC4966FF,
//                        0xFDB29CFF, 0x6DC1C6FF, 0x009D96FF, 0x005415FF, 0x00000DFF, 0xC79976FF, 0x00FE2AFF, 0x87FFFFFF,
//                        0x3E47A9FF, 0xB4190DFF, 0x584ACDFF, 0xBDFE20FF, 0x78C188FF, 0xF7FF9AFF, 0x2CF79DFF, 0xD38FACFF,
//                        0x240F06FF, 0x00358AFF, 0x200424FF, 0x530C14FF, 0x585C2DFF, 0x867C1EFF, 0xC7B5E9FF, 0xFBC8B8FF,
//                        0x007960FF, 0x961B4BFF, 0xC159EEFF, 0x7866FFFF, 0xA89617FF, 0xFA2CE3FF, 0x4A4B44FF, 0xF48AC0FF,
//                        0xD25311FF, 0x342C11FF, 0xFCC21FFF, 0x00100AFF, 0x070832FF, 0xB219ADFF, 0x98E521FF, 0x0E87FFFF,
//                        0x18C1FFFF, 0xD5CFFCFF, 0x602A31FF, 0x132942FF, 0xC4AE7DFF, 0x75B124FF, 0x6D9A19FF, 0xD71259FF,
//                        0x6998A2FF, 0x620A37FF, 0x4F7A41FF, 0xA9420DFF, 0x0E5E5EFF, 0x6770B2FF, 0xBAD19AFF, 0xCFBB17FF,
//                        0x0085B3FF, 0x58066BFF, 0x240545FF, 0x631AC1FF, 0x5AA6C9FF, 0x4C0CFBFF, 0x888063FF, 0xF9EBFFFF,
//                        0x90BB25FF, 0x00EAFFFF, 0x48330EFF, 0x9EE78FFF, 0xD67BE9FF, 0x63DD86FF, 0xB95E5CFF, 0x92AAE5FF,
//                        0x4B5083FF, 0xF6E15BFF, 0x000E5EFF, 0x1100C7FF, 0x775451FF, 0x3F8C8BFF, 0xA97CA8FF, 0x452D50FF,
//                        0x004BFBFF, 0x184B69FF, 0x156EFAFF, 0x16152FFF, 0xF99428FF, 0x6F7DD9FF, 0x00395EFF, 0xB73DB9FF,
//                        0x460A07FF, 0x592A73FF, 0x20D271FF, 0x004039FF, 0x95CDFFFF, 0x7B413DFF, 0x9B0AD3FF, 0xEC6433FF,
//                };
//                { // haltok
//                        0x00000000, 0x010101FF, 0xFEFEFEFF, 0x777777FF, 0x555555FF, 0xAAAAAAFF, 0x333333FF, 0xE0E0E0FF,
//                        0xC8C8C8FF, 0x92072EFF, 0xBA81E2FF, 0x1B2076FF, 0xCEFE27FF, 0xAE54FCFF, 0x576A5EFF, 0x0A5D9BFF,
//                        0x5CAB26FF, 0x538E5DFF, 0x461425FF, 0x24EEA3FF, 0xAB4633FF, 0x0A1420FF, 0x55358FFF, 0xE7D05EFF,
//                        0xC210D3FF, 0xAB8071FF, 0x18174BFF, 0xE060B7FF, 0xB99CFEFF, 0xFD4A3FFF, 0x7947D2FF, 0xA1D363FF,
//                        0x598BB6FF, 0x581F61FF, 0x7D26B0FF, 0xB96079FF, 0x2A5F34FF, 0xC62765FF, 0x81F981FF, 0xD15D19FF,
//                        0xFA757FFF, 0x19A4EDFF, 0x2E4F6BFF, 0x4966A2FF, 0x3D31CDFF, 0x31D2E8FF, 0x9A3D74FF, 0x5972F5FF,
//                        0x411AA7FF, 0xEBA239FF, 0xF908DBFF, 0xEF9FA0FF, 0xFEA1E0FF, 0x627D15FF, 0xE18823FF, 0xEFBFFDFF,
//                        0xDD303FFF, 0x280C29FF, 0x69BA94FF, 0x923824FF, 0x7E975DFF, 0x4C4220FF, 0x120B0CFF, 0x132A47FF,
//                        0x6EC03BFF, 0x151F06FF, 0xF073F4FF, 0x8965AFFF, 0x053685FF, 0xD5348BFF, 0x3C63ECFF, 0x682825FF,
//                        0x8D2863FF, 0x4CB9F3FF, 0x2842F5FF, 0x7283F3FF, 0xBE8C97FF, 0x7C6311FF, 0x74F7E1FF, 0x080107FF,
//                        0x6DA1A5FF, 0x232D0EFF, 0x089D06FF, 0x1E83A7FF, 0x603657FF, 0xDCF7AEFF, 0x4CEC3AFF, 0x9A10FDFF,
//                        0x9F6A3BFF, 0x361209FF, 0x692BEBFF, 0x5D0E36FF, 0xF64BFAFF, 0x297538FF, 0xA843A9FF, 0x380652FF,
//                        0x0B4624FF, 0xE64980FF, 0x704995FF, 0x9052E5FF, 0xB8A838FF, 0xC8BB8DFF, 0x674A0CFF, 0xAA70BDFF,
//                        0x1B4450FF, 0x0EA984FF, 0xC87B1CFF, 0xB8B2DDFF, 0x27D596FF, 0x879ED8FF, 0xDC89BDFF, 0x12550DFF,
//                        0x0C0476FF, 0x258063FF, 0x65E2DAFF, 0xA45571FF, 0x270B05FF, 0x112AC8FF, 0xAE0D40FF, 0xA31BAAFF,
//                        0x19D931FF, 0x7D0B6AFF, 0x987F1AFF, 0x0B034DFF, 0x480E5FFF, 0xFEDF6EFF, 0xA69A1BFF, 0xD346BAFF,
//                        0x055ECCFF, 0xC3FDFAFF, 0x1949A3FF, 0x06021BFF, 0xC463FDFF, 0xF4B623FF, 0x200CADFF, 0x3A1A83FF,
//                        0x6D03ADFF, 0x815795FF, 0xF3CFA5FF, 0xC0E110FF, 0x0C26FEFF, 0x4D2301FF, 0x7F5258FF, 0xD00CFCFF,
//                        0xAFBE05FF, 0xFE6518FF, 0xFEB591FF, 0xDC7065FF, 0xDE957AFF, 0xFF87E8FF, 0x7E3010FF, 0xD21226FF,
//                        0xA6DEF6FF, 0x1BBB6DFF, 0x60FD1EFF, 0xFEFC65FF, 0x4B49BBFF, 0x12355CFF, 0x650BD9FF, 0xFF32A5FF,
//                        0x5E5D22FF, 0xA4DC9DFF, 0x27685AFF, 0x3D3667FF, 0xFE577EFF, 0xA90274FF, 0x1B2427FF, 0x098EF4FF,
//                        0x4C4C85FF, 0x089998FF, 0x958BB9FF, 0x721546FF, 0x443701FF, 0x65098AFF, 0x753D4CFF, 0x093B0FFF,
//                        0x99C079FF, 0x9AA171FF, 0x09B8C7FF, 0xC4039EFF, 0x99C8FBFF, 0xFF1D42FF, 0x105346FF, 0x0AC217FF,
//                        0xFB67BBFF, 0xBCEAA5FF, 0x060630FF, 0x8F7A98FF, 0x6D9522FF, 0x390D2EFF, 0x16830AFF, 0x87C2B8FF,
//                        0x83645FFF, 0x0A7AD8FF, 0x1B0220FF, 0x524843FF, 0x050A02FF, 0x8F08D8FF, 0x870B8AFF, 0x087583FF,
//                        0xC44A13FF, 0x4E46FDFF, 0xB355A8FF, 0x091C2FFF, 0x690B0AFF, 0x898264FF, 0x595A7BFF, 0x4B3240FF,
//                        0x274185FF, 0x7BD5A5FF, 0x051601FF, 0xFEFDC0FF, 0x914B14FF, 0x372246FF, 0x09CAC5FF, 0x8F69DEFF,
//                        0x099037FF, 0x576FB4FF, 0x597184FF, 0x09A64FFF, 0x4D10FDFF, 0xFDE7FEFF, 0xA6FF9AFF, 0x5107C5FF,
//                        0xD85C5AFF, 0x266B0FFF, 0x8A8DFCFF, 0xD73DFCFF, 0x6C51FDFF, 0x713A84FF, 0xB81E12FF, 0xC86990FF,
//                        0x78918EFF, 0xF90873FF, 0xFF849BFF, 0xCFEC50FF, 0xD91BB9FF, 0x56DC5FFF, 0x73794DFF, 0xFC8A3AFF,
//                        0xFFA169FF, 0x26A1BFFF, 0xB643DAFF, 0x7BBFFAFF, 0x3B1F0BFF, 0xAA0FD0FF, 0x5656C5FF, 0x870802FF,
//                        0x3F2958FF, 0x85E966FF, 0xD4B6FCFF, 0xBF8B58FF, 0xB06E56FF, 0xA35A0BFF, 0x0EFDB6FF, 0x26C87EFF,
//                };
//                { // haltoyo
//                        0x00000000, 0x010101FF, 0xFEFEFEFF, 0x777777FF, 0x555555FF, 0xAAAAAAFF, 0x333333FF, 0xE0E0E0FF,
//                        0xC8C8C8FF, 0x4972F1FF, 0x822638FF, 0xB189D3FF, 0x192767FF, 0xCFFB6EFF, 0xA464E3FF, 0x556A62FF,
//                        0x64A84AFF, 0x6C1397FF, 0x3F1B29FF, 0x56E8AFFF, 0x4E1050FF, 0xB06728FF, 0x3F4511FF, 0x995245FF,
//                        0xC2D22BFF, 0x0B151EFF, 0x4E3E83FF, 0xB33AC1FF, 0x9F847DFF, 0x161B41FF, 0xA4A934FF, 0xE46254FF,
//                        0x82CF34FF, 0x7253C0FF, 0x004FDBFF, 0x638AACFF, 0x3B1EE2FF, 0xFB47E7FF, 0xA52D96FF, 0x74389FFF,
//                        0xED1740FF, 0xE493D3FF, 0x601708FF, 0x3B1EADFF, 0xF81AB8FF, 0x93F29DFF, 0xE3838BFF, 0x43A3DCFF,
//                        0xF5CF62FF, 0x9E5FA0FF, 0x5D7B1EFF, 0xA82A44FF, 0x5BCEE2FF, 0xDAA95CFF, 0x68EF3FFF, 0x5E2141FF,
//                        0x209462FF, 0x912AF2FF, 0xD18F49FF, 0x426217FF, 0x333870FF, 0x0F2E1EFF, 0x0F4A51FF, 0x151F10FF,
//                        0x06041DFF, 0x4D89FDFF, 0xCB223AFF, 0x196BB7FF, 0x7E4D21FF, 0x7D8930FF, 0x87C486FF, 0x521186FF,
//                        0xA4B0FCFF, 0x4BBBA3FF, 0x070307FF, 0x5DAFF8FF, 0xEF4A8AFF, 0x1F618BFF, 0x6C16FFFF, 0xD037EFFF,
//                        0x2E0731FF, 0x2800A5FF, 0x735177FF, 0x3C57FBFF, 0xD5258CFF, 0x59EFF8FF, 0xBB506CFF, 0x00421BFF,
//                        0xE36CB3FF, 0x5B4531FF, 0x50C01CFF, 0x8B1379FF, 0xF7A3B2FF, 0xD3FDD3FF, 0xF06EF8FF, 0x0082C1FF,
//                        0x137F82FF, 0x009F1DFF, 0xE0AEFFFF, 0x91A288FF, 0x6B2067FF, 0x2DA190FF, 0xFAB46BFF, 0x240607FF,
//                        0x0F0B05FF, 0x005B2EFF, 0xA18E2AFF, 0x007548FF, 0xB6EB30FF, 0x0A08E3FF, 0x924CF5FF, 0x120177FF,
//                        0x090742FF, 0x84FCFCFF, 0xBD6A86FF, 0x0E42B2FF, 0x331359FF, 0xFDC3FEFF, 0xDA522CFF, 0x6312CBFF,
//                        0xBC68FDFF, 0x656EB1FF, 0x095179FF, 0x00DF8FFF, 0x59331BFF, 0x380911FF, 0x7B0E14FF, 0x8727C9FF,
//                        0xFC703FFF, 0x7A3D66FF, 0x8683D3FF, 0x8A6825FF, 0x972A19FF, 0xBF491DFF, 0x8E5488FF, 0xA6D09BFF,
//                        0xC67315FF, 0xCA4BB3FF, 0xF89179FF, 0xF9FE92FF, 0x4E53B3FF, 0x00CE7BFF, 0x372A09FF, 0xDCE7A2FF,
//                        0x3C1079FF, 0xBE0D66FF, 0x5E6A1AFF, 0x00005EFF, 0xB0BCBDFF, 0x523B52FF, 0x16071FFF, 0xF9384CFF,
//                        0xFA8A21FF, 0xBE8FFFFF, 0x00E41DFF, 0x00675CFF, 0xBB15F7FF, 0xF8C7BDFF, 0x00B112FF, 0x4940B1FF,
//                        0xBB8597FF, 0xFAFF23FF, 0xEFE429FF, 0xA911CAFF, 0x930EA3FF, 0x3D2CFEFF, 0x00909CFF, 0xFB88FFFF,
//                        0xB972C4FF, 0x2D1F0DFF, 0x052949FF, 0xB7B72CFF, 0x7AD7FFFF, 0x080695FF, 0x668D76FF, 0x9D2374FF,
//                        0xDB54CCFF, 0xB2DFC4FF, 0xF02178FF, 0x008E25FF, 0x0A395FFF, 0xE5B51BFF, 0xFA6376FF, 0x7A73CDFF,
//                        0xD616CEFF, 0xF977BDFF, 0x7597AAFF, 0xC0D4FFFF, 0xB03707FF, 0x7696F9FF, 0x59669AFF, 0x0098D9FF,
//                        0x9A174CFF, 0x11BD75FF, 0xFCEAF2FF, 0x003197FF, 0x3C2B5DFF, 0x8AA1C3FF, 0x0DAFB3FF, 0x18CFB7FF,
//                        0x2D5650FF, 0x4AFF80FF, 0x4E4E87FF, 0xEF18FFFF, 0x3D043AFF, 0x41350DFF, 0x675BE9FF, 0x99645BFF,
//                        0x008017FF, 0x00FFD2FF, 0xB14085FF, 0x648155FF, 0x5645E3FF, 0x7DDD6CFF, 0x3A3B45FF, 0x609C17FF,
//                        0x7D0C41FF, 0x00D41BFF, 0x495316FF, 0x967D58FF, 0xC1835BFF, 0x1C0C2DFF, 0x0008C7FF, 0xB3A86EFF,
//                        0x9BFFC5FF, 0x00C1DCFF, 0x732F14FF, 0xC215A4FF, 0x001506FF, 0x8D75A0FF, 0x5B1131FF, 0xAAC1F9FF,
//                        0xFAB5DFFF, 0x006EE5FF, 0x4B2CACFF, 0x372545FF, 0xD8175FFF, 0x7D5D31FF, 0x7A9B73FF, 0x526242FF,
//                        0x7968FCFF, 0x5F0C62FF, 0x0087E6FF, 0x9847AFFF, 0x68BD68FF, 0xB5DC8CFF, 0x5D455CFF, 0x0056B0FF,
//                        0x5E30DAFF, 0xDC7914FF, 0x944567FF, 0x502B85FF, 0x53090DFF, 0x9DA0E6FF, 0xD077EAFF, 0xFD49B3FF,
//                };
//                        { // haltesque
//                                0x00000000, 0x000000FF, 0xFFFFFFFF, 0x888888FF, 0x444444FF, 0xCCCCCCFF, 0x222222FF, 0xAAAAAAFF,
//                                0x666666FF, 0xEEEEEEFF, 0x111111FF, 0x999999FF, 0x555555FF, 0xDDDDDDFF, 0x333333FF, 0xBBBBBBFF,
//                                0x777777FF, 0x9F4026FF, 0x5578CEFF, 0x73353DFF, 0xA21DCFFF, 0xD4F695FF, 0x47C453FF, 0x9773CBFF,
//                                0x26D0D8FF, 0x2A2877FF, 0x73A264FF, 0xB93980FF, 0x622D83FF, 0xED9170FF, 0xE97BB2FF, 0xDD33BDFF,
//                                0x176AE1FF, 0x98234AFF, 0x8095E8FF, 0xEE9DE4FF, 0xE5573BFF, 0xC3CF67FF, 0x12569AFF, 0xBE7BA9FF,
//                                0xD5841AFF, 0xBC24FCFF, 0x94C860FF, 0xDA3D19FF, 0x6E5DA4FF, 0x10050FFF, 0x3A3AB9FF, 0x100D6DFF,
//                                0x49304FFF, 0x09A64FFF, 0x68478AFF, 0x355219FF, 0x5247E9FF, 0x711943FF, 0xEB7466FF, 0xF2AB4AFF,
//                                0xEE4281FF, 0x4C8635FF, 0xAA7357FF, 0xF962FFFF, 0xC752F9FF, 0x0B1146FF, 0x00E7B7FF, 0x40105FFF,
//                                0xB0A836FF, 0x147997FF, 0x4D1324FF, 0x9CEE3BFF, 0xB49AE8FF, 0x9D396EFF, 0x816126FF, 0xA3554AFF,
//                                0x931CA1FF, 0x2B0E14FF, 0x261FC3FF, 0x0698F2FF, 0x006D3CFF, 0x7EBAFCFF, 0x33094AFF, 0x1A3E0BFF,
//                                0x6EF3BBFF, 0xAF5C84FF, 0x4D1A87FF, 0xC5FD22FF, 0x704D13FF, 0x45E8FFFF, 0xBC79EAFF, 0x6F12BEFF,
//                                0xF7CE82FF, 0x0691AEFF, 0x40D732FF, 0x002F0CFF, 0x2EB2C9FF, 0x7747F9FF, 0x2F4283FF, 0xE2285DFF,
//                                0x0045E4FF, 0x56390EFF, 0x7564FEFF, 0xC6153BFF, 0x2762B4FF, 0x621B13FF, 0xEB52C0FF, 0x157860FF,
//                                0x1B7F17FF, 0xA74EBBFF, 0x79FFF0FF, 0xF71AEFFF, 0x20C8A4FF, 0x938D25FF, 0x020302FF, 0x1E2448FF,
//                                0x40ED4FFF, 0x4B06F9FF, 0x851E74FF, 0xF7B39BFF, 0xFDB7FCFF, 0x001D0CFF, 0x000534FF, 0x00687BFF,
//                                0x8B7223FF, 0x530CB9FF, 0x618F65FF, 0xEED415FF, 0x590D5FFF, 0xC920B1FF, 0x143F62FF, 0xB6856CFF,
//                                0x352807FF, 0x793AC7FF, 0x140FABFF, 0x391025FF, 0x30A3A4FF, 0x220786FF, 0x004D0EFF, 0x922F0FFF,
//                                0x1000FEFF, 0xC1BBFFFF, 0x76AE0BFF, 0x105569FF, 0x75B188FF, 0xFBFBAFFF, 0x1B0B2CFF, 0x830D17FF,
//                                0xC06B82FF, 0xF9FD43FF, 0xB40E95FF, 0xBEB06FFF, 0x5C7FFFFF, 0x20897AFF, 0x7C4C58FF, 0xEA85EBFF,
//                                0x6D00FCFF, 0xF390B1FF, 0xE59520FF, 0xF95E91FF, 0x5AADFCFF, 0x159918FF, 0x74D0FBFF, 0x54466DFF,
//                                0x8168A9FF, 0x474BBBFF, 0x95D8B2FF, 0x32FF19FF, 0xFD192AFF, 0x00B977FF, 0xA358ECFF, 0x5D6314FF,
//                                0xFCE43DFF, 0x113496FF, 0xBEE887FF, 0xC27615FF, 0x5D8BC3FF, 0x891048FF, 0x6A106FFF, 0x00FF8CFF,
//                                0x0C453AFF, 0x9FD625FF, 0x9544A6FF, 0xBC996DFF, 0x5D7759FF, 0xB21420FF, 0x0B305BFF, 0x00D98BFF,
//                                0x82C6A7FF, 0xC55EB5FF, 0xB35D18FF, 0x00B417FF, 0x9A6FFFFF, 0x610836FF, 0x91557EFF, 0xFB5F22FF,
//                                0x003235FF, 0x0A6047FF, 0x5B4626FF, 0xBD3B14FF, 0x861BFBFF, 0xEC1A8AFF, 0x75E882FF, 0xFABC2BFF,
//                                0x000904FF, 0xF8E0ABFF, 0xA30D76FF, 0x3E5E12FF, 0xEA4FFFFF, 0x2C0433FF, 0x0075FFFF, 0x412544FF,
//                                0x58355DFF, 0x6162D5FF, 0x4D5E8AFF, 0xA29927FF, 0x00260FFF, 0x44340DFF, 0xC593A4FF, 0x240607FF,
//                                0xFC9D89FF, 0x9E29F9FF, 0x62BBCCFF, 0x94749CFF, 0xFE4D5CFF, 0xFEC6BEFF, 0xB9A8FFFF, 0x7DFF86FF,
//                                0xC7B622FF, 0xFB5FCEFF, 0x5E7519FF, 0x678F1AFF, 0x17031EFF, 0xC55A58FF, 0x9DE1FEFF, 0x0655FFFF,
//                                0x8A8DB8FF, 0x001D2CFF, 0xFB7A25FF, 0xDD142BFF, 0xFC28ACFF, 0x89C118FF, 0xD90CFFFF, 0x3D04E1FF,
//                                0x0087EDFF, 0x421509FF, 0x3605ADFF, 0x753E65FF, 0xFBCEFFFF, 0x001E49FF, 0xF6B0D3FF, 0xC7469DFF,
//                                0x5D3239FF, 0x000018FF, 0xBF445DFF, 0x393377FF, 0x457EA7FF, 0x9E7A18FF, 0xBAFFD8FF, 0xBF116CFF,
//                        };
//                        { // surin
//                                0x00000000, 0x000000FF, 0x141414FF, 0xFFFFFFFF, 0x878787FF, 0xCCCCCCFF, 0x4F4F4FFF, 0xEEEEEEFF,
//                                0x282828FF, 0x999999FF, 0x757575FF, 0xDDDDDDFF, 0x3B3B3BFF, 0xBBBBBBFF, 0x626262FF, 0xAAAAAAFF,
//                                0x9B9783FF, 0x514E3DFF, 0xE10788FF, 0xDC8EA1FF, 0xA55F72FF, 0x5E2637FF, 0xF7419BFF, 0x9E0C5BFF,
//                                0x7C706BFF, 0x39302DFF, 0x943907FF, 0xAA755EFF, 0x794B37FF, 0x3A1706FF, 0xAA512AFF, 0x602400FF,
//                                0xE09A8BFF, 0x884F44FF, 0xDC6D00FF, 0xFDAA7CFF, 0xE06719FF, 0x7C3603FF, 0xFF811DFF, 0xA15013FF,
//                                0xECA992FF, 0x945D4AFF, 0xFF6B03FF, 0xFFBE9EFF, 0xEE763DFF, 0x913C07FF, 0xFF9664FF, 0xC15000FF,
//                                0xC09C84FF, 0x6F523EFF, 0xFF3107FF, 0xFF9779FF, 0xCD633FFF, 0x7E2400FF, 0xFF6B4EFF, 0xB52800FF,
//                                0xE9BB63FF, 0x916A13FF, 0xFF6B8EFF, 0xFFC8A5FF, 0xD78C59FF, 0x894A1BFF, 0xFE9C96FF, 0xC74F4EFF,
//                                0xCAC0B2FF, 0x797165FF, 0xFF6F84FF, 0xFFC4C4FF, 0xDA878AFF, 0x8B464AFF, 0xFF9BA3FF, 0xCC475EFF,
//                                0xEEBC98FF, 0x956C4DFF, 0xFF7C64FF, 0xFFCEBDFF, 0xDB9071FF, 0x8D4E33FF, 0xFFA68FFF, 0xC35E47FF,
//                                0xE6CAB3FF, 0x917965FF, 0xF88D7EFF, 0xFEDBCCFF, 0xD79F8CFF, 0x8A5B4BFF, 0xFEB5A5FF, 0xBC6E60FF,
//                                0xE7D7A1FF, 0x928355FF, 0xE79BBAFF, 0xFEE5DAFF, 0xD3AA99FF, 0x876556FF, 0xFCBBC3FF, 0xB27A81FF,
//                                0xBCD68FFF, 0x6C8145FF, 0xF767FDFF, 0xE5DBCCFF, 0xAEA698FF, 0x696156FF, 0xEDA7E5FF, 0xA5689EFF,
//                                0x6A945EFF, 0x294A1FFF, 0x9D00E1FF, 0xAC80D6FF, 0x7B53A0FF, 0x3E1B5BFF, 0xB335FFFF, 0x690B99FF,
//                                0x7AAA6AFF, 0x365E28FF, 0xB725FFFF, 0xD08BFFFF, 0x995ACFFF, 0x561A81FF, 0xC261FFFF, 0x830CBDFF,
//                                0x507A5EFF, 0x133722FF, 0x6410D3FF, 0x6E78BCFF, 0x464C88FF, 0x181747FF, 0x6D45DEFF, 0x3D008CFF,
//                                0x739B83FF, 0x2F513EFF, 0x7B44FFFF, 0x849EE5FF, 0x586EADFF, 0x233266FF, 0x866EFFFF, 0x5203DCFF,
//                                0x7FB98AFF, 0x386A43FF, 0xA162FFFF, 0xA5B9EAFF, 0x7688B5FF, 0x3A486DFF, 0xAB8BFFFF, 0x6D40D3FF,
//                                0x90CCAFFF, 0x457961FF, 0x958AFDFF, 0xB6D2FDFF, 0x7B9AD8FF, 0x3D578BFF, 0xA6ACFFFF, 0x6264DDFF,
//                                0x508B6BFF, 0x0C442CFF, 0x6A10FDFF, 0x6191B8FF, 0x386487FF, 0x002B46FF, 0x635EEBFF, 0x3622A1FF,
//                                0x659FADFF, 0x21535FFF, 0x0080BAFF, 0x4FB3DBFF, 0x1B81A5FF, 0x103E53FF, 0x139AD5FF, 0x065A7DFF,
//                                0x94BAD4FF, 0x4B6B81FF, 0x00AAC5FF, 0x5EDBFFFF, 0x25A5C9FF, 0x055D70FF, 0x26C3E6FF, 0x057D95FF,
//                                0x9DC1EFFF, 0x527198FF, 0x1CB6B9FF, 0x6EE6FFFF, 0x10B3CFFF, 0x026674FF, 0x1FD1E0FF, 0x00898FFF,
//                                0x707DD4FF, 0x32387EFF, 0x197A62FF, 0x6898D8FF, 0x3E6AA3FF, 0x072E5DFF, 0x278DA1FF, 0x114F5AFF,
//                                0x869BEFFF, 0x425196FF, 0x179982FF, 0x5CC1E9FF, 0x2B8FB4FF, 0x114A5FFF, 0x00B3B0FF, 0x116D6BFF,
//                                0xB898E7FF, 0x694D8FFF, 0x00AA3BFF, 0x92C7C5FF, 0x629492FF, 0x275250FF, 0x14C560FF, 0x127A3BFF,
//                                0xBD87D6FF, 0x6C3F80FF, 0x4F961CFF, 0x9CBA97FF, 0x6D8868FF, 0x32482EFF, 0x55B31FFF, 0x386C13FF,
//                                0xD3B0E3FF, 0x7F628CFF, 0x5FBA18FF, 0xA6E790FF, 0x75B060FF, 0x376923FF, 0x6DD819FF, 0x468C0DFF,
//                                0x98738BFF, 0x4D3144FF, 0x65690FFF, 0x9D8E71FF, 0x6E6147FF, 0x342915FF, 0x827C31FF, 0x4A4406FF,
//                                0xD47AA4FF, 0x7D3458FF, 0x8E7C13FF, 0xDC9B71FF, 0xA56B45FF, 0x5F300CFF, 0xB88C14FF, 0x6E530AFF,
//                                0xDBA4AAFF, 0x86595EFF, 0xC98800FF, 0xF8B690FF, 0xC08562FF, 0x764527FF, 0xF79617FF, 0x9D600EFF,
//                                0xEAB0CAFF, 0x926278FF, 0xBAA300FF, 0xFDD07DFF, 0xC7993CFF, 0x7B5800FF, 0xDCBA1CFF, 0x917911FF,
//                        };
//                        { // enclave
//                                0x00000000, 0x000000FF, 0xFFFFFFFF, 0x878787FF, 0xCCCCCCFF, 0x4F4F4FFF, 0xEEEEEEFF, 0x282828FF,
//                                0x999999FF, 0x141414FF, 0x757575FF, 0xDDDDDDFF, 0x3B3B3BFF, 0xBBBBBBFF, 0x626262FF, 0xAAAAAAFF,
//                                0xA48087FF, 0xFF3472FF, 0xFFB6C9FF, 0xB97586FF, 0x763E4DFF, 0xFF91B1FF, 0xD8607FFF, 0xA13655FF,
//                                0xB99193FF, 0xFF6673FF, 0xFFCED0FF, 0xC88B8DFF, 0x845053FF, 0xFFADB7FF, 0xE17C86FF, 0xA94F59FF,
//                                0xB08784FF, 0xFD5744FF, 0xFFBDB2FF, 0xCA7B72FF, 0x84433CFF, 0xFF9F8EFF, 0xE16D5FFF, 0xAA4237FF,
//                                0xB79287FF, 0xFF6B34FF, 0xFFD1BCFF, 0xC38D7BFF, 0x805243FF, 0xFFB190FF, 0xDF8062FF, 0xA85339FF,
//                                0xAA8A78FF, 0xE46E0EFF, 0xFFC79EFF, 0xBA8560FF, 0x784B2BFF, 0xFFAD72FF, 0xCD7C45FF, 0x974F19FF,
//                                0xB6997FFF, 0xEA8500FF, 0xFFDCA6FF, 0xC29667FF, 0x805A30FF, 0xFFC071FF, 0xD88D43FF, 0xA36012FF,
//                                0xA19275FF, 0xC78600FF, 0xF1D4A8FF, 0xA99069FF, 0x6B5533FF, 0xE9C075FF, 0xB38E48FF, 0x82611EFF,
//                                0x9F9777FF, 0xB7921AFF, 0xEEDB9EFF, 0xA7965FFF, 0x695A2AFF, 0xE4C771FF, 0xAF9443FF, 0x7E6514FF,
//                                0x8D8C6CFF, 0x9D8B00FF, 0xD3D198FF, 0x8F8D5AFF, 0x555327FF, 0xC5C06CFF, 0x938E40FF, 0x666115FF,
//                                0x909C78FF, 0x95A100FF, 0xD3E4ACFF, 0x8F9E6CFF, 0x556136FF, 0xC2D479FF, 0x91A04CFF, 0x637020FF,
//                                0x7B9071FF, 0x709A00FF, 0xB5D998FF, 0x75955AFF, 0x3E5926FF, 0x9ECD6EFF, 0x6E9840FF, 0x456A14FF,
//                                0x79977BFF, 0x43AA0FFF, 0xAFE2AAFF, 0x6F9C6BFF, 0x385F35FF, 0x8BD779FF, 0x5DA34CFF, 0x337323FF,
//                                0x658C75FF, 0x009E42FF, 0x9CD3A9FF, 0x5E8F6BFF, 0x2A5436FF, 0x72CA87FF, 0x44965BFF, 0x156733FF,
//                                0x6D9785FF, 0x10A871FF, 0x95E4C2FF, 0x569E81FF, 0x1C6148FF, 0x68DAADFF, 0x36A47CFF, 0x007451FF,
//                                0x5F8B7FFF, 0x00987BFF, 0x90D2C0FF, 0x538E7FFF, 0x1D5347FF, 0x6BC6B1FF, 0x3B937FFF, 0x006555FF,
//                                0x5A8B89FF, 0x17958AFF, 0x8BD2CCFF, 0x4D8E89FF, 0x155350FF, 0x64C6BCFF, 0x34928AFF, 0x00655EFF,
//                                0x4E8083FF, 0x008889FF, 0x7CC5C6FF, 0x408383FF, 0x004A4BFF, 0x5AB7BAFF, 0x2B8589FF, 0x00595DFF,
//                                0x588D96FF, 0x0095A6FF, 0x8CD2E1FF, 0x4E8E9BFF, 0x16535EFF, 0x6AC4D4FF, 0x3B91A1FF, 0x006472FF,
//                                0x538190FF, 0x0C87AAFF, 0x84C5E0FF, 0x47829BFF, 0x10495EFF, 0x62B6D4FF, 0x3485A0FF, 0x005971FF,
//                                0x5D879DFF, 0x158BC6FF, 0x8DCBF4FF, 0x5088ACFF, 0x1B4E6DFF, 0x69BCEDFF, 0x3B8AB7FF, 0x045D85FF,
//                                0x597D99FF, 0x197DD0FF, 0x91BEEAFF, 0x557CA3FF, 0x234464FF, 0x6AAEEDFF, 0x3F7DB7FF, 0x145184FF,
//                                0x7389A9FF, 0x3E84FCFF, 0xA1CDFFFF, 0x6389C3FF, 0x2F4E80FF, 0x7DB9FFFF, 0x5187E2FF, 0x2859AAFF,
//                                0x707FA0FF, 0x5071FFFF, 0xA5BFFFFF, 0x677DB9FF, 0x334477FF, 0x88AAFFFF, 0x5C79D7FF, 0x374DA1FF,
//                                0x7B83A6FF, 0x796FFCFF, 0xBBC3FFFF, 0x7A80B5FF, 0x444874FF, 0xA9AAFFFF, 0x7A7AD3FF, 0x514E9EFF,
//                                0x7D789EFF, 0x8956FFFF, 0xC1B0FFFF, 0x8070C0FF, 0x49397DFF, 0xB394FFFF, 0x8364E2FF, 0x5A39ABFF,
//                                0x9587ABFF, 0xB064FBFF, 0xDCC5FFFF, 0x9782BFFF, 0x5C497DFF, 0xD9A7FFFF, 0xA475DDFF, 0x7549A7FF,
//                                0x95809FFF, 0xD22DFFFF, 0xE9B5FFFF, 0xA274B7FF, 0x643D76FF, 0xEE8CFFFF, 0xB85DD9FF, 0x8430A2FF,
//                                0xA587A4FF, 0xFE00F5FF, 0xFFB3FFFF, 0xC172C1FF, 0x7D397FFF, 0xFF7FFFFF, 0xE24EDEFF, 0xAA19A8FF,
//                                0x9F8097FF, 0xFB0DBEFF, 0xFAB6E6FF, 0xB175A0FF, 0x703E63FF, 0xFF8AE2FF, 0xD25BADFF, 0x9B307DFF,
//                                0xB391A3FF, 0xFF5BA5FF, 0xFFCAE9FF, 0xC986A2FF, 0x854C65FF, 0xFFA8DBFF, 0xDF77A7FF, 0xA84C77FF,
//                        };
//                        { // gray15
//                                0x00000000, 0x000000FF, 0x141414FF, 0xFFFFFFFF, 0x878787FF, 0xCCCCCCFF, 0x4F4F4FFF, 0xEEEEEEFF,
//                                0x282828FF, 0x999999FF, 0x757575FF, 0xDDDDDDFF, 0x3B3B3BFF, 0xBBBBBBFF, 0x626262FF, 0xAAAAAAFF,
//                        };

//        palette = new int[64];
//        float[] outer = {
//            0.96f,//NamedColor.AURORA_CARMINE.hue(),
//            0.015f,//NamedColor.AURORA_LIGHT_SKIN_6.hue(),
//            0.013f,//NamedColor.ORANGE.hue(),
//            NamedColor.CW_LIGHT_YELLOW.hue(),
//            NamedColor.CW_GREEN.hue(),
//            NamedColor.CW_LIGHT_CYAN.hue(),
//            NamedColor.CW_SAPPHIRE.hue(),
//            NamedColor.CW_PURPLE.hue()
//        };
//
//        for (int i = 0; i < 7; i++) {
//            palette[i+1] = getInt(floatGetHSV(0.078f, 0.05f, (i+0.5f)/7f, 1f));
//        }
//        for (int i = 0; i < 8; i++) {
//            float sm = 1.0625f, vm = (9.5f + ((i & 3))) * 0.1f;
//            if(i <= 1 || i == 4) sm -= 0.09375f;
//            if(i == 7 || i == 5) sm -= 0.125f;
//            if(i == 6) vm = 0.9875f;
//            if(i == 7) vm = 0.9375f;
//            palette[i+8]    = getInt(floatGetHSV(outer[i], sm * 0.375f, vm * 0.25f, 1f));
//            palette[i+8+8]  = getInt(floatGetHSV(outer[i], sm * 0.3f, vm * 0.4f, 1f));
//            palette[i+8+16] = getInt(floatGetHSV(outer[i], sm * 0.45f, vm * 0.55f, 1f));
//            palette[i+8+24] = getInt(floatGetHSV(outer[i], sm * 0.55f, vm * 0.75f, 1f));
//            palette[i+8+32] = getInt(floatGetHSV(outer[i], sm * 0.4f, vm * 0.9f, 1f));
//            palette[i+8+40] = getInt(floatGetHSV(lerpHue(outer[i], outer[i+1 & 7], 0.4f), sm * 0.5f, vm * 0.475f, 1f));
//            palette[i+8+48] = getInt(floatGetHSV(lerpHue(outer[i], outer[i-1 & 7], 0.4f), sm * 0.35f, vm * 0.65f, 1f));
//        }
        
//        palette = new int[217];
//        for (int r = 0, i = 1; r < 6; r++) {
//            for (int g = 0; g < 6; g++) {
//                for (int b = 0; b < 6; b++) {
//                    palette[i++] = (r * 0x330000 | g * 0x3300 | b * 0x33) << 8 | 0xFF;
//                }
//            }
//        }
//        palette = new int[] {0x080000FF,0x201A0BFF,0x432817FF,0x492910FF,
//                0x234309FF,0x5D4F1EFF,0x9C6B20FF,0xA9220FFF,
//                0x2B347CFF,0x2B7409FF,0xD0CA40FF,0xE8A077FF,
//                0x6A94ABFF,0xD5C4B3FF,0xFCE76EFF,0xFCFAE2FF };

//        palette = Coloring.MANOSSUS256;
//        palette = new int[256];
//        System.arraycopy(Coloring.MANOS64, 0, palette, 0, 64);
//        PaletteReducer reducer = new PaletteReducer(Coloring.MANOS64);
//        long state = 98765432123456789L;
//        IntArray colors = new IntArray(256);
//        colors.addAll(Coloring.MANOS64);
//        int[] items = colors.items;
//
//        for (int i = 1; i < 14; i++) {
//            int color = i * 0x12121200 + 0x111111FF;
//            int found = reducer.reduceSingle(color);
//            if (CIELABConverter.differenceLAB(color, found, 1.0, 1.5, 1.5) > 300)
//            {
//                colors.add(color);
//                reducer.exact(items, colors.size);
//            }
//        }
//        for (int i = 1; i < 5000; i++) {
//            int r = (int)(i * 0xD1B54A32D192ED03L >>> 56), g = (int)(i * 0xABC98388FB8FAC03L >>> 56), b = (int)(i * 0x8CB92BA72F3D8DD7L >>> 56),
//                    color = r << 24 | g << 16 | b << 8 | 0xFF;
//                            int found = reducer.reduceSingle(color);
//                            if (CIELABConverter.differenceLAB(color, found, 1.0, 1.5, 1.5) > 300)
//                            {
//                                colors.add(color);
//                                reducer.exact(items, colors.size);
//                            }
//                            if(colors.size >= 256)
//                                break;
//        }
//        if(colors.size < 256)
//            System.out.println("UH-OH, colors.size is " + colors.size);
//
//        System.arraycopy(items, 64, palette, 64, 192);
//        
        ArrayList<Integer> mixingPalette = new ArrayList<>(256);
        for (int i = 0; i < palette.length; i++) {
            mixingPalette.add(palette[i]);
        }
//
//        mixingPalette.subList(64, 256).sort(hueComparator);
//        ArrayList<Integer> mixingPalette = new ArrayList<>(256);
//        for (int i = 0; i < 256; i++) {
//            mixingPalette.add(i * 0x01010100 | 0xFF);
//        }

//        float hueAngle = 0.1f, sat;
//        //0.7548776662466927, 0.5698402909980532,   0.6180339887498949
//        for (int i = 0; i < 6; i++) {
//            sat = sin_((i / 5f) * 0.5f) * 0.05f * 2f;
////            sat = TrigTools.sin_((i / 5.0) * 0.5) * 12.0;
////            palette[1 + i] = CIELABConverter.rgba8888((i / 5.0) * 100.0, TrigTools.cos_(hueAngle) * sat, TrigTools.sin_(hueAngle) * sat);
////            palette[1 + i] = Color.rgba8888(NamedColor.ycwcm((i / 5f), TrigTools.zigzag(hueAngle) * sat, TrigTools.zigzag(0.5f + hueAngle) * sat, 1f));
//            palette[1 + i] = Color.rgba8888(NamedColor.ycwcm((i / 5f), cosMaybe(hueAngle) * sat, sinMaybe(hueAngle) * sat, 1f));
//            hueAngle += 0.6180339887498949;
//        }
//        for (int i = 1; i < 7; i++) {
//            sat = sin_(((i + 3f) / 13f) * 0.5f) * 0.125f * 2f;
////            sat = TrigTools.sin_(((i + 2.0) / 11.0) * 0.5) * 28.0;
////            palette[6 + i] = CIELABConverter.rgba8888((i / 7.0) * 100.0, TrigTools.cos_(hueAngle) * sat, TrigTools.sin_(hueAngle) * sat);
////            palette[6 + i] = Color.rgba8888(NamedColor.ycwcm(((i+2f) / 11f), TrigTools.zigzag(hueAngle) * sat, TrigTools.zigzag(0.5f + hueAngle) * sat, 1f));
//            palette[6 + i] = Color.rgba8888(NamedColor.ycwcm(((i+2f) / 11f), cosMaybe(hueAngle) * sat, sinMaybe(hueAngle) * sat, 1f));
//            hueAngle += 0.6180339887498949;
//        }
//        for (int i = 1; i < 20; i++) {
//            sat = sin_(((i + 6f) / 32f) * 0.5f) * 0.2f * 2f;
////            sat = TrigTools.sin_(((i + 5) / 30.0) * 0.5) * (44.0 + 10.0 * TrigTools.cos(i * Math.E));
////            palette[12 + i] = CIELABConverter.rgba8888(Math.pow((i+5) / 30.0, 0.75) * 100.0, TrigTools.cos_(hueAngle) * sat, TrigTools.sin_(hueAngle) * sat);
////            palette[12 + i] = Color.rgba8888(NamedColor.ycwcm((float)Math.pow((i+4f) / 28.0f, 0.75), TrigTools.zigzag(hueAngle) * sat, TrigTools.zigzag(0.5f + hueAngle) * sat, 1f));
//            palette[12 + i] = Color.rgba8888(NamedColor.ycwcm((float)Math.pow((i+4f) / 28.0f, 0.625), cosMaybe(hueAngle) * sat, sinMaybe(hueAngle) * sat, 1f));
//            hueAngle += 0.6180339887498949;
//        }
        StringBuilder sb = new StringBuilder(mixingPalette.size() * 7);
        for (int i = 1; i < mixingPalette.size(); i++) {
            sb.append(String.format("%06x\n", mixingPalette.get(i) >>> 8));
        }
        Gdx.files.local("palettes/hex/"+HexGenerator.NAME+".hex").writeString(sb.toString(), false);
        System.out.println("new int[] {");
        for (int i = 0; i < mixingPalette.size(); i++) {
            System.out.print("0x" + StringKit.hex(mixingPalette.get(i)) + ", ");
            if((i & 7) == 7)
                System.out.println();
        }
        System.out.println("};");
        Gdx.app.exit();
    }


    @Override
    public void render() {
        Gdx.gl.glClearColor(0.4f, 0.4f, 0.4f, 1f);
        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
    }

    private static float cosMaybe(float angle){
        return cos_(angle * 0.25f) * 0.375f + TrigTools.cosq(angle - 0.5f) * 0.625f;
    }
    //3.141592653589793f
    private static float sinMaybe(float angle){
        return sin_(angle * 0.25f) * 0.375f + TrigTools.sinq(angle - 0.5f) * 0.625f;
    }

    private static int getInt(float color){
        final int c = FloatColorTools.floatToInt(color);
        return c | (c >>> 7 & 1);
    }
    public static float lerpHue (float from, float to, float progress) {
        to += 1.5f - from;
        to -= 0.5f + (int)to;
        from += to * progress + 1f;
        return from - (int)from;
        /*
        fract((fract(to + 0.5 - from) - 0.5) * progress + from)
         */
    }

}
